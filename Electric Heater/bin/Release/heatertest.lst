gplink-1.5.0 #1285 (Sep 12 2016)
Copyright (c) 1998-2016 gputils project
Listing File Generated: 7-14-2020  05:24:34


Address  Value    Disassembly              Source
-------  -----    -----------              ------
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.5.0 #9253 (Jun 20 2015) (MINGW32)
                                           ; This file was generated Fri Jul 03 11:35:51 2020
                                           ;--------------------------------------------------------
                                           ; PIC port for the 14-bit core
                                           ;--------------------------------------------------------
                                           ;	.file	"adc.c"
                                           	list	p=16f877a
                                           	radix dec
                                           	include "p16f877a.inc"
                                                   LIST

                                           ;==========================================================================
                                           ; Build date : Oct 21 2015
                                           ;  MPASM PIC16F877A processor include
                                           ; 
                                           ;  (c) Copyright 1999-2015 Microchip Technology, All rights reserved
                                           ;==========================================================================

                                                   NOLIST
                                           ;--------------------------------------------------------
                                           ; external declarations
                                           ;--------------------------------------------------------
                                           	extern	_STATUSbits
                                           	extern	_PORTAbits
                                           	extern	_PORTBbits
                                           	extern	_PORTCbits
                                           	extern	_PORTDbits
                                           	extern	_PORTEbits
                                           	extern	_INTCONbits
                                           	extern	_PIR1bits
                                           	extern	_PIR2bits
                                           	extern	_T1CONbits
                                           	extern	_T2CONbits
                                           	extern	_SSPCONbits
                                           	extern	_CCP1CONbits
                                           	extern	_RCSTAbits
                                           	extern	_CCP2CONbits
                                           	extern	_ADCON0bits
                                           	extern	_OPTION_REGbits
                                           	extern	_TRISAbits
                                           	extern	_TRISBbits
                                           	extern	_TRISCbits
                                           	extern	_TRISDbits
                                           	extern	_TRISEbits
                                           	extern	_PIE1bits
                                           	extern	_PIE2bits
                                           	extern	_PCONbits
                                           	extern	_SSPCON2bits
                                           	extern	_SSPSTATbits
                                           	extern	_TXSTAbits
                                           	extern	_CMCONbits
                                           	extern	_CVRCONbits
                                           	extern	_ADCON1bits
                                           	extern	_EECON1bits
                                           	extern	_INDF
                                           	extern	_TMR0
                                           	extern	_PCL
                                           	extern	_STATUS
                                           	extern	_FSR
                                           	extern	_PORTA
                                           	extern	_PORTB
                                           	extern	_PORTC
                                           	extern	_PORTD
                                           	extern	_PORTE
                                           	extern	_PCLATH
                                           	extern	_INTCON
                                           	extern	_PIR1
                                           	extern	_PIR2
                                           	extern	_TMR1
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_T1CON
                                           	extern	_TMR2
                                           	extern	_T2CON
                                           	extern	_SSPBUF
                                           	extern	_SSPCON
                                           	extern	_CCPR1
                                           	extern	_CCPR1L
                                           	extern	_CCPR1H
                                           	extern	_CCP1CON
                                           	extern	_RCSTA
                                           	extern	_TXREG
                                           	extern	_RCREG
                                           	extern	_CCPR2
                                           	extern	_CCPR2L
                                           	extern	_CCPR2H
                                           	extern	_CCP2CON
                                           	extern	_ADRESH
                                           	extern	_ADCON0
                                           	extern	_OPTION_REG
                                           	extern	_TRISA
                                           	extern	_TRISB
                                           	extern	_TRISC
                                           	extern	_TRISD
                                           	extern	_TRISE
                                           	extern	_PIE1
                                           	extern	_PIE2
                                           	extern	_PCON
                                           	extern	_SSPCON2
                                           	extern	_PR2
                                           	extern	_SSPADD
                                           	extern	_SSPSTAT
                                           	extern	_TXSTA
                                           	extern	_SPBRG
                                           	extern	_CMCON
                                           	extern	_CVRCON
                                           	extern	_ADRESL
                                           	extern	_ADCON1
                                           	extern	_EEDATA
                                           	extern	_EEADR
                                           	extern	_EEDATH
                                           	extern	_EEADRH
                                           	extern	_EECON1
                                           	extern	_EECON2

                                           	extern PSAVE
                                           	extern SSAVE
                                           	extern WSAVE
                                           	extern STK12
                                           	extern STK11
                                           	extern STK10
                                           	extern STK09
                                           	extern STK08
                                           	extern STK07
                                           	extern STK06
                                           	extern STK05
                                           	extern STK04
                                           	extern STK03
                                           	extern STK02
                                           	extern STK01
                                           	extern STK00
                                           ;--------------------------------------------------------
                                           ; global declarations
                                           ;--------------------------------------------------------
                                           	global	_adc_convert
                                           	global	_adc_init

                                           ;--------------------------------------------------------
                                           ; global definitions
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; absolute symbol definitions
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; compiler-defined variables
                                           ;--------------------------------------------------------
                                           UDL_adc_0	udata
                                           r0x1000	res	1
                                           r0x1001	res	1
                                           r0x1002	res	1
                                           r0x1003	res	1
                                           ;--------------------------------------------------------
                                           ; initialized data
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; overlayable items in internal ram 
                                           ;--------------------------------------------------------
                                           ;	udata_ovr
                                           ;--------------------------------------------------------
                                           ; code
                                           ;--------------------------------------------------------
                                           code_adc	code
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _adc_convert	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;7 compiler assigned registers:
                                           ;   r0x1000
                                           ;   r0x1001
                                           ;   r0x1002
                                           ;   r0x1003
                                           ;   r0x1004
                                           ;   r0x1005
                                           ;   STK00
                                           ;; Starting pCode block
                                           _adc_convert	;Function start
                                           ; 2 exit points
                                           ;	.line	12; "adc.c"	ADCON0|=(1<<2);  //channel 2 which is connected to lm35
000d8d   1283     bcf     0x03, 0x5        	BANKSEL	_ADCON0
000d8e   1303     bcf     0x03, 0x6        
000d8f   151f     bsf     0x1f, 0x2        	BSF	_ADCON0,2
                                           ;	.line	18; "adc.c"	return (((((unsigned int)ADRESH)<<2)|(ADRESL>>6)));
000d90   081e     movf    0x1e, 0x0        	MOVF	_ADRESH,W
000d91   1283     bcf     0x03, 0x5        	BANKSEL	r0x1000
000d92   1703     bsf     0x03, 0x6        
000d93   00c0     movwf   0x40             	MOVWF	r0x1000
000d94   01c1     clrf    0x41             	CLRF	r0x1001
000d95   1003     bcf     0x03, 0x0        	BCF	STATUS,0
000d96   0d40     rlf     0x40, 0x0        	RLF	r0x1000,W
000d97   00c2     movwf   0x42             	MOVWF	r0x1002
000d98   0d41     rlf     0x41, 0x0        	RLF	r0x1001,W
000d99   00c3     movwf   0x43             	MOVWF	r0x1003
000d9a   1003     bcf     0x03, 0x0        	BCF	STATUS,0
000d9b   0dc2     rlf     0x42, 0x1        	RLF	r0x1002,F
000d9c   0dc3     rlf     0x43, 0x1        	RLF	r0x1003,F
000d9d   1683     bsf     0x03, 0x5        	BANKSEL	_ADRESL
000d9e   1303     bcf     0x03, 0x6        
000d9f   0e1e     swapf   0x1e, 0x0        	SWAPF	_ADRESL,W
000da0   390f     andlw   0x0f             	ANDLW	0x0f
000da1   1283     bcf     0x03, 0x5        	BANKSEL	r0x1000
000da2   1703     bsf     0x03, 0x6        
000da3   00c0     movwf   0x40             	MOVWF	r0x1000
                                           ;;shiftRight_Left2ResultLit:5273: shCount=1, size=1, sign=0, same=1, offr=0
000da4   1003     bcf     0x03, 0x0        	BCF	STATUS,0
000da5   0cc0     rrf     0x40, 0x1        	RRF	r0x1000,F
                                           ;;shiftRight_Left2ResultLit:5273: shCount=1, size=1, sign=0, same=1, offr=0
000da6   1003     bcf     0x03, 0x0        	BCF	STATUS,0
000da7   0cc0     rrf     0x40, 0x1        	RRF	r0x1000,F
                                           ;;101	MOVF	r0x1000,W
                                           ;;99	MOVWF	r0x1004
                                           ;;1	CLRF	r0x1005
                                           ;;100	MOVF	r0x1004,W
000da8   0840     movf    0x40, 0x0        	MOVF	r0x1000,W
000da9   04c2     iorwf   0x42, 0x1        	IORWF	r0x1002,F
000daa   3000     movlw   0x00             	MOVLW	0x00
000dab   04c3     iorwf   0x43, 0x1        	IORWF	r0x1003,F
000dac   0842     movf    0x42, 0x0        	MOVF	r0x1002,W
000dad   00ff     movwf   0x7f             	MOVWF	STK00
000dae   0843     movf    0x43, 0x0        	MOVF	r0x1003,W
000daf   0008     return                   	RETURN	
                                           ; exit point of _adc_convert

                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _adc_init	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;; Starting pCode block
                                           _adc_init	;Function start
                                           ; 2 exit points
                                           ;	.line	6; "adc.c"	ADCON1|=0x02;
000db0   1683     bsf     0x03, 0x5        	BANKSEL	_ADCON1
000db1   1303     bcf     0x03, 0x6        
000db2   149f     bsf     0x1f, 0x1        	BSF	_ADCON1,1
                                           ;	.line	7; "adc.c"	ADCON0|=0x51;
000db3   3051     movlw   0x51             	MOVLW	0x51
000db4   1283     bcf     0x03, 0x5        	BANKSEL	_ADCON0
000db5   1303     bcf     0x03, 0x6        
000db6   049f     iorwf   0x1f, 0x1        	IORWF	_ADCON0,F
000db7   0008     return                   	RETURN	
                                           ; exit point of _adc_init


                                           ;	code size estimation:
                                           ;	   31+    6 =    37 instructions (   86 byte)

                                           	end
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.5.0 #9253 (Jun 20 2015) (MINGW32)
                                           ; This file was generated Sat Jul 04 19:11:46 2020
                                           ;--------------------------------------------------------
                                           ; PIC port for the 14-bit core
                                           ;--------------------------------------------------------
                                           ;	.file	"display.c"
                                           	list	p=16f877a
                                           	radix dec
                                           	include "p16f877a.inc"
                                                   LIST

                                           ;==========================================================================
                                           ; Build date : Oct 21 2015
                                           ;  MPASM PIC16F877A processor include
                                           ; 
                                           ;  (c) Copyright 1999-2015 Microchip Technology, All rights reserved
                                           ;==========================================================================

                                                   NOLIST
                                           ;--------------------------------------------------------
                                           ; external declarations
                                           ;--------------------------------------------------------
                                           	extern	_SSD_Init
                                           	extern	_SSD_Update
                                           	extern	_SSD_SetValue
                                           	extern	_SSD_GetValue
                                           	extern	_SSD_GetState
                                           	extern	_SSD_SetState
                                           	extern	_SSD_SetDotState
                                           	extern	_tempset_init
                                           	extern	_tempset_setstate
                                           	extern	_tempset_settemp
                                           	extern	_tempset_getstate
                                           	extern	_tempset_gettemp
                                           	extern	_tempset_update
                                           	extern	_TMR_Init
                                           	extern	_TMR_Start
                                           	extern	_TMR_CheckOverFlow
                                           	extern	_TMR_Stop
                                           	extern	_TMR_Update
                                           	extern	__moduint
                                           	extern	__divuint
                                           	extern	_STATUSbits
                                           	extern	_PORTAbits
                                           	extern	_PORTBbits
                                           	extern	_PORTCbits
                                           	extern	_PORTDbits
                                           	extern	_PORTEbits
                                           	extern	_INTCONbits
                                           	extern	_PIR1bits
                                           	extern	_PIR2bits
                                           	extern	_T1CONbits
                                           	extern	_T2CONbits
                                           	extern	_SSPCONbits
                                           	extern	_CCP1CONbits
                                           	extern	_RCSTAbits
                                           	extern	_CCP2CONbits
                                           	extern	_ADCON0bits
                                           	extern	_OPTION_REGbits
                                           	extern	_TRISAbits
                                           	extern	_TRISBbits
                                           	extern	_TRISCbits
                                           	extern	_TRISDbits
                                           	extern	_TRISEbits
                                           	extern	_PIE1bits
                                           	extern	_PIE2bits
                                           	extern	_PCONbits
                                           	extern	_SSPCON2bits
                                           	extern	_SSPSTATbits
                                           	extern	_TXSTAbits
                                           	extern	_CMCONbits
                                           	extern	_CVRCONbits
                                           	extern	_ADCON1bits
                                           	extern	_EECON1bits
                                           	extern	_INDF
                                           	extern	_TMR0
                                           	extern	_PCL
                                           	extern	_STATUS
                                           	extern	_FSR
                                           	extern	_PORTA
                                           	extern	_PORTB
                                           	extern	_PORTC
                                           	extern	_PORTD
                                           	extern	_PORTE
                                           	extern	_PCLATH
                                           	extern	_INTCON
                                           	extern	_PIR1
                                           	extern	_PIR2
                                           	extern	_TMR1
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_T1CON
                                           	extern	_TMR2
                                           	extern	_T2CON
                                           	extern	_SSPBUF
                                           	extern	_SSPCON
                                           	extern	_CCPR1
                                           	extern	_CCPR1L
                                           	extern	_CCPR1H
                                           	extern	_CCP1CON
                                           	extern	_RCSTA
                                           	extern	_TXREG
                                           	extern	_RCREG
                                           	extern	_CCPR2
                                           	extern	_CCPR2L
                                           	extern	_CCPR2H
                                           	extern	_CCP2CON
                                           	extern	_ADRESH
                                           	extern	_ADCON0
                                           	extern	_OPTION_REG
                                           	extern	_TRISA
                                           	extern	_TRISB
                                           	extern	_TRISC
                                           	extern	_TRISD
                                           	extern	_TRISE
                                           	extern	_PIE1
                                           	extern	_PIE2
                                           	extern	_PCON
                                           	extern	_SSPCON2
                                           	extern	_PR2
                                           	extern	_SSPADD
                                           	extern	_SSPSTAT
                                           	extern	_TXSTA
                                           	extern	_SPBRG
                                           	extern	_CMCON
                                           	extern	_CVRCON
                                           	extern	_ADRESL
                                           	extern	_ADCON1
                                           	extern	_EEDATA
                                           	extern	_EEADR
                                           	extern	_EEDATH
                                           	extern	_EEADRH
                                           	extern	_EECON1
                                           	extern	_EECON2

                                           	extern PSAVE
                                           	extern SSAVE
                                           	extern WSAVE
                                           	extern STK12
                                           	extern STK11
                                           	extern STK10
                                           	extern STK09
                                           	extern STK08
                                           	extern STK07
                                           	extern STK06
                                           	extern STK05
                                           	extern STK04
                                           	extern STK03
                                           	extern STK02
                                           	extern STK01
                                           	extern STK00
                                           ;--------------------------------------------------------
                                           ; global declarations
                                           ;--------------------------------------------------------
                                           	global	_display_update
                                           	global	_display_init

                                           ;--------------------------------------------------------
                                           ; global definitions
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; absolute symbol definitions
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; compiler-defined variables
                                           ;--------------------------------------------------------
                                           UDL_display_0	udata
                                           r0x100A	res	1
                                           r0x1009	res	1
                                           r0x100B	res	1
                                           r0x1005	res	1
                                           r0x1004	res	1
                                           r0x1006	res	1
                                           _display_update_periodcount_1_25	res	2
                                           _display_update_blinkcnt_1_25	res	2
                                           ;--------------------------------------------------------
                                           ; initialized data
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; overlayable items in internal ram 
                                           ;--------------------------------------------------------
                                           ;	udata_ovr
                                           ;--------------------------------------------------------
                                           ; code
                                           ;--------------------------------------------------------
                                           code_display	code
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _display_blink	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;functions called:
                                           ;   _SSD_GetValue
                                           ;   __moduint
                                           ;   _SSD_SetValue
                                           ;   __divuint
                                           ;   _SSD_SetValue
                                           ;   _SSD_SetValue
                                           ;   _SSD_SetValue
                                           ;   _SSD_GetValue
                                           ;   __moduint
                                           ;   _SSD_SetValue
                                           ;   __divuint
                                           ;   _SSD_SetValue
                                           ;   _SSD_SetValue
                                           ;   _SSD_SetValue
                                           ;8 compiler assigned registers:
                                           ;   r0x1004
                                           ;   STK00
                                           ;   r0x1005
                                           ;   r0x1006
                                           ;   STK02
                                           ;   STK01
                                           ;   r0x1007
                                           ;   r0x1008
                                           ;; Starting pCode block
                                           _display_blink	;Function start
                                           ; 2 exit points
                                           ;	.line	69; "display.c"	static void display_blink(tWord temp)
000a87   1283     bcf     0x03, 0x5        	BANKSEL	r0x1004
000a88   1703     bsf     0x03, 0x6        
000a89   009f     movwf   0x1f             	MOVWF	r0x1004
000a8a   087f     movf    0x7f, 0x0        	MOVF	STK00,W
000a8b   009e     movwf   0x1e             	MOVWF	r0x1005
                                           ;	.line	72; "display.c"	if (SSD_GetValue(SSD_UNITS) == SSD_NULL)
000a8c   3000     movlw   0x00             	MOVLW	0x00
000a8d   118a     bcf     0x0a, 0x3        	PAGESEL	_SSD_GetValue
000a8e   120a     bcf     0x0a, 0x4        
000a8f   2372     call    0x0372           	CALL	_SSD_GetValue
000a90   158a     bsf     0x0a, 0x3        	PAGESEL	$
000a91   120a     bcf     0x0a, 0x4        
000a92   1283     bcf     0x03, 0x5        	BANKSEL	r0x1006
000a93   1703     bsf     0x03, 0x6        
000a94   00a0     movwf   0x20             	MOVWF	r0x1006
000a95   3a0a     xorlw   0x0a             	XORLW	0x0a
000a96   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
000a97   2acb     goto    0x02cb           	GOTO	_00138_DS_
                                           ;	.line	74; "display.c"	SSD_SetValue(SSD_UNITS, temp%10);
000a98   300a     movlw   0x0a             	MOVLW	0x0a
000a99   00fd     movwf   0x7d             	MOVWF	STK02
000a9a   3000     movlw   0x00             	MOVLW	0x00
000a9b   00fe     movwf   0x7e             	MOVWF	STK01
000a9c   081e     movf    0x1e, 0x0        	MOVF	r0x1005,W
000a9d   00ff     movwf   0x7f             	MOVWF	STK00
000a9e   081f     movf    0x1f, 0x0        	MOVF	r0x1004,W
000a9f   158a     bsf     0x0a, 0x3        	PAGESEL	__moduint
000aa0   120a     bcf     0x0a, 0x4        
000aa1   2516     call    0x0516           	CALL	__moduint
000aa2   158a     bsf     0x0a, 0x3        	PAGESEL	$
000aa3   120a     bcf     0x0a, 0x4        
                                           ;;1	MOVWF	r0x1007
000aa4   087f     movf    0x7f, 0x0        	MOVF	STK00,W
000aa5   1283     bcf     0x03, 0x5        	BANKSEL	r0x1006
000aa6   1703     bsf     0x03, 0x6        
000aa7   00a0     movwf   0x20             	MOVWF	r0x1006
                                           ;;1	MOVWF	r0x1008
000aa8   00ff     movwf   0x7f             	MOVWF	STK00
000aa9   3000     movlw   0x00             	MOVLW	0x00
000aaa   118a     bcf     0x0a, 0x3        	PAGESEL	_SSD_SetValue
000aab   120a     bcf     0x0a, 0x4        
000aac   2358     call    0x0358           	CALL	_SSD_SetValue
000aad   158a     bsf     0x0a, 0x3        	PAGESEL	$
000aae   120a     bcf     0x0a, 0x4        
                                           ;	.line	75; "display.c"	SSD_SetValue(SSD_TENS, temp/10);
000aaf   300a     movlw   0x0a             	MOVLW	0x0a
000ab0   00fd     movwf   0x7d             	MOVWF	STK02
000ab1   3000     movlw   0x00             	MOVLW	0x00
000ab2   00fe     movwf   0x7e             	MOVWF	STK01
000ab3   1283     bcf     0x03, 0x5        	BANKSEL	r0x1005
000ab4   1703     bsf     0x03, 0x6        
000ab5   081e     movf    0x1e, 0x0        	MOVF	r0x1005,W
000ab6   00ff     movwf   0x7f             	MOVWF	STK00
000ab7   081f     movf    0x1f, 0x0        	MOVF	r0x1004,W
000ab8   118a     bcf     0x0a, 0x3        	PAGESEL	__divuint
000ab9   120a     bcf     0x0a, 0x4        
000aba   27aa     call    0x07aa           	CALL	__divuint
000abb   158a     bsf     0x0a, 0x3        	PAGESEL	$
000abc   120a     bcf     0x0a, 0x4        
000abd   1283     bcf     0x03, 0x5        	BANKSEL	r0x1004
000abe   1703     bsf     0x03, 0x6        
000abf   009f     movwf   0x1f             	MOVWF	r0x1004
000ac0   087f     movf    0x7f, 0x0        	MOVF	STK00,W
000ac1   009e     movwf   0x1e             	MOVWF	r0x1005
000ac2   00a0     movwf   0x20             	MOVWF	r0x1006
000ac3   00ff     movwf   0x7f             	MOVWF	STK00
000ac4   3001     movlw   0x01             	MOVLW	0x01
000ac5   118a     bcf     0x0a, 0x3        	PAGESEL	_SSD_SetValue
000ac6   120a     bcf     0x0a, 0x4        
000ac7   2358     call    0x0358           	CALL	_SSD_SetValue
000ac8   158a     bsf     0x0a, 0x3        	PAGESEL	$
000ac9   120a     bcf     0x0a, 0x4        
000aca   2adb     goto    0x02db           	GOTO	_00140_DS_
                                           _00138_DS_
                                           ;	.line	78; "display.c"	SSD_SetValue(SSD_UNITS, SSD_NULL);
000acb   300a     movlw   0x0a             	MOVLW	0x0a
000acc   00ff     movwf   0x7f             	MOVWF	STK00
000acd   3000     movlw   0x00             	MOVLW	0x00
000ace   118a     bcf     0x0a, 0x3        	PAGESEL	_SSD_SetValue
000acf   120a     bcf     0x0a, 0x4        
000ad0   2358     call    0x0358           	CALL	_SSD_SetValue
000ad1   158a     bsf     0x0a, 0x3        	PAGESEL	$
000ad2   120a     bcf     0x0a, 0x4        
                                           ;	.line	79; "display.c"	SSD_SetValue(SSD_TENS, SSD_NULL);
000ad3   300a     movlw   0x0a             	MOVLW	0x0a
000ad4   00ff     movwf   0x7f             	MOVWF	STK00
000ad5   3001     movlw   0x01             	MOVLW	0x01
000ad6   118a     bcf     0x0a, 0x3        	PAGESEL	_SSD_SetValue
000ad7   120a     bcf     0x0a, 0x4        
000ad8   2358     call    0x0358           	CALL	_SSD_SetValue
000ad9   158a     bsf     0x0a, 0x3        	PAGESEL	$
000ada   120a     bcf     0x0a, 0x4        
                                           _00140_DS_
000adb   0008     return                   	RETURN	
                                           ; exit point of _display_blink

                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _display_update	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;functions called:
                                           ;   _tempset_gettemp
                                           ;   _tempset_getstate
                                           ;   _SSD_SetValue
                                           ;   _SSD_SetValue
                                           ;   _display_blink
                                           ;   __moduint
                                           ;   _SSD_SetValue
                                           ;   __divuint
                                           ;   _SSD_SetValue
                                           ;   _tempset_gettemp
                                           ;   _tempset_getstate
                                           ;   _SSD_SetValue
                                           ;   _SSD_SetValue
                                           ;   _display_blink
                                           ;   __moduint
                                           ;   _SSD_SetValue
                                           ;   __divuint
                                           ;   _SSD_SetValue
                                           ;8 compiler assigned registers:
                                           ;   r0x1009
                                           ;   STK00
                                           ;   r0x100A
                                           ;   r0x100B
                                           ;   STK02
                                           ;   STK01
                                           ;   r0x100C
                                           ;   r0x100D
                                           ;; Starting pCode block
                                           _display_update	;Function start
                                           ; 2 exit points
                                           ;	.line	27; "display.c"	periodcount+=TMR_TICK_MS;
000adc   3014     movlw   0x14             	MOVLW	0x14
000add   1283     bcf     0x03, 0x5        	BANKSEL	_display_update_periodcount_1_25
000ade   1703     bsf     0x03, 0x6        
000adf   07a1     addwf   0x21, 0x1        	ADDWF	_display_update_periodcount_1_25,F
000ae0   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
000ae1   0aa2     incf    0x22, 0x1        	INCF	(_display_update_periodcount_1_25 + 1),F
                                           ;	.line	29; "display.c"	if(periodcount!=taskperiod)
000ae2   0821     movf    0x21, 0x0        	MOVF	_display_update_periodcount_1_25,W
000ae3   3a14     xorlw   0x14             	XORLW	0x14
000ae4   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
000ae5   2ae9     goto    0x02e9           	GOTO	_00130_DS_
000ae6   0822     movf    0x22, 0x0        	MOVF	(_display_update_periodcount_1_25 + 1),W
                                           ;	.line	31; "display.c"	return ;
000ae7   3a00     xorlw   0x00             	XORLW	0x00
                                           ;	.line	33; "display.c"	periodcount=0;
000ae8   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
                                           _00130_DS_
000ae9   2b7d     goto    0x037d           	GOTO	_00119_DS_
000aea   1283     bcf     0x03, 0x5        	BANKSEL	_display_update_periodcount_1_25
000aeb   1703     bsf     0x03, 0x6        
000aec   01a1     clrf    0x21             	CLRF	_display_update_periodcount_1_25
000aed   01a2     clrf    0x22             	CLRF	(_display_update_periodcount_1_25 + 1)
                                           ;	.line	35; "display.c"	temprature=tempset_gettemp();
000aee   118a     bcf     0x0a, 0x3        	PAGESEL	_tempset_gettemp
000aef   120a     bcf     0x0a, 0x4        
000af0   2575     call    0x0575           	CALL	_tempset_gettemp
000af1   158a     bsf     0x0a, 0x3        	PAGESEL	$
000af2   120a     bcf     0x0a, 0x4        
000af3   1283     bcf     0x03, 0x5        	BANKSEL	r0x1009
000af4   1703     bsf     0x03, 0x6        
000af5   009c     movwf   0x1c             	MOVWF	r0x1009
000af6   087f     movf    0x7f, 0x0        	MOVF	STK00,W
000af7   009b     movwf   0x1b             	MOVWF	r0x100A
                                           ;	.line	36; "display.c"	blinkcnt+=TMR_TICK_MS;
000af8   3014     movlw   0x14             	MOVLW	0x14
000af9   1283     bcf     0x03, 0x5        	BANKSEL	_display_update_blinkcnt_1_25
000afa   1703     bsf     0x03, 0x6        
000afb   07a3     addwf   0x23, 0x1        	ADDWF	_display_update_blinkcnt_1_25,F
000afc   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
000afd   0aa4     incf    0x24, 0x1        	INCF	(_display_update_blinkcnt_1_25 + 1),F
                                           ;	.line	38; "display.c"	if(blinkcnt==blinkperiod)
000afe   0823     movf    0x23, 0x0        	MOVF	_display_update_blinkcnt_1_25,W
000aff   3ae8     xorlw   0xe8             	XORLW	0xe8
000b00   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
000b01   2b7d     goto    0x037d           	GOTO	_00119_DS_
000b02   0824     movf    0x24, 0x0        	MOVF	(_display_update_blinkcnt_1_25 + 1),W
000b03   3a03     xorlw   0x03             	XORLW	0x03
000b04   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
000b05   2b7d     goto    0x037d           	GOTO	_00119_DS_
                                           ;	.line	40; "display.c"	switch(tempset_getstate())
000b06   118a     bcf     0x0a, 0x3        	PAGESEL	_tempset_getstate
000b07   120a     bcf     0x0a, 0x4        
000b08   257b     call    0x057b           	CALL	_tempset_getstate
000b09   158a     bsf     0x0a, 0x3        	PAGESEL	$
000b0a   120a     bcf     0x0a, 0x4        
000b0b   1283     bcf     0x03, 0x5        	BANKSEL	r0x100B
000b0c   1703     bsf     0x03, 0x6        
000b0d   009d     movwf   0x1d             	MOVWF	r0x100B
                                           ;;swapping arguments (AOP_TYPEs 1/2)
                                           ;;unsigned compare: left >= lit(0x4=4), size=1
000b0e   3004     movlw   0x04             	MOVLW	0x04
000b0f   021d     subwf   0x1d, 0x0        	SUBWF	r0x100B,W
000b10   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
000b11   2b7d     goto    0x037d           	GOTO	_00119_DS_
                                           ;;genSkipc:3247: created from rifx:027A5E04
000b12   300b     movlw   0x0b             	MOVLW	HIGH(_00132_DS_)
000b13   1283     bcf     0x03, 0x5        	BANKSEL	PCLATH
000b14   1303     bcf     0x03, 0x6        
000b15   008a     movwf   0x0a             	MOVWF	PCLATH
000b16   3020     movlw   0x20             	MOVLW	_00132_DS_
000b17   1283     bcf     0x03, 0x5        	BANKSEL	r0x100B
000b18   1703     bsf     0x03, 0x6        
000b19   071d     addwf   0x1d, 0x0        	ADDWF	r0x100B,W
000b1a   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
000b1b   2b1f     goto    0x031f           	GOTO	_00001_DS_
000b1c   1283     bcf     0x03, 0x5        	BANKSEL	PCLATH
000b1d   1303     bcf     0x03, 0x6        
000b1e   0a8a     incf    0x0a, 0x1        	INCF	PCLATH,F
                                           _00001_DS_
000b1f   0082     movwf   0x02             	MOVWF	PCL
                                           _00132_DS_
000b20   2b24     goto    0x0324           	GOTO	_00111_DS_
000b21   2b39     goto    0x0339           	GOTO	_00112_DS_
000b22   2b44     goto    0x0344           	GOTO	_00113_DS_
000b23   2b79     goto    0x0379           	GOTO	_00114_DS_
                                           _00111_DS_
                                           ;	.line	43; "display.c"	SSD_SetValue(SSD_UNITS,0);
000b24   3000     movlw   0x00             	MOVLW	0x00
000b25   00ff     movwf   0x7f             	MOVWF	STK00
000b26   3000     movlw   0x00             	MOVLW	0x00
000b27   118a     bcf     0x0a, 0x3        	PAGESEL	_SSD_SetValue
000b28   120a     bcf     0x0a, 0x4        
000b29   2358     call    0x0358           	CALL	_SSD_SetValue
000b2a   158a     bsf     0x0a, 0x3        	PAGESEL	$
000b2b   120a     bcf     0x0a, 0x4        
                                           ;	.line	44; "display.c"	SSD_SetValue(SSD_TENS,0);
000b2c   3000     movlw   0x00             	MOVLW	0x00
000b2d   00ff     movwf   0x7f             	MOVWF	STK00
000b2e   3001     movlw   0x01             	MOVLW	0x01
000b2f   118a     bcf     0x0a, 0x3        	PAGESEL	_SSD_SetValue
000b30   120a     bcf     0x0a, 0x4        
000b31   2358     call    0x0358           	CALL	_SSD_SetValue
000b32   158a     bsf     0x0a, 0x3        	PAGESEL	$
000b33   120a     bcf     0x0a, 0x4        
                                           ;	.line	45; "display.c"	blinkcnt=0;
000b34   1283     bcf     0x03, 0x5        	BANKSEL	_display_update_blinkcnt_1_25
000b35   1703     bsf     0x03, 0x6        
000b36   01a3     clrf    0x23             	CLRF	_display_update_blinkcnt_1_25
000b37   01a4     clrf    0x24             	CLRF	(_display_update_blinkcnt_1_25 + 1)
                                           ;	.line	46; "display.c"	break;
000b38   2b7d     goto    0x037d           	GOTO	_00119_DS_
                                           _00112_DS_
                                           ;	.line	49; "display.c"	blinkcnt=0;
000b39   1283     bcf     0x03, 0x5        	BANKSEL	_display_update_blinkcnt_1_25
000b3a   1703     bsf     0x03, 0x6        
000b3b   01a3     clrf    0x23             	CLRF	_display_update_blinkcnt_1_25
000b3c   01a4     clrf    0x24             	CLRF	(_display_update_blinkcnt_1_25 + 1)
                                           ;	.line	50; "display.c"	display_blink(temprature);
000b3d   1283     bcf     0x03, 0x5        	BANKSEL	r0x100A
000b3e   1703     bsf     0x03, 0x6        
000b3f   081b     movf    0x1b, 0x0        	MOVF	r0x100A,W
000b40   00ff     movwf   0x7f             	MOVWF	STK00
000b41   081c     movf    0x1c, 0x0        	MOVF	r0x1009,W
000b42   2287     call    0x0287           	CALL	_display_blink
                                           ;	.line	51; "display.c"	break;
000b43   2b7d     goto    0x037d           	GOTO	_00119_DS_
                                           _00113_DS_
                                           ;	.line	54; "display.c"	SSD_SetValue(SSD_UNITS,temprature%10);
000b44   300a     movlw   0x0a             	MOVLW	0x0a
000b45   00fd     movwf   0x7d             	MOVWF	STK02
000b46   3000     movlw   0x00             	MOVLW	0x00
000b47   00fe     movwf   0x7e             	MOVWF	STK01
000b48   1283     bcf     0x03, 0x5        	BANKSEL	r0x100A
000b49   1703     bsf     0x03, 0x6        
000b4a   081b     movf    0x1b, 0x0        	MOVF	r0x100A,W
000b4b   00ff     movwf   0x7f             	MOVWF	STK00
000b4c   081c     movf    0x1c, 0x0        	MOVF	r0x1009,W
000b4d   158a     bsf     0x0a, 0x3        	PAGESEL	__moduint
000b4e   120a     bcf     0x0a, 0x4        
000b4f   2516     call    0x0516           	CALL	__moduint
000b50   158a     bsf     0x0a, 0x3        	PAGESEL	$
000b51   120a     bcf     0x0a, 0x4        
                                           ;;1	MOVWF	r0x100C
000b52   087f     movf    0x7f, 0x0        	MOVF	STK00,W
000b53   1283     bcf     0x03, 0x5        	BANKSEL	r0x100B
000b54   1703     bsf     0x03, 0x6        
000b55   009d     movwf   0x1d             	MOVWF	r0x100B
                                           ;;1	MOVWF	r0x100D
000b56   00ff     movwf   0x7f             	MOVWF	STK00
000b57   3000     movlw   0x00             	MOVLW	0x00
000b58   118a     bcf     0x0a, 0x3        	PAGESEL	_SSD_SetValue
000b59   120a     bcf     0x0a, 0x4        
000b5a   2358     call    0x0358           	CALL	_SSD_SetValue
000b5b   158a     bsf     0x0a, 0x3        	PAGESEL	$
000b5c   120a     bcf     0x0a, 0x4        
                                           ;	.line	55; "display.c"	SSD_SetValue(SSD_TENS,temprature/10);
000b5d   300a     movlw   0x0a             	MOVLW	0x0a
000b5e   00fd     movwf   0x7d             	MOVWF	STK02
000b5f   3000     movlw   0x00             	MOVLW	0x00
000b60   00fe     movwf   0x7e             	MOVWF	STK01
000b61   1283     bcf     0x03, 0x5        	BANKSEL	r0x100A
000b62   1703     bsf     0x03, 0x6        
000b63   081b     movf    0x1b, 0x0        	MOVF	r0x100A,W
000b64   00ff     movwf   0x7f             	MOVWF	STK00
000b65   081c     movf    0x1c, 0x0        	MOVF	r0x1009,W
000b66   118a     bcf     0x0a, 0x3        	PAGESEL	__divuint
000b67   120a     bcf     0x0a, 0x4        
000b68   27aa     call    0x07aa           	CALL	__divuint
000b69   158a     bsf     0x0a, 0x3        	PAGESEL	$
000b6a   120a     bcf     0x0a, 0x4        
000b6b   1283     bcf     0x03, 0x5        	BANKSEL	r0x1009
000b6c   1703     bsf     0x03, 0x6        
000b6d   009c     movwf   0x1c             	MOVWF	r0x1009
000b6e   087f     movf    0x7f, 0x0        	MOVF	STK00,W
000b6f   009b     movwf   0x1b             	MOVWF	r0x100A
000b70   009d     movwf   0x1d             	MOVWF	r0x100B
000b71   00ff     movwf   0x7f             	MOVWF	STK00
000b72   3001     movlw   0x01             	MOVLW	0x01
000b73   118a     bcf     0x0a, 0x3        	PAGESEL	_SSD_SetValue
000b74   120a     bcf     0x0a, 0x4        
000b75   2358     call    0x0358           	CALL	_SSD_SetValue
000b76   158a     bsf     0x0a, 0x3        	PAGESEL	$
000b77   120a     bcf     0x0a, 0x4        
                                           ;	.line	56; "display.c"	break;
000b78   2b7d     goto    0x037d           	GOTO	_00119_DS_
                                           _00114_DS_
                                           ;	.line	59; "display.c"	blinkcnt=0;
000b79   1283     bcf     0x03, 0x5        	BANKSEL	_display_update_blinkcnt_1_25
000b7a   1703     bsf     0x03, 0x6        
000b7b   01a3     clrf    0x23             	CLRF	_display_update_blinkcnt_1_25
000b7c   01a4     clrf    0x24             	CLRF	(_display_update_blinkcnt_1_25 + 1)
                                           _00119_DS_
                                           ;	.line	64; "display.c"	}
000b7d   0008     return                   	RETURN	
                                           ; exit point of _display_update

                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _display_init	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;functions called:
                                           ;   _SSD_Init
                                           ;   _SSD_Init
                                           ;   _SSD_SetValue
                                           ;   _SSD_SetValue
                                           ;   _SSD_Init
                                           ;   _SSD_Init
                                           ;   _SSD_SetValue
                                           ;   _SSD_SetValue
                                           ;1 compiler assigned register :
                                           ;   STK00
                                           ;; Starting pCode block
                                           _display_init	;Function start
                                           ; 2 exit points
                                           ;	.line	13; "display.c"	SSD_Init(SSD_UNITS);
000b7e   3000     movlw   0x00             	MOVLW	0x00
000b7f   118a     bcf     0x0a, 0x3        	PAGESEL	_SSD_Init
000b80   120a     bcf     0x0a, 0x4        
000b81   23e4     call    0x03e4           	CALL	_SSD_Init
000b82   158a     bsf     0x0a, 0x3        	PAGESEL	$
000b83   120a     bcf     0x0a, 0x4        
                                           ;	.line	14; "display.c"	SSD_Init(SSD_TENS);
000b84   3001     movlw   0x01             	MOVLW	0x01
000b85   118a     bcf     0x0a, 0x3        	PAGESEL	_SSD_Init
000b86   120a     bcf     0x0a, 0x4        
000b87   23e4     call    0x03e4           	CALL	_SSD_Init
000b88   158a     bsf     0x0a, 0x3        	PAGESEL	$
000b89   120a     bcf     0x0a, 0x4        
                                           ;	.line	16; "display.c"	SSD_SetValue(SSD_UNITS,SSD_0);
000b8a   3000     movlw   0x00             	MOVLW	0x00
000b8b   00ff     movwf   0x7f             	MOVWF	STK00
000b8c   3000     movlw   0x00             	MOVLW	0x00
000b8d   118a     bcf     0x0a, 0x3        	PAGESEL	_SSD_SetValue
000b8e   120a     bcf     0x0a, 0x4        
000b8f   2358     call    0x0358           	CALL	_SSD_SetValue
000b90   158a     bsf     0x0a, 0x3        	PAGESEL	$
000b91   120a     bcf     0x0a, 0x4        
                                           ;	.line	17; "display.c"	SSD_SetValue(SSD_TENS,SSD_0);
000b92   3000     movlw   0x00             	MOVLW	0x00
000b93   00ff     movwf   0x7f             	MOVWF	STK00
000b94   3001     movlw   0x01             	MOVLW	0x01
000b95   118a     bcf     0x0a, 0x3        	PAGESEL	_SSD_SetValue
000b96   120a     bcf     0x0a, 0x4        
000b97   2358     call    0x0358           	CALL	_SSD_SetValue
000b98   158a     bsf     0x0a, 0x3        	PAGESEL	$
000b99   120a     bcf     0x0a, 0x4        
000b9a   0008     return                   	RETURN	
                                           ; exit point of _display_init


                                           ;	code size estimation:
                                           ;	  158+   59 =   217 instructions (  552 byte)

                                           	end
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.5.0 #9253 (Jun 20 2015) (MINGW32)
                                           ; This file was generated Sun Jul 05 12:31:18 2020
                                           ;--------------------------------------------------------
                                           ; PIC port for the 14-bit core
                                           ;--------------------------------------------------------
                                           ;	.file	"eepromi2c.c"
                                           	list	p=16f877a
                                           	radix dec
                                           	include "p16f877a.inc"
                                                   LIST

                                           ;==========================================================================
                                           ; Build date : Oct 21 2015
                                           ;  MPASM PIC16F877A processor include
                                           ; 
                                           ;  (c) Copyright 1999-2015 Microchip Technology, All rights reserved
                                           ;==========================================================================

                                                   NOLIST
                                           ;--------------------------------------------------------
                                           ; external declarations
                                           ;--------------------------------------------------------
                                           	extern	_i2c_acktst
                                           	extern	_STATUSbits
                                           	extern	_PORTAbits
                                           	extern	_PORTBbits
                                           	extern	_PORTCbits
                                           	extern	_PORTDbits
                                           	extern	_PORTEbits
                                           	extern	_INTCONbits
                                           	extern	_PIR1bits
                                           	extern	_PIR2bits
                                           	extern	_T1CONbits
                                           	extern	_T2CONbits
                                           	extern	_SSPCONbits
                                           	extern	_CCP1CONbits
                                           	extern	_RCSTAbits
                                           	extern	_CCP2CONbits
                                           	extern	_ADCON0bits
                                           	extern	_OPTION_REGbits
                                           	extern	_TRISAbits
                                           	extern	_TRISBbits
                                           	extern	_TRISCbits
                                           	extern	_TRISDbits
                                           	extern	_TRISEbits
                                           	extern	_PIE1bits
                                           	extern	_PIE2bits
                                           	extern	_PCONbits
                                           	extern	_SSPCON2bits
                                           	extern	_SSPSTATbits
                                           	extern	_TXSTAbits
                                           	extern	_CMCONbits
                                           	extern	_CVRCONbits
                                           	extern	_ADCON1bits
                                           	extern	_EECON1bits
                                           	extern	_INDF
                                           	extern	_TMR0
                                           	extern	_PCL
                                           	extern	_STATUS
                                           	extern	_FSR
                                           	extern	_PORTA
                                           	extern	_PORTB
                                           	extern	_PORTC
                                           	extern	_PORTD
                                           	extern	_PORTE
                                           	extern	_PCLATH
                                           	extern	_INTCON
                                           	extern	_PIR1
                                           	extern	_PIR2
                                           	extern	_TMR1
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_T1CON
                                           	extern	_TMR2
                                           	extern	_T2CON
                                           	extern	_SSPBUF
                                           	extern	_SSPCON
                                           	extern	_CCPR1
                                           	extern	_CCPR1L
                                           	extern	_CCPR1H
                                           	extern	_CCP1CON
                                           	extern	_RCSTA
                                           	extern	_TXREG
                                           	extern	_RCREG
                                           	extern	_CCPR2
                                           	extern	_CCPR2L
                                           	extern	_CCPR2H
                                           	extern	_CCP2CON
                                           	extern	_ADRESH
                                           	extern	_ADCON0
                                           	extern	_OPTION_REG
                                           	extern	_TRISA
                                           	extern	_TRISB
                                           	extern	_TRISC
                                           	extern	_TRISD
                                           	extern	_TRISE
                                           	extern	_PIE1
                                           	extern	_PIE2
                                           	extern	_PCON
                                           	extern	_SSPCON2
                                           	extern	_PR2
                                           	extern	_SSPADD
                                           	extern	_SSPSTAT
                                           	extern	_TXSTA
                                           	extern	_SPBRG
                                           	extern	_CMCON
                                           	extern	_CVRCON
                                           	extern	_ADRESL
                                           	extern	_ADCON1
                                           	extern	_EEDATA
                                           	extern	_EEADR
                                           	extern	_EEDATH
                                           	extern	_EEADRH
                                           	extern	_EECON1
                                           	extern	_EECON2

                                           	extern PSAVE
                                           	extern SSAVE
                                           	extern WSAVE
                                           	extern STK12
                                           	extern STK11
                                           	extern STK10
                                           	extern STK09
                                           	extern STK08
                                           	extern STK07
                                           	extern STK06
                                           	extern STK05
                                           	extern STK04
                                           	extern STK03
                                           	extern STK02
                                           	extern STK01
                                           	extern STK00
                                           ;--------------------------------------------------------
                                           ; global declarations
                                           ;--------------------------------------------------------
                                           	global	_e2pext_w
                                           	global	_e2pext_r
                                           	global	_i2c_rb
                                           	global	_i2c_wb
                                           	global	_i2c_stop
                                           	global	_i2c_start
                                           	global	_i2c_init
                                           	global	_e2pext_init
                                           	global	_delay

                                           ;--------------------------------------------------------
                                           ; global definitions
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; absolute symbol definitions
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; compiler-defined variables
                                           ;--------------------------------------------------------
                                           UDL_eepromi2c_0	udata
                                           r0x1000	res	1
                                           r0x1001	res	1
                                           r0x1002	res	1
                                           r0x1003	res	1
                                           r0x1004	res	1
                                           r0x1006	res	1
                                           r0x1005	res	1
                                           r0x1007	res	1
                                           r0x1008	res	1
                                           r0x100C	res	1
                                           r0x100B	res	1
                                           r0x100D	res	1
                                           r0x100E	res	1
                                           r0x100F	res	1
                                           r0x1010	res	1
                                           r0x1011	res	1
                                           r0x1012	res	1
                                           r0x1013	res	1
                                           r0x1014	res	1
                                           ;--------------------------------------------------------
                                           ; initialized data
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; overlayable items in internal ram 
                                           ;--------------------------------------------------------
                                           ;	udata_ovr
                                           ;--------------------------------------------------------
                                           ; code
                                           ;--------------------------------------------------------
                                           code_eepromi2c	code
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _e2pext_w	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;functions called:
                                           ;   _i2c_start
                                           ;   _i2c_wb
                                           ;   _i2c_wb
                                           ;   _i2c_wb
                                           ;   _i2c_wb
                                           ;   _i2c_stop
                                           ;   _e2pext_r
                                           ;   _i2c_start
                                           ;   _i2c_wb
                                           ;   _i2c_wb
                                           ;   _i2c_wb
                                           ;   _i2c_wb
                                           ;   _i2c_stop
                                           ;   _e2pext_r
                                           ;12 compiler assigned registers:
                                           ;   r0x100B
                                           ;   STK00
                                           ;   r0x100C
                                           ;   STK01
                                           ;   r0x100D
                                           ;   r0x100E
                                           ;   r0x100F
                                           ;   r0x1010
                                           ;   r0x1011
                                           ;   r0x1012
                                           ;   r0x1013
                                           ;   r0x1014
                                           ;; Starting pCode block
                                           _e2pext_w	;Function start
                                           ; 2 exit points
                                           ;	.line	134; "eepromi2c.c"	void e2pext_w(unsigned int addr, unsigned char val)
000597   1683     bsf     0x03, 0x5        	BANKSEL	r0x100B
000598   1303     bcf     0x03, 0x6        
000599   00be     movwf   0x3e             	MOVWF	r0x100B
00059a   087f     movf    0x7f, 0x0        	MOVF	STK00,W
00059b   00bd     movwf   0x3d             	MOVWF	r0x100C
00059c   087e     movf    0x7e, 0x0        	MOVF	STK01,W
                                           ;	.line	141; "eepromi2c.c"	tmp=val;
00059d   00bf     movwf   0x3f             	MOVWF	r0x100D
00059e   00c0     movwf   0x40             	MOVWF	r0x100E
00059f   01c1     clrf    0x41             	CLRF	r0x100F
                                           ;	.line	142; "eepromi2c.c"	ah=(addr&0x0100)>>8;
0005a0   01bf     clrf    0x3f             	CLRF	r0x100D
0005a1   3001     movlw   0x01             	MOVLW	0x01
0005a2   053e     andwf   0x3e, 0x0        	ANDWF	r0x100B,W
0005a3   00c2     movwf   0x42             	MOVWF	r0x1010
0005a4   00bf     movwf   0x3f             	MOVWF	r0x100D
0005a5   00c3     movwf   0x43             	MOVWF	r0x1011
0005a6   01c4     clrf    0x44             	CLRF	r0x1012
                                           ;;102	MOVF	r0x1011,W
                                           ;;101	MOVF	r0x100C,W
                                           ;	.line	143; "eepromi2c.c"	al=addr&0x00FF;
0005a7   01c4     clrf    0x44             	CLRF	r0x1012
                                           ;;100	MOVF	r0x1011,W
0005a8   083d     movf    0x3d, 0x0        	MOVF	r0x100C,W
0005a9   00c3     movwf   0x43             	MOVWF	r0x1011
0005aa   00c2     movwf   0x42             	MOVWF	r0x1010
                                           ;	.line	146; "eepromi2c.c"	do
0005ab   01c3     clrf    0x43             	CLRF	r0x1011
                                           _00185_DS_
                                           ;	.line	148; "eepromi2c.c"	i2c_start();
0005ac   26c8     call    0x06c8           	CALL	_i2c_start
                                           ;	.line	149; "eepromi2c.c"	if(ah)
0005ad   1683     bsf     0x03, 0x5        	BANKSEL	r0x100D
0005ae   1303     bcf     0x03, 0x6        
0005af   083f     movf    0x3f, 0x0        	MOVF	r0x100D,W
0005b0   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
0005b1   2db5     goto    0x05b5           	GOTO	_00182_DS_
                                           ;	.line	151; "eepromi2c.c"	i2c_wb(0xA2);
0005b2   30a2     movlw   0xa2             	MOVLW	0xa2
0005b3   2671     call    0x0671           	CALL	_i2c_wb
0005b4   2db7     goto    0x05b7           	GOTO	_00183_DS_
                                           _00182_DS_
                                           ;	.line	155; "eepromi2c.c"	i2c_wb(0xA0);
0005b5   30a0     movlw   0xa0             	MOVLW	0xa0
0005b6   2671     call    0x0671           	CALL	_i2c_wb
                                           _00183_DS_
                                           ;	.line	157; "eepromi2c.c"	i2c_wb(al);
0005b7   1683     bsf     0x03, 0x5        	BANKSEL	r0x1010
0005b8   1303     bcf     0x03, 0x6        
0005b9   0842     movf    0x42, 0x0        	MOVF	r0x1010,W
0005ba   2671     call    0x0671           	CALL	_i2c_wb
                                           ;	.line	158; "eepromi2c.c"	i2c_wb(tmp);
0005bb   1683     bsf     0x03, 0x5        	BANKSEL	r0x100E
0005bc   1303     bcf     0x03, 0x6        
0005bd   0840     movf    0x40, 0x0        	MOVF	r0x100E,W
0005be   00c4     movwf   0x44             	MOVWF	r0x1012
0005bf   2671     call    0x0671           	CALL	_i2c_wb
                                           ;	.line	159; "eepromi2c.c"	i2c_stop();
0005c0   26be     call    0x06be           	CALL	_i2c_stop
                                           ;	.line	161; "eepromi2c.c"	nt++;
0005c1   1683     bsf     0x03, 0x5        	BANKSEL	r0x1011
0005c2   1303     bcf     0x03, 0x6        
0005c3   0ac3     incf    0x43, 0x1        	INCF	r0x1011,F
                                           ;	.line	163; "eepromi2c.c"	while((tmp != e2pext_r(addr))&&(nt < 10));
0005c4   083d     movf    0x3d, 0x0        	MOVF	r0x100C,W
0005c5   00ff     movwf   0x7f             	MOVWF	STK00
0005c6   083e     movf    0x3e, 0x0        	MOVF	r0x100B,W
0005c7   25dc     call    0x05dc           	CALL	_e2pext_r
0005c8   1683     bsf     0x03, 0x5        	BANKSEL	r0x1012
0005c9   1303     bcf     0x03, 0x6        
0005ca   00c4     movwf   0x44             	MOVWF	r0x1012
0005cb   00c5     movwf   0x45             	MOVWF	r0x1013
0005cc   01c6     clrf    0x46             	CLRF	r0x1014
0005cd   0845     movf    0x45, 0x0        	MOVF	r0x1013,W
0005ce   0640     xorwf   0x40, 0x0        	XORWF	r0x100E,W
0005cf   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
0005d0   2dd5     goto    0x05d5           	GOTO	_00200_DS_
0005d1   0846     movf    0x46, 0x0        	MOVF	r0x1014,W
0005d2   0641     xorwf   0x41, 0x0        	XORWF	r0x100F,W
0005d3   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
0005d4   2ddb     goto    0x05db           	GOTO	_00188_DS_
                                           _00200_DS_
0005d5   300a     movlw   0x0a             	MOVLW	0x0a
0005d6   1683     bsf     0x03, 0x5        	BANKSEL	r0x1011
0005d7   1303     bcf     0x03, 0x6        
0005d8   0243     subwf   0x43, 0x0        	SUBWF	r0x1011,W
0005d9   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
0005da   2dac     goto    0x05ac           	GOTO	_00185_DS_
                                           ;;genSkipc:3247: created from rifx:027A5E04
                                           _00188_DS_
0005db   0008     return                   	RETURN	
                                           ; exit point of _e2pext_w

                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _e2pext_r	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;functions called:
                                           ;   _i2c_start
                                           ;   _i2c_wb
                                           ;   _i2c_wb
                                           ;   _i2c_wb
                                           ;   _i2c_start
                                           ;   _i2c_wb
                                           ;   _i2c_wb
                                           ;   _i2c_rb
                                           ;   _i2c_stop
                                           ;   _i2c_start
                                           ;   _i2c_wb
                                           ;   _i2c_wb
                                           ;   _i2c_wb
                                           ;   _i2c_start
                                           ;   _i2c_wb
                                           ;   _i2c_wb
                                           ;   _i2c_rb
                                           ;   _i2c_stop
                                           ;7 compiler assigned registers:
                                           ;   r0x1005
                                           ;   STK00
                                           ;   r0x1006
                                           ;   r0x1007
                                           ;   r0x1008
                                           ;   r0x1009
                                           ;   r0x100A
                                           ;; Starting pCode block
                                           _e2pext_r	;Function start
                                           ; 2 exit points
                                           ;	.line	98; "eepromi2c.c"	unsigned char e2pext_r(unsigned int addr)
0005dc   1683     bsf     0x03, 0x5        	BANKSEL	r0x1005
0005dd   1303     bcf     0x03, 0x6        
0005de   00ba     movwf   0x3a             	MOVWF	r0x1005
0005df   087f     movf    0x7f, 0x0        	MOVF	STK00,W
0005e0   00b9     movwf   0x39             	MOVWF	r0x1006
                                           ;	.line	104; "eepromi2c.c"	ah=(addr&0x0100)>>8;
0005e1   01bb     clrf    0x3b             	CLRF	r0x1007
0005e2   3001     movlw   0x01             	MOVLW	0x01
0005e3   053a     andwf   0x3a, 0x0        	ANDWF	r0x1005,W
0005e4   00bc     movwf   0x3c             	MOVWF	r0x1008
0005e5   00bb     movwf   0x3b             	MOVWF	r0x1007
                                           ;;1	MOVWF	r0x1009
                                           ;;1	CLRF	r0x100A
                                           ;;99	MOVF	r0x1009,W
                                           ;	.line	105; "eepromi2c.c"	al=addr&0x00FF;
0005e6   01ba     clrf    0x3a             	CLRF	r0x1005
0005e7   0839     movf    0x39, 0x0        	MOVF	r0x1006,W
0005e8   00bc     movwf   0x3c             	MOVWF	r0x1008
                                           ;	.line	107; "eepromi2c.c"	i2c_start();
0005e9   26c8     call    0x06c8           	CALL	_i2c_start
                                           ;	.line	108; "eepromi2c.c"	if(ah)
0005ea   1683     bsf     0x03, 0x5        	BANKSEL	r0x1007
0005eb   1303     bcf     0x03, 0x6        
0005ec   083b     movf    0x3b, 0x0        	MOVF	r0x1007,W
0005ed   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
0005ee   2df2     goto    0x05f2           	GOTO	_00172_DS_
                                           ;	.line	110; "eepromi2c.c"	i2c_wb(0xA2);
0005ef   30a2     movlw   0xa2             	MOVLW	0xa2
0005f0   2671     call    0x0671           	CALL	_i2c_wb
0005f1   2df4     goto    0x05f4           	GOTO	_00173_DS_
                                           _00172_DS_
                                           ;	.line	114; "eepromi2c.c"	i2c_wb(0xA0);
0005f2   30a0     movlw   0xa0             	MOVLW	0xa0
0005f3   2671     call    0x0671           	CALL	_i2c_wb
                                           _00173_DS_
                                           ;	.line	116; "eepromi2c.c"	i2c_wb(al);
0005f4   1683     bsf     0x03, 0x5        	BANKSEL	r0x1008
0005f5   1303     bcf     0x03, 0x6        
0005f6   083c     movf    0x3c, 0x0        	MOVF	r0x1008,W
0005f7   2671     call    0x0671           	CALL	_i2c_wb
                                           ;	.line	118; "eepromi2c.c"	i2c_start();
0005f8   26c8     call    0x06c8           	CALL	_i2c_start
                                           ;	.line	119; "eepromi2c.c"	if(ah)
0005f9   1683     bsf     0x03, 0x5        	BANKSEL	r0x1007
0005fa   1303     bcf     0x03, 0x6        
0005fb   083b     movf    0x3b, 0x0        	MOVF	r0x1007,W
0005fc   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
0005fd   2e01     goto    0x0601           	GOTO	_00175_DS_
                                           ;	.line	121; "eepromi2c.c"	i2c_wb(0xA3);
0005fe   30a3     movlw   0xa3             	MOVLW	0xa3
0005ff   2671     call    0x0671           	CALL	_i2c_wb
000600   2e03     goto    0x0603           	GOTO	_00176_DS_
                                           _00175_DS_
                                           ;	.line	125; "eepromi2c.c"	i2c_wb(0xA1);
000601   30a1     movlw   0xa1             	MOVLW	0xa1
000602   2671     call    0x0671           	CALL	_i2c_wb
                                           _00176_DS_
                                           ;	.line	127; "eepromi2c.c"	ret=i2c_rb(1);
000603   3001     movlw   0x01             	MOVLW	0x01
000604   260d     call    0x060d           	CALL	_i2c_rb
000605   1683     bsf     0x03, 0x5        	BANKSEL	r0x1006
000606   1303     bcf     0x03, 0x6        
000607   00b9     movwf   0x39             	MOVWF	r0x1006
                                           ;	.line	128; "eepromi2c.c"	i2c_stop();
000608   26be     call    0x06be           	CALL	_i2c_stop
                                           ;	.line	130; "eepromi2c.c"	return ret;
000609   1683     bsf     0x03, 0x5        	BANKSEL	r0x1006
00060a   1303     bcf     0x03, 0x6        
00060b   0839     movf    0x39, 0x0        	MOVF	r0x1006,W
00060c   0008     return                   	RETURN	
                                           ; exit point of _e2pext_r

                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _i2c_rb	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;functions called:
                                           ;   _delay
                                           ;   _delay
                                           ;   _delay
                                           ;   _delay
                                           ;   _delay
                                           ;   _delay
                                           ;5 compiler assigned registers:
                                           ;   r0x1000
                                           ;   r0x1001
                                           ;   r0x1002
                                           ;   r0x1003
                                           ;   r0x1004
                                           ;; Starting pCode block
                                           _i2c_rb	;Function start
                                           ; 2 exit points
                                           ;	.line	67; "eepromi2c.c"	unsigned char i2c_rb(unsigned char ack)
00060d   1683     bsf     0x03, 0x5        	BANKSEL	r0x1000
00060e   1303     bcf     0x03, 0x6        
00060f   00b4     movwf   0x34             	MOVWF	r0x1000
                                           ;	.line	70; "eepromi2c.c"	unsigned char ret=0;
000610   01b5     clrf    0x35             	CLRF	r0x1001
                                           ;	.line	72; "eepromi2c.c"	ICLK=0;
000611   1283     bcf     0x03, 0x5        	BANKSEL	_PORTCbits
000612   1303     bcf     0x03, 0x6        
000613   1187     bcf     0x07, 0x3        	BCF	_PORTCbits,3
                                           ;	.line	73; "eepromi2c.c"	TIDAT=1;
000614   1683     bsf     0x03, 0x5        	BANKSEL	_TRISCbits
000615   1303     bcf     0x03, 0x6        
000616   1607     bsf     0x07, 0x4        	BSF	_TRISCbits,4
                                           ;	.line	74; "eepromi2c.c"	IDAT=1;
000617   1283     bcf     0x03, 0x5        	BANKSEL	_PORTCbits
000618   1303     bcf     0x03, 0x6        
000619   1607     bsf     0x07, 0x4        	BSF	_PORTCbits,4
                                           ;	.line	75; "eepromi2c.c"	for(i=7;i>=0;i--)
00061a   3007     movlw   0x07             	MOVLW	0x07
00061b   1683     bsf     0x03, 0x5        	BANKSEL	r0x1002
00061c   1303     bcf     0x03, 0x6        
00061d   00b6     movwf   0x36             	MOVWF	r0x1002
                                           _00149_DS_
                                           ;	.line	77; "eepromi2c.c"	ICLK=1;
00061e   1283     bcf     0x03, 0x5        	BANKSEL	_PORTCbits
00061f   1303     bcf     0x03, 0x6        
000620   1587     bsf     0x07, 0x3        	BSF	_PORTCbits,3
                                           ;	.line	78; "eepromi2c.c"	delay();
000621   26da     call    0x06da           	CALL	_delay
                                           ;	.line	79; "eepromi2c.c"	ret|=(IDAT<<i);
000622   1683     bsf     0x03, 0x5        	BANKSEL	r0x1003
000623   1303     bcf     0x03, 0x6        
000624   01b7     clrf    0x37             	CLRF	r0x1003
000625   1283     bcf     0x03, 0x5        	BANKSEL	_PORTCbits
000626   1303     bcf     0x03, 0x6        
000627   1e07     btfss   0x07, 0x4        	BTFSS	_PORTCbits,4
000628   2e2c     goto    0x062c           	GOTO	_00001_DS_
000629   1683     bsf     0x03, 0x5        	BANKSEL	r0x1003
00062a   1303     bcf     0x03, 0x6        
00062b   0ab7     incf    0x37, 0x1        	INCF	r0x1003,F
                                           _00001_DS_
00062c   1683     bsf     0x03, 0x5        	BANKSEL	r0x1003
00062d   1303     bcf     0x03, 0x6        
00062e   0837     movf    0x37, 0x0        	MOVF	r0x1003,W
00062f   00b8     movwf   0x38             	MOVWF	r0x1004
000630   0836     movf    0x36, 0x0        	MOVF	r0x1002,W
000631   1bb6     btfsc   0x36, 0x7        	BTFSC	r0x1002,7
000632   2e3d     goto    0x063d           	GOTO	_00166_DS_
000633   3c00     sublw   0x00             	SUBLW	0x00
000634   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
000635   2e46     goto    0x0646           	GOTO	_00164_DS_
                                           _00163_DS_
000636   1683     bsf     0x03, 0x5        	BANKSEL	r0x1004
000637   1303     bcf     0x03, 0x6        
000638   0db8     rlf     0x38, 0x1        	RLF	r0x1004,F
000639   3e01     addlw   0x01             	ADDLW	0x01
00063a   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
00063b   2e36     goto    0x0636           	GOTO	_00163_DS_
00063c   2e46     goto    0x0646           	GOTO	_00164_DS_
                                           _00166_DS_
00063d   1003     bcf     0x03, 0x0        	BCF	STATUS,0
00063e   1683     bsf     0x03, 0x5        	BANKSEL	r0x1004
00063f   1303     bcf     0x03, 0x6        
000640   1bb8     btfsc   0x38, 0x7        	BTFSC	r0x1004,7
000641   1403     bsf     0x03, 0x0        	BSF	STATUS,0
000642   0cb8     rrf     0x38, 0x1        	RRF	r0x1004,F
000643   3e01     addlw   0x01             	ADDLW	0x01
000644   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
000645   2e3d     goto    0x063d           	GOTO	_00166_DS_
                                           _00164_DS_
000646   1683     bsf     0x03, 0x5        	BANKSEL	r0x1004
000647   1303     bcf     0x03, 0x6        
000648   0838     movf    0x38, 0x0        	MOVF	r0x1004,W
000649   00b7     movwf   0x37             	MOVWF	r0x1003
00064a   04b5     iorwf   0x35, 0x1        	IORWF	r0x1001,F
                                           ;	.line	80; "eepromi2c.c"	ICLK=0;
00064b   1283     bcf     0x03, 0x5        	BANKSEL	_PORTCbits
00064c   1303     bcf     0x03, 0x6        
00064d   1187     bcf     0x07, 0x3        	BCF	_PORTCbits,3
                                           ;	.line	75; "eepromi2c.c"	for(i=7;i>=0;i--)
00064e   1683     bsf     0x03, 0x5        	BANKSEL	r0x1002
00064f   1303     bcf     0x03, 0x6        
000650   03b6     decf    0x36, 0x1        	DECF	r0x1002,F
                                           ;;signed compare: left < lit(0x0=0), size=1, mask=ff
000651   1403     bsf     0x03, 0x0        	BSF	STATUS,0
000652   1fb6     btfss   0x36, 0x7        	BTFSS	r0x1002,7
000653   1003     bcf     0x03, 0x0        	BCF	STATUS,0
000654   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
000655   2e1e     goto    0x061e           	GOTO	_00149_DS_
                                           ;;genSkipc:3247: created from rifx:027A5E04
                                           ;	.line	82; "eepromi2c.c"	TIDAT=0;
000656   1683     bsf     0x03, 0x5        	BANKSEL	_TRISCbits
000657   1303     bcf     0x03, 0x6        
000658   1207     bcf     0x07, 0x4        	BCF	_TRISCbits,4
                                           ;	.line	83; "eepromi2c.c"	if(ack)
000659   1683     bsf     0x03, 0x5        	BANKSEL	r0x1000
00065a   1303     bcf     0x03, 0x6        
00065b   0834     movf    0x34, 0x0        	MOVF	r0x1000,W
00065c   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
00065d   2e62     goto    0x0662           	GOTO	_00147_DS_
                                           ;	.line	84; "eepromi2c.c"	IDAT=0;
00065e   1283     bcf     0x03, 0x5        	BANKSEL	_PORTCbits
00065f   1303     bcf     0x03, 0x6        
000660   1207     bcf     0x07, 0x4        	BCF	_PORTCbits,4
000661   2e65     goto    0x0665           	GOTO	_00148_DS_
                                           _00147_DS_
                                           ;	.line	86; "eepromi2c.c"	IDAT=1;
000662   1283     bcf     0x03, 0x5        	BANKSEL	_PORTCbits
000663   1303     bcf     0x03, 0x6        
000664   1607     bsf     0x07, 0x4        	BSF	_PORTCbits,4
                                           _00148_DS_
                                           ;	.line	87; "eepromi2c.c"	delay();
000665   26da     call    0x06da           	CALL	_delay
                                           ;	.line	88; "eepromi2c.c"	ICLK=1;
000666   1283     bcf     0x03, 0x5        	BANKSEL	_PORTCbits
000667   1303     bcf     0x03, 0x6        
000668   1587     bsf     0x07, 0x3        	BSF	_PORTCbits,3
                                           ;	.line	89; "eepromi2c.c"	delay();
000669   26da     call    0x06da           	CALL	_delay
                                           ;	.line	90; "eepromi2c.c"	ICLK=0;
00066a   1283     bcf     0x03, 0x5        	BANKSEL	_PORTCbits
00066b   1303     bcf     0x03, 0x6        
00066c   1187     bcf     0x07, 0x3        	BCF	_PORTCbits,3
                                           ;	.line	92; "eepromi2c.c"	return ret;
00066d   1683     bsf     0x03, 0x5        	BANKSEL	r0x1001
00066e   1303     bcf     0x03, 0x6        
00066f   0835     movf    0x35, 0x0        	MOVF	r0x1001,W
000670   0008     return                   	RETURN	
                                           ; exit point of _i2c_rb

                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _i2c_wb	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;functions called:
                                           ;   _delay
                                           ;   _delay
                                           ;   _delay
                                           ;   _delay
                                           ;   _delay
                                           ;   _delay
                                           ;4 compiler assigned registers:
                                           ;   r0x1000
                                           ;   r0x1001
                                           ;   r0x1002
                                           ;   r0x1003
                                           ;; Starting pCode block
                                           _i2c_wb	;Function start
                                           ; 2 exit points
                                           ;	.line	49; "eepromi2c.c"	void i2c_wb(unsigned char val)
000671   1683     bsf     0x03, 0x5        	BANKSEL	r0x1000
000672   1303     bcf     0x03, 0x6        
000673   00b4     movwf   0x34             	MOVWF	r0x1000
                                           ;	.line	52; "eepromi2c.c"	ICLK=0;
000674   1283     bcf     0x03, 0x5        	BANKSEL	_PORTCbits
000675   1303     bcf     0x03, 0x6        
000676   1187     bcf     0x07, 0x3        	BCF	_PORTCbits,3
                                           ;	.line	53; "eepromi2c.c"	for(i=7;i>=0;i--)
000677   3007     movlw   0x07             	MOVLW	0x07
000678   1683     bsf     0x03, 0x5        	BANKSEL	r0x1001
000679   1303     bcf     0x03, 0x6        
00067a   00b5     movwf   0x35             	MOVWF	r0x1001
                                           _00126_DS_
                                           ;	.line	55; "eepromi2c.c"	IDAT=((val>>i)& 0x01);
00067b   1683     bsf     0x03, 0x5        	BANKSEL	r0x1000
00067c   1303     bcf     0x03, 0x6        
00067d   0834     movf    0x34, 0x0        	MOVF	r0x1000,W
00067e   00b6     movwf   0x36             	MOVWF	r0x1002
00067f   0835     movf    0x35, 0x0        	MOVF	r0x1001,W
000680   1bb5     btfsc   0x35, 0x7        	BTFSC	r0x1001,7
000681   2e8c     goto    0x068c           	GOTO	_00139_DS_
000682   3c00     sublw   0x00             	SUBLW	0x00
000683   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
000684   2e93     goto    0x0693           	GOTO	_00138_DS_
                                           _00137_DS_
000685   1683     bsf     0x03, 0x5        	BANKSEL	r0x1002
000686   1303     bcf     0x03, 0x6        
000687   0cb6     rrf     0x36, 0x1        	RRF	r0x1002,F
000688   3e01     addlw   0x01             	ADDLW	0x01
000689   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
00068a   2e85     goto    0x0685           	GOTO	_00137_DS_
00068b   2e93     goto    0x0693           	GOTO	_00138_DS_
                                           _00139_DS_
00068c   1003     bcf     0x03, 0x0        	BCF	STATUS,0
                                           _00140_DS_
00068d   1683     bsf     0x03, 0x5        	BANKSEL	r0x1002
00068e   1303     bcf     0x03, 0x6        
00068f   0db6     rlf     0x36, 0x1        	RLF	r0x1002,F
000690   3e01     addlw   0x01             	ADDLW	0x01
000691   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
000692   2e8d     goto    0x068d           	GOTO	_00140_DS_
                                           _00138_DS_
000693   1683     bsf     0x03, 0x5        	BANKSEL	r0x1002
000694   1303     bcf     0x03, 0x6        
000695   0836     movf    0x36, 0x0        	MOVF	r0x1002,W
000696   3901     andlw   0x01             	ANDLW	0x01
                                           ;;1	MOVWF	r0x1003
000697   00b6     movwf   0x36             	MOVWF	r0x1002
000698   0c36     rrf     0x36, 0x0        	RRF	r0x1002,W
000699   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
00069a   2e9e     goto    0x069e           	GOTO	_00002_DS_
00069b   1283     bcf     0x03, 0x5        	BANKSEL	_PORTCbits
00069c   1303     bcf     0x03, 0x6        
00069d   1207     bcf     0x07, 0x4        	BCF	_PORTCbits,4
                                           _00002_DS_
00069e   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
00069f   2ea3     goto    0x06a3           	GOTO	_00003_DS_
0006a0   1283     bcf     0x03, 0x5        	BANKSEL	_PORTCbits
0006a1   1303     bcf     0x03, 0x6        
0006a2   1607     bsf     0x07, 0x4        	BSF	_PORTCbits,4
                                           _00003_DS_
                                           ;	.line	56; "eepromi2c.c"	ICLK=1;
0006a3   1283     bcf     0x03, 0x5        	BANKSEL	_PORTCbits
0006a4   1303     bcf     0x03, 0x6        
0006a5   1587     bsf     0x07, 0x3        	BSF	_PORTCbits,3
                                           ;	.line	57; "eepromi2c.c"	delay();
0006a6   26da     call    0x06da           	CALL	_delay
                                           ;	.line	58; "eepromi2c.c"	ICLK=0;
0006a7   1283     bcf     0x03, 0x5        	BANKSEL	_PORTCbits
0006a8   1303     bcf     0x03, 0x6        
0006a9   1187     bcf     0x07, 0x3        	BCF	_PORTCbits,3
                                           ;	.line	53; "eepromi2c.c"	for(i=7;i>=0;i--)
0006aa   1683     bsf     0x03, 0x5        	BANKSEL	r0x1001
0006ab   1303     bcf     0x03, 0x6        
0006ac   03b5     decf    0x35, 0x1        	DECF	r0x1001,F
                                           ;;signed compare: left < lit(0x0=0), size=1, mask=ff
0006ad   1403     bsf     0x03, 0x0        	BSF	STATUS,0
0006ae   1fb5     btfss   0x35, 0x7        	BTFSS	r0x1001,7
0006af   1003     bcf     0x03, 0x0        	BCF	STATUS,0
0006b0   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
0006b1   2e7b     goto    0x067b           	GOTO	_00126_DS_
                                           ;;genSkipc:3247: created from rifx:027A5E04
                                           ;	.line	60; "eepromi2c.c"	IDAT=1;
0006b2   1283     bcf     0x03, 0x5        	BANKSEL	_PORTCbits
0006b3   1303     bcf     0x03, 0x6        
0006b4   1607     bsf     0x07, 0x4        	BSF	_PORTCbits,4
                                           ;	.line	61; "eepromi2c.c"	delay();
0006b5   26da     call    0x06da           	CALL	_delay
                                           ;	.line	62; "eepromi2c.c"	ICLK=1;
0006b6   1283     bcf     0x03, 0x5        	BANKSEL	_PORTCbits
0006b7   1303     bcf     0x03, 0x6        
0006b8   1587     bsf     0x07, 0x3        	BSF	_PORTCbits,3
                                           ;	.line	63; "eepromi2c.c"	delay();
0006b9   26da     call    0x06da           	CALL	_delay
                                           ;	.line	64; "eepromi2c.c"	ICLK=0;
0006ba   1283     bcf     0x03, 0x5        	BANKSEL	_PORTCbits
0006bb   1303     bcf     0x03, 0x6        
0006bc   1187     bcf     0x07, 0x3        	BCF	_PORTCbits,3
0006bd   0008     return                   	RETURN	
                                           ; exit point of _i2c_wb

                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _i2c_stop	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;functions called:
                                           ;   _delay
                                           ;   _delay
                                           ;   _delay
                                           ;   _delay
                                           ;; Starting pCode block
                                           _i2c_stop	;Function start
                                           ; 2 exit points
                                           ;	.line	42; "eepromi2c.c"	ICLK=1;
0006be   1283     bcf     0x03, 0x5        	BANKSEL	_PORTCbits
0006bf   1303     bcf     0x03, 0x6        
0006c0   1587     bsf     0x07, 0x3        	BSF	_PORTCbits,3
                                           ;	.line	43; "eepromi2c.c"	IDAT=0;
0006c1   1207     bcf     0x07, 0x4        	BCF	_PORTCbits,4
                                           ;	.line	44; "eepromi2c.c"	delay();
0006c2   26da     call    0x06da           	CALL	_delay
                                           ;	.line	45; "eepromi2c.c"	IDAT=1;
0006c3   1283     bcf     0x03, 0x5        	BANKSEL	_PORTCbits
0006c4   1303     bcf     0x03, 0x6        
0006c5   1607     bsf     0x07, 0x4        	BSF	_PORTCbits,4
                                           ;	.line	46; "eepromi2c.c"	delay();
0006c6   26da     call    0x06da           	CALL	_delay
0006c7   0008     return                   	RETURN	
                                           ; exit point of _i2c_stop

                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _i2c_start	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;functions called:
                                           ;   _delay
                                           ;   _delay
                                           ;   _delay
                                           ;   _delay
                                           ;; Starting pCode block
                                           _i2c_start	;Function start
                                           ; 2 exit points
                                           ;	.line	33; "eepromi2c.c"	ICLK=1;
0006c8   1283     bcf     0x03, 0x5        	BANKSEL	_PORTCbits
0006c9   1303     bcf     0x03, 0x6        
0006ca   1587     bsf     0x07, 0x3        	BSF	_PORTCbits,3
                                           ;	.line	34; "eepromi2c.c"	IDAT=1;
0006cb   1607     bsf     0x07, 0x4        	BSF	_PORTCbits,4
                                           ;	.line	35; "eepromi2c.c"	delay();
0006cc   26da     call    0x06da           	CALL	_delay
                                           ;	.line	36; "eepromi2c.c"	IDAT=0;
0006cd   1283     bcf     0x03, 0x5        	BANKSEL	_PORTCbits
0006ce   1303     bcf     0x03, 0x6        
0006cf   1207     bcf     0x07, 0x4        	BCF	_PORTCbits,4
                                           ;	.line	37; "eepromi2c.c"	delay();
0006d0   26da     call    0x06da           	CALL	_delay
0006d1   0008     return                   	RETURN	
                                           ; exit point of _i2c_start

                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _i2c_init	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;; Starting pCode block
                                           _i2c_init	;Function start
                                           ; 2 exit points
                                           ;	.line	26; "eepromi2c.c"	TIDAT=0;
0006d2   1683     bsf     0x03, 0x5        	BANKSEL	_TRISCbits
0006d3   1303     bcf     0x03, 0x6        
0006d4   1207     bcf     0x07, 0x4        	BCF	_TRISCbits,4
                                           ;	.line	27; "eepromi2c.c"	ICLK=1;
0006d5   1283     bcf     0x03, 0x5        	BANKSEL	_PORTCbits
0006d6   1303     bcf     0x03, 0x6        
0006d7   1587     bsf     0x07, 0x3        	BSF	_PORTCbits,3
                                           ;	.line	28; "eepromi2c.c"	IDAT=1;
0006d8   1607     bsf     0x07, 0x4        	BSF	_PORTCbits,4
0006d9   0008     return                   	RETURN	
                                           ; exit point of _i2c_init

                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _delay	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;; Starting pCode block
                                           _delay	;Function start
                                           ; 2 exit points
0006da   0000     nop                      	NOP 
0006db   0000     nop                      	NOP 
0006dc   0000     nop                      	NOP 
0006dd   0000     nop                      	NOP 
0006de   0000     nop                      	NOP 
0006df   0000     nop                      	NOP 
0006e0   0000     nop                      	NOP 
0006e1   0000     nop                      	NOP 
0006e2   0008     return                   	RETURN	
                                           ; exit point of _delay

                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _e2pext_init	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;; Starting pCode block
                                           _e2pext_init	;Function start
                                           ; 2 exit points
                                           ;	.line	5; "eepromi2c.c"	TRISA=0xC3;
0006e3   30c3     movlw   0xc3             	MOVLW	0xc3
0006e4   1683     bsf     0x03, 0x5        	BANKSEL	_TRISA
0006e5   1303     bcf     0x03, 0x6        
0006e6   0085     movwf   0x05             	MOVWF	_TRISA
                                           ;	.line	6; "eepromi2c.c"	TRISB=0x01;
0006e7   3001     movlw   0x01             	MOVLW	0x01
0006e8   0086     movwf   0x06             	MOVWF	_TRISB
                                           ;	.line	7; "eepromi2c.c"	TRISC=0x01;
0006e9   3001     movlw   0x01             	MOVLW	0x01
0006ea   0087     movwf   0x07             	MOVWF	_TRISC
                                           ;	.line	8; "eepromi2c.c"	TRISD=0x00;
0006eb   0188     clrf    0x08             	CLRF	_TRISD
                                           ;	.line	9; "eepromi2c.c"	TRISE=0x00;
0006ec   0189     clrf    0x09             	CLRF	_TRISE
0006ed   0008     return                   	RETURN	
                                           ; exit point of _e2pext_init


                                           ;	code size estimation:
                                           ;	  221+   57 =   278 instructions (  670 byte)

                                           	end
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.5.0 #9253 (Jun 20 2015) (MINGW32)
                                           ; This file was generated Sun Jul 05 10:49:24 2020
                                           ;--------------------------------------------------------
                                           ; PIC port for the 14-bit core
                                           ;--------------------------------------------------------
                                           ;	.file	"eepromint.c"
                                           	list	p=16f877a
                                           	radix dec
                                           	include "p16f877a.inc"
                                                   LIST

                                           ;==========================================================================
                                           ; Build date : Oct 21 2015
                                           ;  MPASM PIC16F877A processor include
                                           ; 
                                           ;  (c) Copyright 1999-2015 Microchip Technology, All rights reserved
                                           ;==========================================================================

                                                   NOLIST
                                           ;--------------------------------------------------------
                                           ; external declarations
                                           ;--------------------------------------------------------
                                           	extern	_STATUSbits
                                           	extern	_PORTAbits
                                           	extern	_PORTBbits
                                           	extern	_PORTCbits
                                           	extern	_PORTDbits
                                           	extern	_PORTEbits
                                           	extern	_INTCONbits
                                           	extern	_PIR1bits
                                           	extern	_PIR2bits
                                           	extern	_T1CONbits
                                           	extern	_T2CONbits
                                           	extern	_SSPCONbits
                                           	extern	_CCP1CONbits
                                           	extern	_RCSTAbits
                                           	extern	_CCP2CONbits
                                           	extern	_ADCON0bits
                                           	extern	_OPTION_REGbits
                                           	extern	_TRISAbits
                                           	extern	_TRISBbits
                                           	extern	_TRISCbits
                                           	extern	_TRISDbits
                                           	extern	_TRISEbits
                                           	extern	_PIE1bits
                                           	extern	_PIE2bits
                                           	extern	_PCONbits
                                           	extern	_SSPCON2bits
                                           	extern	_SSPSTATbits
                                           	extern	_TXSTAbits
                                           	extern	_CMCONbits
                                           	extern	_CVRCONbits
                                           	extern	_ADCON1bits
                                           	extern	_EECON1bits
                                           	extern	_INDF
                                           	extern	_TMR0
                                           	extern	_PCL
                                           	extern	_STATUS
                                           	extern	_FSR
                                           	extern	_PORTA
                                           	extern	_PORTB
                                           	extern	_PORTC
                                           	extern	_PORTD
                                           	extern	_PORTE
                                           	extern	_PCLATH
                                           	extern	_INTCON
                                           	extern	_PIR1
                                           	extern	_PIR2
                                           	extern	_TMR1
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_T1CON
                                           	extern	_TMR2
                                           	extern	_T2CON
                                           	extern	_SSPBUF
                                           	extern	_SSPCON
                                           	extern	_CCPR1
                                           	extern	_CCPR1L
                                           	extern	_CCPR1H
                                           	extern	_CCP1CON
                                           	extern	_RCSTA
                                           	extern	_TXREG
                                           	extern	_RCREG
                                           	extern	_CCPR2
                                           	extern	_CCPR2L
                                           	extern	_CCPR2H
                                           	extern	_CCP2CON
                                           	extern	_ADRESH
                                           	extern	_ADCON0
                                           	extern	_OPTION_REG
                                           	extern	_TRISA
                                           	extern	_TRISB
                                           	extern	_TRISC
                                           	extern	_TRISD
                                           	extern	_TRISE
                                           	extern	_PIE1
                                           	extern	_PIE2
                                           	extern	_PCON
                                           	extern	_SSPCON2
                                           	extern	_PR2
                                           	extern	_SSPADD
                                           	extern	_SSPSTAT
                                           	extern	_TXSTA
                                           	extern	_SPBRG
                                           	extern	_CMCON
                                           	extern	_CVRCON
                                           	extern	_ADRESL
                                           	extern	_ADCON1
                                           	extern	_EEDATA
                                           	extern	_EEADR
                                           	extern	_EEDATH
                                           	extern	_EEADRH
                                           	extern	_EECON1
                                           	extern	_EECON2

                                           	extern PSAVE
                                           	extern SSAVE
                                           	extern WSAVE
                                           	extern STK12
                                           	extern STK11
                                           	extern STK10
                                           	extern STK09
                                           	extern STK08
                                           	extern STK07
                                           	extern STK06
                                           	extern STK05
                                           	extern STK04
                                           	extern STK03
                                           	extern STK02
                                           	extern STK01
                                           	extern STK00
                                           ;--------------------------------------------------------
                                           ; global declarations
                                           ;--------------------------------------------------------
                                           	global	_e2prom_w
                                           	global	_e2prom_r

                                           ;--------------------------------------------------------
                                           ; global definitions
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; absolute symbol definitions
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; compiler-defined variables
                                           ;--------------------------------------------------------
                                           UDL_eepromint_0	udata
                                           r0x1000	res	1
                                           ;--------------------------------------------------------
                                           ; initialized data
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; overlayable items in internal ram 
                                           ;--------------------------------------------------------
                                           ;	udata_ovr
                                           ;--------------------------------------------------------
                                           ; code
                                           ;--------------------------------------------------------
                                           code_eepromint	code
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _e2prom_w	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;3 compiler assigned registers:
                                           ;   STK00
                                           ;   r0x1000
                                           ;   r0x1001
                                           ;; Starting pCode block
                                           _e2prom_w	;Function start
                                           ; 2 exit points
                                           ;	.line	13; "eepromint.c"	void e2prom_w(unsigned char addr,unsigned char val)
000db8   1283     bcf     0x03, 0x5        	BANKSEL	_EEADR
000db9   1703     bsf     0x03, 0x6        
000dba   008d     movwf   0x0d             	MOVWF	_EEADR
000dbb   087f     movf    0x7f, 0x0        	MOVF	STK00,W
000dbc   008c     movwf   0x0c             	MOVWF	_EEDATA
                                           ;	.line	18; "eepromint.c"	WREN=1;
000dbd   1683     bsf     0x03, 0x5        	BANKSEL	_EECON1bits
000dbe   1703     bsf     0x03, 0x6        
000dbf   150c     bsf     0x0c, 0x2        	BSF	_EECON1bits,2
                                           ;	.line	20; "eepromint.c"	EECON2=0x55;
000dc0   3055     movlw   0x55             	MOVLW	0x55
000dc1   008d     movwf   0x0d             	MOVWF	_EECON2
                                           ;	.line	21; "eepromint.c"	EECON2=0xAA;
000dc2   30aa     movlw   0xaa             	MOVLW	0xaa
000dc3   008d     movwf   0x0d             	MOVWF	_EECON2
                                           ;	.line	23; "eepromint.c"	WR=1;
000dc4   148c     bsf     0x0c, 0x1        	BSF	_EECON1bits,1
                                           _00109_DS_
                                           ;	.line	24; "eepromint.c"	while(WR==1);
000dc5   1283     bcf     0x03, 0x5        	BANKSEL	r0x1000
000dc6   1703     bsf     0x03, 0x6        
000dc7   01c8     clrf    0x48             	CLRF	r0x1000
000dc8   1683     bsf     0x03, 0x5        	BANKSEL	_EECON1bits
000dc9   1703     bsf     0x03, 0x6        
000dca   1c8c     btfss   0x0c, 0x1        	BTFSS	_EECON1bits,1
000dcb   2dcf     goto    0x05cf           	GOTO	_00001_DS_
000dcc   1283     bcf     0x03, 0x5        	BANKSEL	r0x1000
000dcd   1703     bsf     0x03, 0x6        
000dce   0ac8     incf    0x48, 0x1        	INCF	r0x1000,F
                                           _00001_DS_
000dcf   1283     bcf     0x03, 0x5        	BANKSEL	r0x1000
000dd0   1703     bsf     0x03, 0x6        
000dd1   0848     movf    0x48, 0x0        	MOVF	r0x1000,W
                                           ;;1	MOVWF	r0x1001
                                           ;	.line	26; "eepromint.c"	WREN=0;
000dd2   3a01     xorlw   0x01             	XORLW	0x01
000dd3   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
000dd4   2dc5     goto    0x05c5           	GOTO	_00109_DS_
000dd5   1683     bsf     0x03, 0x5        	BANKSEL	_EECON1bits
000dd6   1703     bsf     0x03, 0x6        
000dd7   110c     bcf     0x0c, 0x2        	BCF	_EECON1bits,2
                                           ;	.line	28; "eepromint.c"	return;
000dd8   0008     return                   	RETURN	
                                           ; exit point of _e2prom_w

                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _e2prom_r	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;; Starting pCode block
                                           _e2prom_r	;Function start
                                           ; 2 exit points
                                           ;	.line	5; "eepromint.c"	unsigned char e2prom_r(unsigned char addr)
000dd9   1283     bcf     0x03, 0x5        	BANKSEL	_EEADR
000dda   1703     bsf     0x03, 0x6        
000ddb   008d     movwf   0x0d             	MOVWF	_EEADR
                                           ;	.line	8; "eepromint.c"	RD=1;
000ddc   1683     bsf     0x03, 0x5        	BANKSEL	_EECON1bits
000ddd   1703     bsf     0x03, 0x6        
000dde   140c     bsf     0x0c, 0x0        	BSF	_EECON1bits,0
                                           ;	.line	9; "eepromint.c"	return EEDATA;
000ddf   1283     bcf     0x03, 0x5        	BANKSEL	_EEDATA
000de0   1703     bsf     0x03, 0x6        
000de1   080c     movf    0x0c, 0x0        	MOVF	_EEDATA,W
000de2   0008     return                   	RETURN	
                                           ; exit point of _e2prom_r


                                           ;	code size estimation:
                                           ;	   23+   10 =    33 instructions (   86 byte)

                                           	end
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.5.0 #9253 (Jun 20 2015) (MINGW32)
                                           ; This file was generated Sat Jul 04 19:08:58 2020
                                           ;--------------------------------------------------------
                                           ; PIC port for the 14-bit core
                                           ;--------------------------------------------------------
                                           ;	.file	"heatercooler.c"
                                           	list	p=16f877a
                                           	radix dec
                                           	include "p16f877a.inc"
                                                   LIST

                                           ;==========================================================================
                                           ; Build date : Oct 21 2015
                                           ;  MPASM PIC16F877A processor include
                                           ; 
                                           ;  (c) Copyright 1999-2015 Microchip Technology, All rights reserved
                                           ;==========================================================================

                                                   NOLIST
                                           ;--------------------------------------------------------
                                           ; external declarations
                                           ;--------------------------------------------------------
                                           	extern	_lm35_init
                                           	extern	_lm35_set_currentTemp
                                           	extern	_lm35_get_currentTemp
                                           	extern	_lm35_update
                                           	extern	_TMR_Init
                                           	extern	_TMR_Start
                                           	extern	_TMR_CheckOverFlow
                                           	extern	_TMR_Stop
                                           	extern	_TMR_Update
                                           	extern	_tempset_init
                                           	extern	_tempset_setstate
                                           	extern	_tempset_settemp
                                           	extern	_tempset_getstate
                                           	extern	_tempset_gettemp
                                           	extern	_tempset_update
                                           	extern	_STATUSbits
                                           	extern	_PORTAbits
                                           	extern	_PORTBbits
                                           	extern	_PORTCbits
                                           	extern	_PORTDbits
                                           	extern	_PORTEbits
                                           	extern	_INTCONbits
                                           	extern	_PIR1bits
                                           	extern	_PIR2bits
                                           	extern	_T1CONbits
                                           	extern	_T2CONbits
                                           	extern	_SSPCONbits
                                           	extern	_CCP1CONbits
                                           	extern	_RCSTAbits
                                           	extern	_CCP2CONbits
                                           	extern	_ADCON0bits
                                           	extern	_OPTION_REGbits
                                           	extern	_TRISAbits
                                           	extern	_TRISBbits
                                           	extern	_TRISCbits
                                           	extern	_TRISDbits
                                           	extern	_TRISEbits
                                           	extern	_PIE1bits
                                           	extern	_PIE2bits
                                           	extern	_PCONbits
                                           	extern	_SSPCON2bits
                                           	extern	_SSPSTATbits
                                           	extern	_TXSTAbits
                                           	extern	_CMCONbits
                                           	extern	_CVRCONbits
                                           	extern	_ADCON1bits
                                           	extern	_EECON1bits
                                           	extern	_INDF
                                           	extern	_TMR0
                                           	extern	_PCL
                                           	extern	_STATUS
                                           	extern	_FSR
                                           	extern	_PORTA
                                           	extern	_PORTB
                                           	extern	_PORTC
                                           	extern	_PORTD
                                           	extern	_PORTE
                                           	extern	_PCLATH
                                           	extern	_INTCON
                                           	extern	_PIR1
                                           	extern	_PIR2
                                           	extern	_TMR1
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_T1CON
                                           	extern	_TMR2
                                           	extern	_T2CON
                                           	extern	_SSPBUF
                                           	extern	_SSPCON
                                           	extern	_CCPR1
                                           	extern	_CCPR1L
                                           	extern	_CCPR1H
                                           	extern	_CCP1CON
                                           	extern	_RCSTA
                                           	extern	_TXREG
                                           	extern	_RCREG
                                           	extern	_CCPR2
                                           	extern	_CCPR2L
                                           	extern	_CCPR2H
                                           	extern	_CCP2CON
                                           	extern	_ADRESH
                                           	extern	_ADCON0
                                           	extern	_OPTION_REG
                                           	extern	_TRISA
                                           	extern	_TRISB
                                           	extern	_TRISC
                                           	extern	_TRISD
                                           	extern	_TRISE
                                           	extern	_PIE1
                                           	extern	_PIE2
                                           	extern	_PCON
                                           	extern	_SSPCON2
                                           	extern	_PR2
                                           	extern	_SSPADD
                                           	extern	_SSPSTAT
                                           	extern	_TXSTA
                                           	extern	_SPBRG
                                           	extern	_CMCON
                                           	extern	_CVRCON
                                           	extern	_ADRESL
                                           	extern	_ADCON1
                                           	extern	_EEDATA
                                           	extern	_EEADR
                                           	extern	_EEDATH
                                           	extern	_EEADRH
                                           	extern	_EECON1
                                           	extern	_EECON2

                                           	extern PSAVE
                                           	extern SSAVE
                                           	extern WSAVE
                                           	extern STK12
                                           	extern STK11
                                           	extern STK10
                                           	extern STK09
                                           	extern STK08
                                           	extern STK07
                                           	extern STK06
                                           	extern STK05
                                           	extern STK04
                                           	extern STK03
                                           	extern STK02
                                           	extern STK01
                                           	extern STK00
                                           ;--------------------------------------------------------
                                           ; global declarations
                                           ;--------------------------------------------------------
                                           	global	_cooler_update
                                           	global	_cooler_get_state
                                           	global	_cooler_set_state
                                           	global	_cooler_init
                                           	global	_heater_update
                                           	global	_heater_get_state
                                           	global	_heater_set_state
                                           	global	_heater_init

                                           ;--------------------------------------------------------
                                           ; global definitions
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; absolute symbol definitions
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; compiler-defined variables
                                           ;--------------------------------------------------------
                                           UDL_heatercooler_0	udata
                                           r0x100F	res	1
                                           r0x100B	res	1
                                           r0x100C	res	1
                                           r0x100E	res	1
                                           r0x100D	res	1
                                           r0x100A	res	1
                                           r0x1006	res	1
                                           r0x1007	res	1
                                           r0x1009	res	1
                                           r0x1008	res	1
                                           _heaterstate	res	1
                                           _heater_update_taskcounter_1_30	res	2
                                           _coolerstate	res	1
                                           _cooler_update_taskcounter_1_41	res	2
                                           ;--------------------------------------------------------
                                           ; initialized data
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; overlayable items in internal ram 
                                           ;--------------------------------------------------------
                                           ;	udata_ovr
                                           ;--------------------------------------------------------
                                           ; code
                                           ;--------------------------------------------------------
                                           code_heatercooler	code
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _cooler_update	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;functions called:
                                           ;   _cooler_get_state
                                           ;   _lm35_get_currentTemp
                                           ;   _tempset_gettemp
                                           ;   _cooler_set_state
                                           ;   _lm35_get_currentTemp
                                           ;   _tempset_gettemp
                                           ;   _cooler_set_state
                                           ;   _cooler_get_state
                                           ;   _lm35_get_currentTemp
                                           ;   _tempset_gettemp
                                           ;   _cooler_set_state
                                           ;   _lm35_get_currentTemp
                                           ;   _tempset_gettemp
                                           ;   _cooler_set_state
                                           ;5 compiler assigned registers:
                                           ;   r0x1006
                                           ;   r0x1007
                                           ;   STK00
                                           ;   r0x1008
                                           ;   r0x1009
                                           ;; Starting pCode block
                                           _cooler_update	;Function start
                                           ; 2 exit points
                                           ;	.line	87; "heatercooler.c"	taskcounter+=TMR_TICK_MS;
000957   3014     movlw   0x14             	MOVLW	0x14
000958   1683     bsf     0x03, 0x5        	BANKSEL	_cooler_update_taskcounter_1_41
000959   1303     bcf     0x03, 0x6        
00095a   07d5     addwf   0x55, 0x1        	ADDWF	_cooler_update_taskcounter_1_41,F
00095b   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
00095c   0ad6     incf    0x56, 0x1        	INCF	(_cooler_update_taskcounter_1_41 + 1),F
                                           ;	.line	89; "heatercooler.c"	if(taskcounter!=taskperiod)
00095d   0855     movf    0x55, 0x0        	MOVF	_cooler_update_taskcounter_1_41,W
00095e   3a64     xorlw   0x64             	XORLW	0x64
00095f   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
000960   2964     goto    0x0164           	GOTO	_00192_DS_
000961   0856     movf    0x56, 0x0        	MOVF	(_cooler_update_taskcounter_1_41 + 1),W
                                           ;	.line	91; "heatercooler.c"	return ;
000962   3a00     xorlw   0x00             	XORLW	0x00
                                           ;	.line	93; "heatercooler.c"	taskcounter=0;
000963   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
                                           _00192_DS_
000964   29d2     goto    0x01d2           	GOTO	_00175_DS_
000965   1683     bsf     0x03, 0x5        	BANKSEL	_cooler_update_taskcounter_1_41
000966   1303     bcf     0x03, 0x6        
000967   01d5     clrf    0x55             	CLRF	_cooler_update_taskcounter_1_41
000968   01d6     clrf    0x56             	CLRF	(_cooler_update_taskcounter_1_41 + 1)
                                           ;	.line	95; "heatercooler.c"	switch(cooler_get_state())
000969   21d3     call    0x01d3           	CALL	_cooler_get_state
00096a   1683     bsf     0x03, 0x5        	BANKSEL	r0x1006
00096b   1303     bcf     0x03, 0x6        
00096c   00cd     movwf   0x4d             	MOVWF	r0x1006
00096d   00ce     movwf   0x4e             	MOVWF	r0x1007
00096e   084e     movf    0x4e, 0x0        	MOVF	r0x1007,W
00096f   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
000970   2976     goto    0x0176           	GOTO	_00167_DS_
000971   084d     movf    0x4d, 0x0        	MOVF	r0x1006,W
000972   3a01     xorlw   0x01             	XORLW	0x01
000973   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
000974   29a5     goto    0x01a5           	GOTO	_00170_DS_
000975   29d2     goto    0x01d2           	GOTO	_00175_DS_
                                           _00167_DS_
                                           ;	.line	98; "heatercooler.c"	if(lm35_get_currentTemp()>tempset_gettemp()+5)
000976   158a     bsf     0x0a, 0x3        	PAGESEL	_lm35_get_currentTemp
000977   120a     bcf     0x0a, 0x4        
000978   2074     call    0x0074           	CALL	_lm35_get_currentTemp
000979   158a     bsf     0x0a, 0x3        	PAGESEL	$
00097a   120a     bcf     0x0a, 0x4        
00097b   1683     bsf     0x03, 0x5        	BANKSEL	r0x1007
00097c   1303     bcf     0x03, 0x6        
00097d   00ce     movwf   0x4e             	MOVWF	r0x1007
00097e   087f     movf    0x7f, 0x0        	MOVF	STK00,W
00097f   00cd     movwf   0x4d             	MOVWF	r0x1006
000980   118a     bcf     0x0a, 0x3        	PAGESEL	_tempset_gettemp
000981   120a     bcf     0x0a, 0x4        
000982   2575     call    0x0575           	CALL	_tempset_gettemp
000983   158a     bsf     0x0a, 0x3        	PAGESEL	$
000984   120a     bcf     0x0a, 0x4        
000985   1683     bsf     0x03, 0x5        	BANKSEL	r0x1008
000986   1303     bcf     0x03, 0x6        
000987   00d0     movwf   0x50             	MOVWF	r0x1008
000988   087f     movf    0x7f, 0x0        	MOVF	STK00,W
000989   00cf     movwf   0x4f             	MOVWF	r0x1009
00098a   3005     movlw   0x05             	MOVLW	0x05
00098b   07cf     addwf   0x4f, 0x1        	ADDWF	r0x1009,F
00098c   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
00098d   0ad0     incf    0x50, 0x1        	INCF	r0x1008,F
00098e   084e     movf    0x4e, 0x0        	MOVF	r0x1007,W
00098f   0250     subwf   0x50, 0x0        	SUBWF	r0x1008,W
000990   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
000991   2994     goto    0x0194           	GOTO	_00195_DS_
000992   084d     movf    0x4d, 0x0        	MOVF	r0x1006,W
000993   024f     subwf   0x4f, 0x0        	SUBWF	r0x1009,W
                                           _00195_DS_
000994   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
000995   29d2     goto    0x01d2           	GOTO	_00175_DS_
                                           ;;genSkipc:3247: created from rifx:027A5E04
                                           ;	.line	100; "heatercooler.c"	cooler_set_state(cooleron);
000996   3001     movlw   0x01             	MOVLW	0x01
000997   21d7     call    0x01d7           	CALL	_cooler_set_state
                                           ;	.line	101; "heatercooler.c"	GPIO_WritePortPin(GPIO_PORTC_DATA,GPIO_PIN_2,1);
000998   1283     bcf     0x03, 0x5        	BANKSEL	_PORTC
000999   1303     bcf     0x03, 0x6        
00099a   0807     movf    0x07, 0x0        	MOVF	_PORTC,W
00099b   1683     bsf     0x03, 0x5        	BANKSEL	r0x1006
00099c   1303     bcf     0x03, 0x6        
00099d   00cd     movwf   0x4d             	MOVWF	r0x1006
00099e   114d     bcf     0x4d, 0x2        	BCF	r0x1006,2
00099f   3004     movlw   0x04             	MOVLW	0x04
0009a0   044d     iorwf   0x4d, 0x0        	IORWF	r0x1006,W
0009a1   1283     bcf     0x03, 0x5        	BANKSEL	_PORTC
0009a2   1303     bcf     0x03, 0x6        
0009a3   0087     movwf   0x07             	MOVWF	_PORTC
                                           ;	.line	103; "heatercooler.c"	break;
0009a4   29d2     goto    0x01d2           	GOTO	_00175_DS_
                                           _00170_DS_
                                           ;	.line	106; "heatercooler.c"	if(lm35_get_currentTemp()<tempset_gettemp()-5)
0009a5   158a     bsf     0x0a, 0x3        	PAGESEL	_lm35_get_currentTemp
0009a6   120a     bcf     0x0a, 0x4        
0009a7   2074     call    0x0074           	CALL	_lm35_get_currentTemp
0009a8   158a     bsf     0x0a, 0x3        	PAGESEL	$
0009a9   120a     bcf     0x0a, 0x4        
0009aa   1683     bsf     0x03, 0x5        	BANKSEL	r0x1007
0009ab   1303     bcf     0x03, 0x6        
0009ac   00ce     movwf   0x4e             	MOVWF	r0x1007
0009ad   087f     movf    0x7f, 0x0        	MOVF	STK00,W
0009ae   00cd     movwf   0x4d             	MOVWF	r0x1006
0009af   118a     bcf     0x0a, 0x3        	PAGESEL	_tempset_gettemp
0009b0   120a     bcf     0x0a, 0x4        
0009b1   2575     call    0x0575           	CALL	_tempset_gettemp
0009b2   158a     bsf     0x0a, 0x3        	PAGESEL	$
0009b3   120a     bcf     0x0a, 0x4        
0009b4   1683     bsf     0x03, 0x5        	BANKSEL	r0x1008
0009b5   1303     bcf     0x03, 0x6        
0009b6   00d0     movwf   0x50             	MOVWF	r0x1008
0009b7   087f     movf    0x7f, 0x0        	MOVF	STK00,W
0009b8   00cf     movwf   0x4f             	MOVWF	r0x1009
0009b9   30fb     movlw   0xfb             	MOVLW	0xfb
0009ba   07cf     addwf   0x4f, 0x1        	ADDWF	r0x1009,F
0009bb   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
0009bc   03d0     decf    0x50, 0x1        	DECF	r0x1008,F
0009bd   0850     movf    0x50, 0x0        	MOVF	r0x1008,W
0009be   024e     subwf   0x4e, 0x0        	SUBWF	r0x1007,W
0009bf   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
0009c0   29c3     goto    0x01c3           	GOTO	_00196_DS_
0009c1   084f     movf    0x4f, 0x0        	MOVF	r0x1009,W
0009c2   024d     subwf   0x4d, 0x0        	SUBWF	r0x1006,W
                                           _00196_DS_
0009c3   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
0009c4   29d2     goto    0x01d2           	GOTO	_00175_DS_
                                           ;;genSkipc:3247: created from rifx:027A5E04
                                           ;	.line	108; "heatercooler.c"	cooler_set_state(cooleroff);
0009c5   3000     movlw   0x00             	MOVLW	0x00
0009c6   21d7     call    0x01d7           	CALL	_cooler_set_state
                                           ;	.line	109; "heatercooler.c"	GPIO_WritePortPin(GPIO_PORTC_DATA,GPIO_PIN_2,0);
0009c7   1283     bcf     0x03, 0x5        	BANKSEL	_PORTC
0009c8   1303     bcf     0x03, 0x6        
0009c9   0807     movf    0x07, 0x0        	MOVF	_PORTC,W
0009ca   1683     bsf     0x03, 0x5        	BANKSEL	r0x1006
0009cb   1303     bcf     0x03, 0x6        
0009cc   00cd     movwf   0x4d             	MOVWF	r0x1006
0009cd   30fb     movlw   0xfb             	MOVLW	0xfb
0009ce   054d     andwf   0x4d, 0x0        	ANDWF	r0x1006,W
0009cf   1283     bcf     0x03, 0x5        	BANKSEL	_PORTC
0009d0   1303     bcf     0x03, 0x6        
0009d1   0087     movwf   0x07             	MOVWF	_PORTC
                                           _00175_DS_
                                           ;	.line	116; "heatercooler.c"	}
0009d2   0008     return                   	RETURN	
                                           ; exit point of _cooler_update

                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _cooler_get_state	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;; Starting pCode block
                                           _cooler_get_state	;Function start
                                           ; 2 exit points
                                           ;	.line	80; "heatercooler.c"	return coolerstate;
0009d3   1683     bsf     0x03, 0x5        	BANKSEL	_coolerstate
0009d4   1303     bcf     0x03, 0x6        
0009d5   0854     movf    0x54, 0x0        	MOVF	_coolerstate,W
0009d6   0008     return                   	RETURN	
                                           ; exit point of _cooler_get_state

                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _cooler_set_state	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;; Starting pCode block
                                           _cooler_set_state	;Function start
                                           ; 2 exit points
                                           ;	.line	73; "heatercooler.c"	void cooler_set_state(cooler_state state)
0009d7   1683     bsf     0x03, 0x5        	BANKSEL	_coolerstate
0009d8   1303     bcf     0x03, 0x6        
0009d9   00d4     movwf   0x54             	MOVWF	_coolerstate
                                           ;	.line	75; "heatercooler.c"	coolerstate=state;
0009da   0008     return                   	RETURN	
                                           ; exit point of _cooler_set_state

                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _cooler_init	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;functions called:
                                           ;   _cooler_set_state
                                           ;   _cooler_set_state
                                           ;1 compiler assigned register :
                                           ;   r0x100A
                                           ;; Starting pCode block
                                           _cooler_init	;Function start
                                           ; 2 exit points
                                           ;	.line	66; "heatercooler.c"	void cooler_init (cooler_state state)
0009db   1683     bsf     0x03, 0x5        	BANKSEL	r0x100A
0009dc   1303     bcf     0x03, 0x6        
0009dd   00cc     movwf   0x4c             	MOVWF	r0x100A
                                           ;	.line	68; "heatercooler.c"	cooler_set_state(state);
0009de   158a     bsf     0x0a, 0x3        	PAGESEL	_cooler_set_state
0009df   120a     bcf     0x0a, 0x4        
0009e0   21d7     call    0x01d7           	CALL	_cooler_set_state
0009e1   158a     bsf     0x0a, 0x3        	PAGESEL	$
0009e2   120a     bcf     0x0a, 0x4        
                                           ;	.line	69; "heatercooler.c"	GPIO_InitPortPin(GPIO_PORTC_CONTROL,GPIO_PIN_2,GPIO_OUT);
0009e3   1683     bsf     0x03, 0x5        	BANKSEL	_TRISC
0009e4   1303     bcf     0x03, 0x6        
0009e5   0807     movf    0x07, 0x0        	MOVF	_TRISC,W
0009e6   1683     bsf     0x03, 0x5        	BANKSEL	r0x100A
0009e7   1303     bcf     0x03, 0x6        
0009e8   00cc     movwf   0x4c             	MOVWF	r0x100A
0009e9   30fb     movlw   0xfb             	MOVLW	0xfb
0009ea   054c     andwf   0x4c, 0x0        	ANDWF	r0x100A,W
0009eb   1683     bsf     0x03, 0x5        	BANKSEL	_TRISC
0009ec   1303     bcf     0x03, 0x6        
0009ed   0087     movwf   0x07             	MOVWF	_TRISC
0009ee   0008     return                   	RETURN	
                                           ; exit point of _cooler_init

                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _heater_update	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;functions called:
                                           ;   _heater_get_state
                                           ;   _lm35_get_currentTemp
                                           ;   _tempset_gettemp
                                           ;   _heater_set_state
                                           ;   _lm35_get_currentTemp
                                           ;   _tempset_gettemp
                                           ;   _heater_set_state
                                           ;   _heater_get_state
                                           ;   _lm35_get_currentTemp
                                           ;   _tempset_gettemp
                                           ;   _heater_set_state
                                           ;   _lm35_get_currentTemp
                                           ;   _tempset_gettemp
                                           ;   _heater_set_state
                                           ;5 compiler assigned registers:
                                           ;   r0x100B
                                           ;   r0x100C
                                           ;   STK00
                                           ;   r0x100D
                                           ;   r0x100E
                                           ;; Starting pCode block
                                           _heater_update	;Function start
                                           ; 2 exit points
                                           ;	.line	31; "heatercooler.c"	taskcounter+=TMR_TICK_MS;
0009ef   3014     movlw   0x14             	MOVLW	0x14
0009f0   1683     bsf     0x03, 0x5        	BANKSEL	_heater_update_taskcounter_1_30
0009f1   1303     bcf     0x03, 0x6        
0009f2   07d2     addwf   0x52, 0x1        	ADDWF	_heater_update_taskcounter_1_30,F
0009f3   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
0009f4   0ad3     incf    0x53, 0x1        	INCF	(_heater_update_taskcounter_1_30 + 1),F
                                           ;	.line	33; "heatercooler.c"	if(taskcounter!=taskperiod)
0009f5   0852     movf    0x52, 0x0        	MOVF	_heater_update_taskcounter_1_30,W
0009f6   3a64     xorlw   0x64             	XORLW	0x64
0009f7   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
0009f8   29fc     goto    0x01fc           	GOTO	_00144_DS_
0009f9   0853     movf    0x53, 0x0        	MOVF	(_heater_update_taskcounter_1_30 + 1),W
                                           ;	.line	35; "heatercooler.c"	return ;
0009fa   3a00     xorlw   0x00             	XORLW	0x00
                                           ;	.line	37; "heatercooler.c"	taskcounter=0;
0009fb   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
                                           _00144_DS_
0009fc   2a6a     goto    0x026a           	GOTO	_00127_DS_
0009fd   1683     bsf     0x03, 0x5        	BANKSEL	_heater_update_taskcounter_1_30
0009fe   1303     bcf     0x03, 0x6        
0009ff   01d2     clrf    0x52             	CLRF	_heater_update_taskcounter_1_30
000a00   01d3     clrf    0x53             	CLRF	(_heater_update_taskcounter_1_30 + 1)
                                           ;	.line	39; "heatercooler.c"	switch(heater_get_state())
000a01   226b     call    0x026b           	CALL	_heater_get_state
000a02   1683     bsf     0x03, 0x5        	BANKSEL	r0x100B
000a03   1303     bcf     0x03, 0x6        
000a04   00c8     movwf   0x48             	MOVWF	r0x100B
000a05   00c9     movwf   0x49             	MOVWF	r0x100C
000a06   0849     movf    0x49, 0x0        	MOVF	r0x100C,W
000a07   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
000a08   2a0e     goto    0x020e           	GOTO	_00119_DS_
000a09   0848     movf    0x48, 0x0        	MOVF	r0x100B,W
000a0a   3a01     xorlw   0x01             	XORLW	0x01
000a0b   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
000a0c   2a3d     goto    0x023d           	GOTO	_00122_DS_
000a0d   2a6a     goto    0x026a           	GOTO	_00127_DS_
                                           _00119_DS_
                                           ;	.line	43; "heatercooler.c"	if(lm35_get_currentTemp()<(tempset_gettemp()-5))
000a0e   158a     bsf     0x0a, 0x3        	PAGESEL	_lm35_get_currentTemp
000a0f   120a     bcf     0x0a, 0x4        
000a10   2074     call    0x0074           	CALL	_lm35_get_currentTemp
000a11   158a     bsf     0x0a, 0x3        	PAGESEL	$
000a12   120a     bcf     0x0a, 0x4        
000a13   1683     bsf     0x03, 0x5        	BANKSEL	r0x100C
000a14   1303     bcf     0x03, 0x6        
000a15   00c9     movwf   0x49             	MOVWF	r0x100C
000a16   087f     movf    0x7f, 0x0        	MOVF	STK00,W
000a17   00c8     movwf   0x48             	MOVWF	r0x100B
000a18   118a     bcf     0x0a, 0x3        	PAGESEL	_tempset_gettemp
000a19   120a     bcf     0x0a, 0x4        
000a1a   2575     call    0x0575           	CALL	_tempset_gettemp
000a1b   158a     bsf     0x0a, 0x3        	PAGESEL	$
000a1c   120a     bcf     0x0a, 0x4        
000a1d   1683     bsf     0x03, 0x5        	BANKSEL	r0x100D
000a1e   1303     bcf     0x03, 0x6        
000a1f   00cb     movwf   0x4b             	MOVWF	r0x100D
000a20   087f     movf    0x7f, 0x0        	MOVF	STK00,W
000a21   00ca     movwf   0x4a             	MOVWF	r0x100E
000a22   30fb     movlw   0xfb             	MOVLW	0xfb
000a23   07ca     addwf   0x4a, 0x1        	ADDWF	r0x100E,F
000a24   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
000a25   03cb     decf    0x4b, 0x1        	DECF	r0x100D,F
000a26   084b     movf    0x4b, 0x0        	MOVF	r0x100D,W
000a27   0249     subwf   0x49, 0x0        	SUBWF	r0x100C,W
000a28   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
000a29   2a2c     goto    0x022c           	GOTO	_00147_DS_
000a2a   084a     movf    0x4a, 0x0        	MOVF	r0x100E,W
000a2b   0248     subwf   0x48, 0x0        	SUBWF	r0x100B,W
                                           _00147_DS_
000a2c   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
000a2d   2a6a     goto    0x026a           	GOTO	_00127_DS_
                                           ;;genSkipc:3247: created from rifx:027A5E04
                                           ;	.line	45; "heatercooler.c"	heater_set_state(heateron);
000a2e   3001     movlw   0x01             	MOVLW	0x01
000a2f   226f     call    0x026f           	CALL	_heater_set_state
                                           ;	.line	46; "heatercooler.c"	GPIO_WritePortPin(GPIO_PORTC_DATA,GPIO_PIN_5,1);
000a30   1283     bcf     0x03, 0x5        	BANKSEL	_PORTC
000a31   1303     bcf     0x03, 0x6        
000a32   0807     movf    0x07, 0x0        	MOVF	_PORTC,W
000a33   1683     bsf     0x03, 0x5        	BANKSEL	r0x100B
000a34   1303     bcf     0x03, 0x6        
000a35   00c8     movwf   0x48             	MOVWF	r0x100B
000a36   12c8     bcf     0x48, 0x5        	BCF	r0x100B,5
000a37   3020     movlw   0x20             	MOVLW	0x20
000a38   0448     iorwf   0x48, 0x0        	IORWF	r0x100B,W
000a39   1283     bcf     0x03, 0x5        	BANKSEL	_PORTC
000a3a   1303     bcf     0x03, 0x6        
000a3b   0087     movwf   0x07             	MOVWF	_PORTC
                                           ;	.line	48; "heatercooler.c"	break;
000a3c   2a6a     goto    0x026a           	GOTO	_00127_DS_
                                           _00122_DS_
                                           ;	.line	51; "heatercooler.c"	if(lm35_get_currentTemp()>(tempset_gettemp()+5))
000a3d   158a     bsf     0x0a, 0x3        	PAGESEL	_lm35_get_currentTemp
000a3e   120a     bcf     0x0a, 0x4        
000a3f   2074     call    0x0074           	CALL	_lm35_get_currentTemp
000a40   158a     bsf     0x0a, 0x3        	PAGESEL	$
000a41   120a     bcf     0x0a, 0x4        
000a42   1683     bsf     0x03, 0x5        	BANKSEL	r0x100C
000a43   1303     bcf     0x03, 0x6        
000a44   00c9     movwf   0x49             	MOVWF	r0x100C
000a45   087f     movf    0x7f, 0x0        	MOVF	STK00,W
000a46   00c8     movwf   0x48             	MOVWF	r0x100B
000a47   118a     bcf     0x0a, 0x3        	PAGESEL	_tempset_gettemp
000a48   120a     bcf     0x0a, 0x4        
000a49   2575     call    0x0575           	CALL	_tempset_gettemp
000a4a   158a     bsf     0x0a, 0x3        	PAGESEL	$
000a4b   120a     bcf     0x0a, 0x4        
000a4c   1683     bsf     0x03, 0x5        	BANKSEL	r0x100D
000a4d   1303     bcf     0x03, 0x6        
000a4e   00cb     movwf   0x4b             	MOVWF	r0x100D
000a4f   087f     movf    0x7f, 0x0        	MOVF	STK00,W
000a50   00ca     movwf   0x4a             	MOVWF	r0x100E
000a51   3005     movlw   0x05             	MOVLW	0x05
000a52   07ca     addwf   0x4a, 0x1        	ADDWF	r0x100E,F
000a53   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
000a54   0acb     incf    0x4b, 0x1        	INCF	r0x100D,F
000a55   0849     movf    0x49, 0x0        	MOVF	r0x100C,W
000a56   024b     subwf   0x4b, 0x0        	SUBWF	r0x100D,W
000a57   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
000a58   2a5b     goto    0x025b           	GOTO	_00148_DS_
000a59   0848     movf    0x48, 0x0        	MOVF	r0x100B,W
000a5a   024a     subwf   0x4a, 0x0        	SUBWF	r0x100E,W
                                           _00148_DS_
000a5b   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
000a5c   2a6a     goto    0x026a           	GOTO	_00127_DS_
                                           ;;genSkipc:3247: created from rifx:027A5E04
                                           ;	.line	53; "heatercooler.c"	heater_set_state(heateroff);
000a5d   3000     movlw   0x00             	MOVLW	0x00
000a5e   226f     call    0x026f           	CALL	_heater_set_state
                                           ;	.line	54; "heatercooler.c"	GPIO_WritePortPin(GPIO_PORTC_DATA,GPIO_PIN_5,0);
000a5f   1283     bcf     0x03, 0x5        	BANKSEL	_PORTC
000a60   1303     bcf     0x03, 0x6        
000a61   0807     movf    0x07, 0x0        	MOVF	_PORTC,W
000a62   1683     bsf     0x03, 0x5        	BANKSEL	r0x100B
000a63   1303     bcf     0x03, 0x6        
000a64   00c8     movwf   0x48             	MOVWF	r0x100B
000a65   30df     movlw   0xdf             	MOVLW	0xdf
000a66   0548     andwf   0x48, 0x0        	ANDWF	r0x100B,W
000a67   1283     bcf     0x03, 0x5        	BANKSEL	_PORTC
000a68   1303     bcf     0x03, 0x6        
000a69   0087     movwf   0x07             	MOVWF	_PORTC
                                           _00127_DS_
                                           ;	.line	61; "heatercooler.c"	}
000a6a   0008     return                   	RETURN	
                                           ; exit point of _heater_update

                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _heater_get_state	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;; Starting pCode block
                                           _heater_get_state	;Function start
                                           ; 2 exit points
                                           ;	.line	25; "heatercooler.c"	return heaterstate;
000a6b   1683     bsf     0x03, 0x5        	BANKSEL	_heaterstate
000a6c   1303     bcf     0x03, 0x6        
000a6d   0851     movf    0x51, 0x0        	MOVF	_heaterstate,W
000a6e   0008     return                   	RETURN	
                                           ; exit point of _heater_get_state

                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _heater_set_state	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;; Starting pCode block
                                           _heater_set_state	;Function start
                                           ; 2 exit points
                                           ;	.line	19; "heatercooler.c"	void heater_set_state(heater_state state)
000a6f   1683     bsf     0x03, 0x5        	BANKSEL	_heaterstate
000a70   1303     bcf     0x03, 0x6        
000a71   00d1     movwf   0x51             	MOVWF	_heaterstate
                                           ;	.line	20; "heatercooler.c"	{heaterstate=state;
000a72   0008     return                   	RETURN	
                                           ; exit point of _heater_set_state

                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _heater_init	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;functions called:
                                           ;   _heater_set_state
                                           ;   _heater_set_state
                                           ;1 compiler assigned register :
                                           ;   r0x100F
                                           ;; Starting pCode block
                                           _heater_init	;Function start
                                           ; 2 exit points
                                           ;	.line	13; "heatercooler.c"	void heater_init (heater_state state)
000a73   1683     bsf     0x03, 0x5        	BANKSEL	r0x100F
000a74   1303     bcf     0x03, 0x6        
000a75   00c7     movwf   0x47             	MOVWF	r0x100F
                                           ;	.line	15; "heatercooler.c"	heater_set_state(state);
000a76   158a     bsf     0x0a, 0x3        	PAGESEL	_heater_set_state
000a77   120a     bcf     0x0a, 0x4        
000a78   226f     call    0x026f           	CALL	_heater_set_state
000a79   158a     bsf     0x0a, 0x3        	PAGESEL	$
000a7a   120a     bcf     0x0a, 0x4        
                                           ;	.line	16; "heatercooler.c"	GPIO_InitPortPin(GPIO_PORTC_CONTROL,GPIO_PIN_5,GPIO_OUT);
000a7b   1683     bsf     0x03, 0x5        	BANKSEL	_TRISC
000a7c   1303     bcf     0x03, 0x6        
000a7d   0807     movf    0x07, 0x0        	MOVF	_TRISC,W
000a7e   1683     bsf     0x03, 0x5        	BANKSEL	r0x100F
000a7f   1303     bcf     0x03, 0x6        
000a80   00c7     movwf   0x47             	MOVWF	r0x100F
000a81   30df     movlw   0xdf             	MOVLW	0xdf
000a82   0547     andwf   0x47, 0x0        	ANDWF	r0x100F,W
000a83   1683     bsf     0x03, 0x5        	BANKSEL	_TRISC
000a84   1303     bcf     0x03, 0x6        
000a85   0087     movwf   0x07             	MOVWF	_TRISC
000a86   0008     return                   	RETURN	
                                           ; exit point of _heater_init


                                           ;	code size estimation:
                                           ;	  188+   58 =   246 instructions (  608 byte)

                                           	end
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.5.0 #9253 (Jun 20 2015) (MINGW32)
                                           ; This file was generated Sat Jul 04 19:03:24 2020
                                           ;--------------------------------------------------------
                                           ; PIC port for the 14-bit core
                                           ;--------------------------------------------------------
                                           ;	.file	"led.c"
                                           	list	p=16f877a
                                           	radix dec
                                           	include "p16f877a.inc"
                                                   LIST

                                           ;==========================================================================
                                           ; Build date : Oct 21 2015
                                           ;  MPASM PIC16F877A processor include
                                           ; 
                                           ;  (c) Copyright 1999-2015 Microchip Technology, All rights reserved
                                           ;==========================================================================

                                                   NOLIST
                                           ;--------------------------------------------------------
                                           ; external declarations
                                           ;--------------------------------------------------------
                                           	extern	_TMR_Init
                                           	extern	_TMR_Start
                                           	extern	_TMR_CheckOverFlow
                                           	extern	_TMR_Stop
                                           	extern	_TMR_Update
                                           	extern	_heater_init
                                           	extern	_heater_set_state
                                           	extern	_heater_get_state
                                           	extern	_heater_update
                                           	extern	_cooler_init
                                           	extern	_cooler_set_state
                                           	extern	_cooler_get_state
                                           	extern	_cooler_update
                                           	extern	_STATUSbits
                                           	extern	_PORTAbits
                                           	extern	_PORTBbits
                                           	extern	_PORTCbits
                                           	extern	_PORTDbits
                                           	extern	_PORTEbits
                                           	extern	_INTCONbits
                                           	extern	_PIR1bits
                                           	extern	_PIR2bits
                                           	extern	_T1CONbits
                                           	extern	_T2CONbits
                                           	extern	_SSPCONbits
                                           	extern	_CCP1CONbits
                                           	extern	_RCSTAbits
                                           	extern	_CCP2CONbits
                                           	extern	_ADCON0bits
                                           	extern	_OPTION_REGbits
                                           	extern	_TRISAbits
                                           	extern	_TRISBbits
                                           	extern	_TRISCbits
                                           	extern	_TRISDbits
                                           	extern	_TRISEbits
                                           	extern	_PIE1bits
                                           	extern	_PIE2bits
                                           	extern	_PCONbits
                                           	extern	_SSPCON2bits
                                           	extern	_SSPSTATbits
                                           	extern	_TXSTAbits
                                           	extern	_CMCONbits
                                           	extern	_CVRCONbits
                                           	extern	_ADCON1bits
                                           	extern	_EECON1bits
                                           	extern	_INDF
                                           	extern	_TMR0
                                           	extern	_PCL
                                           	extern	_STATUS
                                           	extern	_FSR
                                           	extern	_PORTA
                                           	extern	_PORTB
                                           	extern	_PORTC
                                           	extern	_PORTD
                                           	extern	_PORTE
                                           	extern	_PCLATH
                                           	extern	_INTCON
                                           	extern	_PIR1
                                           	extern	_PIR2
                                           	extern	_TMR1
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_T1CON
                                           	extern	_TMR2
                                           	extern	_T2CON
                                           	extern	_SSPBUF
                                           	extern	_SSPCON
                                           	extern	_CCPR1
                                           	extern	_CCPR1L
                                           	extern	_CCPR1H
                                           	extern	_CCP1CON
                                           	extern	_RCSTA
                                           	extern	_TXREG
                                           	extern	_RCREG
                                           	extern	_CCPR2
                                           	extern	_CCPR2L
                                           	extern	_CCPR2H
                                           	extern	_CCP2CON
                                           	extern	_ADRESH
                                           	extern	_ADCON0
                                           	extern	_OPTION_REG
                                           	extern	_TRISA
                                           	extern	_TRISB
                                           	extern	_TRISC
                                           	extern	_TRISD
                                           	extern	_TRISE
                                           	extern	_PIE1
                                           	extern	_PIE2
                                           	extern	_PCON
                                           	extern	_SSPCON2
                                           	extern	_PR2
                                           	extern	_SSPADD
                                           	extern	_SSPSTAT
                                           	extern	_TXSTA
                                           	extern	_SPBRG
                                           	extern	_CMCON
                                           	extern	_CVRCON
                                           	extern	_ADRESL
                                           	extern	_ADCON1
                                           	extern	_EEDATA
                                           	extern	_EEADR
                                           	extern	_EEDATH
                                           	extern	_EEADRH
                                           	extern	_EECON1
                                           	extern	_EECON2

                                           	extern PSAVE
                                           	extern SSAVE
                                           	extern WSAVE
                                           	extern STK12
                                           	extern STK11
                                           	extern STK10
                                           	extern STK09
                                           	extern STK08
                                           	extern STK07
                                           	extern STK06
                                           	extern STK05
                                           	extern STK04
                                           	extern STK03
                                           	extern STK02
                                           	extern STK01
                                           	extern STK00
                                           ;--------------------------------------------------------
                                           ; global declarations
                                           ;--------------------------------------------------------
                                           	global	_led_update
                                           	global	_led_get_state
                                           	global	_led_set_state
                                           	global	_led_init

                                           ;--------------------------------------------------------
                                           ; global definitions
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; absolute symbol definitions
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; compiler-defined variables
                                           ;--------------------------------------------------------
                                           UDL_led_0	udata
                                           r0x1009	res	1
                                           r0x1006	res	1
                                           _ledstate	res	1
                                           _led_update_taskcounter_1_24	res	2
                                           _led_update_secondcounter_1_24	res	2
                                           _led_update_blink_1_24	res	1
                                           ;--------------------------------------------------------
                                           ; initialized data
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; overlayable items in internal ram 
                                           ;--------------------------------------------------------
                                           ;	udata_ovr
                                           ;--------------------------------------------------------
                                           ; code
                                           ;--------------------------------------------------------
                                           code_led	code
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _led_update	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;functions called:
                                           ;   _led_get_state
                                           ;   _heater_get_state
                                           ;   _led_set_state
                                           ;   _cooler_get_state
                                           ;   _led_set_state
                                           ;   _cooler_get_state
                                           ;   _led_set_state
                                           ;   _heater_get_state
                                           ;   _led_set_state
                                           ;   _led_get_state
                                           ;   _heater_get_state
                                           ;   _led_set_state
                                           ;   _cooler_get_state
                                           ;   _led_set_state
                                           ;   _cooler_get_state
                                           ;   _led_set_state
                                           ;   _heater_get_state
                                           ;   _led_set_state
                                           ;3 compiler assigned registers:
                                           ;   r0x1006
                                           ;   r0x1007
                                           ;   r0x1008
                                           ;; Starting pCode block
                                           _led_update	;Function start
                                           ; 2 exit points
                                           ;	.line	33; "led.c"	taskcounter+=TMR_TICK_MS;
0006ee   3014     movlw   0x14             	MOVLW	0x14
0006ef   1283     bcf     0x03, 0x5        	BANKSEL	_led_update_taskcounter_1_24
0006f0   1703     bsf     0x03, 0x6        
0006f1   07b1     addwf   0x31, 0x1        	ADDWF	_led_update_taskcounter_1_24,F
0006f2   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
0006f3   0ab2     incf    0x32, 0x1        	INCF	(_led_update_taskcounter_1_24 + 1),F
                                           ;	.line	35; "led.c"	if(taskcounter!=taskperiod)
0006f4   0831     movf    0x31, 0x0        	MOVF	_led_update_taskcounter_1_24,W
0006f5   3a64     xorlw   0x64             	XORLW	0x64
0006f6   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
0006f7   2efb     goto    0x06fb           	GOTO	_00158_DS_
0006f8   0832     movf    0x32, 0x0        	MOVF	(_led_update_taskcounter_1_24 + 1),W
                                           ;	.line	37; "led.c"	return ;
0006f9   3a00     xorlw   0x00             	XORLW	0x00
                                           ;	.line	39; "led.c"	taskcounter=0;
0006fa   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
                                           _00158_DS_
0006fb   2f8d     goto    0x078d           	GOTO	_00135_DS_
0006fc   1283     bcf     0x03, 0x5        	BANKSEL	_led_update_taskcounter_1_24
0006fd   1703     bsf     0x03, 0x6        
0006fe   01b1     clrf    0x31             	CLRF	_led_update_taskcounter_1_24
0006ff   01b2     clrf    0x32             	CLRF	(_led_update_taskcounter_1_24 + 1)
                                           ;	.line	40; "led.c"	secondcounter+=TMR_TICK_MS;
000700   3014     movlw   0x14             	MOVLW	0x14
000701   1283     bcf     0x03, 0x5        	BANKSEL	_led_update_secondcounter_1_24
000702   1703     bsf     0x03, 0x6        
000703   07b3     addwf   0x33, 0x1        	ADDWF	_led_update_secondcounter_1_24,F
000704   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
000705   0ab4     incf    0x34, 0x1        	INCF	(_led_update_secondcounter_1_24 + 1),F
                                           ;	.line	42; "led.c"	switch(led_get_state())
000706   278e     call    0x078e           	CALL	_led_get_state
000707   1283     bcf     0x03, 0x5        	BANKSEL	r0x1006
000708   1703     bsf     0x03, 0x6        
000709   00af     movwf   0x2f             	MOVWF	r0x1006
                                           ;;swapping arguments (AOP_TYPEs 1/2)
                                           ;;unsigned compare: left >= lit(0x3=3), size=1
00070a   3003     movlw   0x03             	MOVLW	0x03
00070b   022f     subwf   0x2f, 0x0        	SUBWF	r0x1006,W
00070c   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
00070d   2f8d     goto    0x078d           	GOTO	_00135_DS_
                                           ;;genSkipc:3247: created from rifx:027A5E04
00070e   3007     movlw   0x07             	MOVLW	HIGH(_00160_DS_)
00070f   1283     bcf     0x03, 0x5        	BANKSEL	PCLATH
000710   1303     bcf     0x03, 0x6        
000711   008a     movwf   0x0a             	MOVWF	PCLATH
000712   301c     movlw   0x1c             	MOVLW	_00160_DS_
000713   1283     bcf     0x03, 0x5        	BANKSEL	r0x1006
000714   1703     bsf     0x03, 0x6        
000715   072f     addwf   0x2f, 0x0        	ADDWF	r0x1006,W
000716   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
000717   2f1b     goto    0x071b           	GOTO	_00001_DS_
000718   1283     bcf     0x03, 0x5        	BANKSEL	PCLATH
000719   1303     bcf     0x03, 0x6        
00071a   0a8a     incf    0x0a, 0x1        	INCF	PCLATH,F
                                           _00001_DS_
00071b   0082     movwf   0x02             	MOVWF	PCL
                                           _00160_DS_
00071c   2f1f     goto    0x071f           	GOTO	_00119_DS_
00071d   2f3f     goto    0x073f           	GOTO	_00125_DS_
00071e   2f70     goto    0x0770           	GOTO	_00130_DS_
                                           _00119_DS_
                                           ;	.line	45; "led.c"	secondcounter=0;
00071f   1283     bcf     0x03, 0x5        	BANKSEL	_led_update_secondcounter_1_24
000720   1703     bsf     0x03, 0x6        
000721   01b3     clrf    0x33             	CLRF	_led_update_secondcounter_1_24
000722   01b4     clrf    0x34             	CLRF	(_led_update_secondcounter_1_24 + 1)
                                           ;	.line	46; "led.c"	if(heater_get_state()==heateron)
000723   158a     bsf     0x0a, 0x3        	PAGESEL	_heater_get_state
000724   120a     bcf     0x0a, 0x4        
000725   226b     call    0x026b           	CALL	_heater_get_state
000726   118a     bcf     0x0a, 0x3        	PAGESEL	$
000727   120a     bcf     0x0a, 0x4        
000728   1283     bcf     0x03, 0x5        	BANKSEL	r0x1006
000729   1703     bsf     0x03, 0x6        
00072a   00af     movwf   0x2f             	MOVWF	r0x1006
00072b   3a01     xorlw   0x01             	XORLW	0x01
00072c   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
00072d   2f31     goto    0x0731           	GOTO	_00123_DS_
                                           ;	.line	48; "led.c"	led_set_state(ledblink);
00072e   3001     movlw   0x01             	MOVLW	0x01
00072f   2792     call    0x0792           	CALL	_led_set_state
000730   2f8d     goto    0x078d           	GOTO	_00135_DS_
                                           _00123_DS_
                                           ;	.line	50; "led.c"	else if(cooler_get_state()==cooleron)
000731   158a     bsf     0x0a, 0x3        	PAGESEL	_cooler_get_state
000732   120a     bcf     0x0a, 0x4        
000733   21d3     call    0x01d3           	CALL	_cooler_get_state
000734   118a     bcf     0x0a, 0x3        	PAGESEL	$
000735   120a     bcf     0x0a, 0x4        
000736   1283     bcf     0x03, 0x5        	BANKSEL	r0x1006
000737   1703     bsf     0x03, 0x6        
000738   00af     movwf   0x2f             	MOVWF	r0x1006
000739   3a01     xorlw   0x01             	XORLW	0x01
00073a   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
00073b   2f8d     goto    0x078d           	GOTO	_00135_DS_
                                           ;	.line	52; "led.c"	led_set_state(ledon);
00073c   3002     movlw   0x02             	MOVLW	0x02
00073d   2792     call    0x0792           	CALL	_led_set_state
                                           ;	.line	55; "led.c"	break;
00073e   2f8d     goto    0x078d           	GOTO	_00135_DS_
                                           _00125_DS_
                                           ;	.line	59; "led.c"	if(secondcounter==blinkperiod)
00073f   1283     bcf     0x03, 0x5        	BANKSEL	_led_update_secondcounter_1_24
000740   1703     bsf     0x03, 0x6        
000741   0833     movf    0x33, 0x0        	MOVF	_led_update_secondcounter_1_24,W
000742   3ae8     xorlw   0xe8             	XORLW	0xe8
000743   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
000744   2f62     goto    0x0762           	GOTO	_00127_DS_
000745   0834     movf    0x34, 0x0        	MOVF	(_led_update_secondcounter_1_24 + 1),W
000746   3a03     xorlw   0x03             	XORLW	0x03
000747   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
000748   2f62     goto    0x0762           	GOTO	_00127_DS_
                                           ;	.line	62; "led.c"	blink^=1;
000749   3001     movlw   0x01             	MOVLW	0x01
00074a   1283     bcf     0x03, 0x5        	BANKSEL	_led_update_blink_1_24
00074b   1703     bsf     0x03, 0x6        
00074c   06b5     xorwf   0x35, 0x1        	XORWF	_led_update_blink_1_24,F
                                           ;	.line	63; "led.c"	GPIO_WritePortPin(GPIO_PORTB_DATA,GPIO_PIN_4,blink);
00074d   1283     bcf     0x03, 0x5        	BANKSEL	_PORTB
00074e   1303     bcf     0x03, 0x6        
00074f   0806     movf    0x06, 0x0        	MOVF	_PORTB,W
000750   1283     bcf     0x03, 0x5        	BANKSEL	r0x1006
000751   1703     bsf     0x03, 0x6        
000752   00af     movwf   0x2f             	MOVWF	r0x1006
000753   122f     bcf     0x2f, 0x4        	BCF	r0x1006,4
000754   1283     bcf     0x03, 0x5        	BANKSEL	_led_update_blink_1_24
000755   1703     bsf     0x03, 0x6        
000756   0e35     swapf   0x35, 0x0        	SWAPF	_led_update_blink_1_24,W
000757   39f0     andlw   0xf0             	ANDLW	0xf0
                                           ;;1	MOVWF	r0x1007
                                           ;;1	MOVWF	r0x1008
000758   1283     bcf     0x03, 0x5        	BANKSEL	r0x1006
000759   1703     bsf     0x03, 0x6        
00075a   042f     iorwf   0x2f, 0x0        	IORWF	r0x1006,W
00075b   1283     bcf     0x03, 0x5        	BANKSEL	_PORTB
00075c   1303     bcf     0x03, 0x6        
00075d   0086     movwf   0x06             	MOVWF	_PORTB
                                           ;	.line	64; "led.c"	secondcounter=0;
00075e   1283     bcf     0x03, 0x5        	BANKSEL	_led_update_secondcounter_1_24
00075f   1703     bsf     0x03, 0x6        
000760   01b3     clrf    0x33             	CLRF	_led_update_secondcounter_1_24
000761   01b4     clrf    0x34             	CLRF	(_led_update_secondcounter_1_24 + 1)
                                           _00127_DS_
                                           ;	.line	66; "led.c"	if(cooler_get_state()==cooleron)
000762   158a     bsf     0x0a, 0x3        	PAGESEL	_cooler_get_state
000763   120a     bcf     0x0a, 0x4        
000764   21d3     call    0x01d3           	CALL	_cooler_get_state
000765   118a     bcf     0x0a, 0x3        	PAGESEL	$
000766   120a     bcf     0x0a, 0x4        
000767   1283     bcf     0x03, 0x5        	BANKSEL	r0x1006
000768   1703     bsf     0x03, 0x6        
000769   00af     movwf   0x2f             	MOVWF	r0x1006
00076a   3a01     xorlw   0x01             	XORLW	0x01
00076b   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
00076c   2f8d     goto    0x078d           	GOTO	_00135_DS_
                                           ;	.line	68; "led.c"	led_set_state(ledon);
00076d   3002     movlw   0x02             	MOVLW	0x02
00076e   2792     call    0x0792           	CALL	_led_set_state
                                           ;	.line	70; "led.c"	break;
00076f   2f8d     goto    0x078d           	GOTO	_00135_DS_
                                           _00130_DS_
                                           ;	.line	74; "led.c"	secondcounter=0;
000770   1283     bcf     0x03, 0x5        	BANKSEL	_led_update_secondcounter_1_24
000771   1703     bsf     0x03, 0x6        
000772   01b3     clrf    0x33             	CLRF	_led_update_secondcounter_1_24
000773   01b4     clrf    0x34             	CLRF	(_led_update_secondcounter_1_24 + 1)
                                           ;	.line	75; "led.c"	GPIO_WritePortPin(GPIO_PORTB_DATA,GPIO_PIN_4,1);
000774   1283     bcf     0x03, 0x5        	BANKSEL	_PORTB
000775   1303     bcf     0x03, 0x6        
000776   0806     movf    0x06, 0x0        	MOVF	_PORTB,W
000777   1283     bcf     0x03, 0x5        	BANKSEL	r0x1006
000778   1703     bsf     0x03, 0x6        
000779   00af     movwf   0x2f             	MOVWF	r0x1006
00077a   122f     bcf     0x2f, 0x4        	BCF	r0x1006,4
00077b   3010     movlw   0x10             	MOVLW	0x10
00077c   042f     iorwf   0x2f, 0x0        	IORWF	r0x1006,W
00077d   1283     bcf     0x03, 0x5        	BANKSEL	_PORTB
00077e   1303     bcf     0x03, 0x6        
00077f   0086     movwf   0x06             	MOVWF	_PORTB
                                           ;	.line	76; "led.c"	if(heater_get_state()==heateron)
000780   158a     bsf     0x0a, 0x3        	PAGESEL	_heater_get_state
000781   120a     bcf     0x0a, 0x4        
000782   226b     call    0x026b           	CALL	_heater_get_state
000783   118a     bcf     0x0a, 0x3        	PAGESEL	$
000784   120a     bcf     0x0a, 0x4        
000785   1283     bcf     0x03, 0x5        	BANKSEL	r0x1006
000786   1703     bsf     0x03, 0x6        
000787   00af     movwf   0x2f             	MOVWF	r0x1006
000788   3a01     xorlw   0x01             	XORLW	0x01
000789   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
00078a   2f8d     goto    0x078d           	GOTO	_00135_DS_
                                           ;	.line	78; "led.c"	led_set_state(ledblink);
00078b   3001     movlw   0x01             	MOVLW	0x01
00078c   2792     call    0x0792           	CALL	_led_set_state
                                           _00135_DS_
                                           ;	.line	86; "led.c"	}
00078d   0008     return                   	RETURN	
                                           ; exit point of _led_update

                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _led_get_state	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;; Starting pCode block
                                           _led_get_state	;Function start
                                           ; 2 exit points
                                           ;	.line	25; "led.c"	return ledstate;
00078e   1283     bcf     0x03, 0x5        	BANKSEL	_ledstate
00078f   1703     bsf     0x03, 0x6        
000790   0830     movf    0x30, 0x0        	MOVF	_ledstate,W
000791   0008     return                   	RETURN	
                                           ; exit point of _led_get_state

                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _led_set_state	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;; Starting pCode block
                                           _led_set_state	;Function start
                                           ; 2 exit points
                                           ;	.line	17; "led.c"	void led_set_state(led state)
000792   1283     bcf     0x03, 0x5        	BANKSEL	_ledstate
000793   1703     bsf     0x03, 0x6        
000794   00b0     movwf   0x30             	MOVWF	_ledstate
                                           ;	.line	19; "led.c"	ledstate=state;
000795   0008     return                   	RETURN	
                                           ; exit point of _led_set_state

                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _led_init	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;functions called:
                                           ;   _led_set_state
                                           ;   _led_set_state
                                           ;1 compiler assigned register :
                                           ;   r0x1009
                                           ;; Starting pCode block
                                           _led_init	;Function start
                                           ; 2 exit points
                                           ;	.line	11; "led.c"	void led_init(led state)
000796   1283     bcf     0x03, 0x5        	BANKSEL	r0x1009
000797   1703     bsf     0x03, 0x6        
000798   00ae     movwf   0x2e             	MOVWF	r0x1009
                                           ;	.line	13; "led.c"	led_set_state(state);
000799   118a     bcf     0x0a, 0x3        	PAGESEL	_led_set_state
00079a   120a     bcf     0x0a, 0x4        
00079b   2792     call    0x0792           	CALL	_led_set_state
00079c   118a     bcf     0x0a, 0x3        	PAGESEL	$
00079d   120a     bcf     0x0a, 0x4        
                                           ;	.line	14; "led.c"	GPIO_InitPortPin(GPIO_PORTB_CONTROL,GPIO_PIN_4,GPIO_OUT);
00079e   1683     bsf     0x03, 0x5        	BANKSEL	_TRISB
00079f   1303     bcf     0x03, 0x6        
0007a0   0806     movf    0x06, 0x0        	MOVF	_TRISB,W
0007a1   1283     bcf     0x03, 0x5        	BANKSEL	r0x1009
0007a2   1703     bsf     0x03, 0x6        
0007a3   00ae     movwf   0x2e             	MOVWF	r0x1009
0007a4   30ef     movlw   0xef             	MOVLW	0xef
0007a5   052e     andwf   0x2e, 0x0        	ANDWF	r0x1009,W
0007a6   1683     bsf     0x03, 0x5        	BANKSEL	_TRISB
0007a7   1303     bcf     0x03, 0x6        
0007a8   0086     movwf   0x06             	MOVWF	_TRISB
0007a9   0008     return                   	RETURN	
                                           ; exit point of _led_init


                                           ;	code size estimation:
                                           ;	  108+   40 =   148 instructions (  376 byte)

                                           	end
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.5.0 #9253 (Jun 20 2015) (MINGW32)
                                           ; This file was generated Sat Jul 04 19:00:39 2020
                                           ;--------------------------------------------------------
                                           ; PIC port for the 14-bit core
                                           ;--------------------------------------------------------
                                           ;	.file	"lm35.c"
                                           	list	p=16f877a
                                           	radix dec
                                           	include "p16f877a.inc"
                                                   LIST

                                           ;==========================================================================
                                           ; Build date : Oct 21 2015
                                           ;  MPASM PIC16F877A processor include
                                           ; 
                                           ;  (c) Copyright 1999-2015 Microchip Technology, All rights reserved
                                           ;==========================================================================

                                                   NOLIST
                                           ;--------------------------------------------------------
                                           ; external declarations
                                           ;--------------------------------------------------------
                                           	extern	_adc_init
                                           	extern	_adc_convert
                                           	extern	_TMR_Init
                                           	extern	_TMR_Start
                                           	extern	_TMR_CheckOverFlow
                                           	extern	_TMR_Stop
                                           	extern	_TMR_Update
                                           	extern	_SSD_Init
                                           	extern	_SSD_Update
                                           	extern	_SSD_SetValue
                                           	extern	_SSD_GetValue
                                           	extern	_SSD_GetState
                                           	extern	_SSD_SetState
                                           	extern	_SSD_SetDotState
                                           	extern	__divuint
                                           	extern	__moduint
                                           	extern	_STATUSbits
                                           	extern	_PORTAbits
                                           	extern	_PORTBbits
                                           	extern	_PORTCbits
                                           	extern	_PORTDbits
                                           	extern	_PORTEbits
                                           	extern	_INTCONbits
                                           	extern	_PIR1bits
                                           	extern	_PIR2bits
                                           	extern	_T1CONbits
                                           	extern	_T2CONbits
                                           	extern	_SSPCONbits
                                           	extern	_CCP1CONbits
                                           	extern	_RCSTAbits
                                           	extern	_CCP2CONbits
                                           	extern	_ADCON0bits
                                           	extern	_OPTION_REGbits
                                           	extern	_TRISAbits
                                           	extern	_TRISBbits
                                           	extern	_TRISCbits
                                           	extern	_TRISDbits
                                           	extern	_TRISEbits
                                           	extern	_PIE1bits
                                           	extern	_PIE2bits
                                           	extern	_PCONbits
                                           	extern	_SSPCON2bits
                                           	extern	_SSPSTATbits
                                           	extern	_TXSTAbits
                                           	extern	_CMCONbits
                                           	extern	_CVRCONbits
                                           	extern	_ADCON1bits
                                           	extern	_EECON1bits
                                           	extern	_INDF
                                           	extern	_TMR0
                                           	extern	_PCL
                                           	extern	_STATUS
                                           	extern	_FSR
                                           	extern	_PORTA
                                           	extern	_PORTB
                                           	extern	_PORTC
                                           	extern	_PORTD
                                           	extern	_PORTE
                                           	extern	_PCLATH
                                           	extern	_INTCON
                                           	extern	_PIR1
                                           	extern	_PIR2
                                           	extern	_TMR1
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_T1CON
                                           	extern	_TMR2
                                           	extern	_T2CON
                                           	extern	_SSPBUF
                                           	extern	_SSPCON
                                           	extern	_CCPR1
                                           	extern	_CCPR1L
                                           	extern	_CCPR1H
                                           	extern	_CCP1CON
                                           	extern	_RCSTA
                                           	extern	_TXREG
                                           	extern	_RCREG
                                           	extern	_CCPR2
                                           	extern	_CCPR2L
                                           	extern	_CCPR2H
                                           	extern	_CCP2CON
                                           	extern	_ADRESH
                                           	extern	_ADCON0
                                           	extern	_OPTION_REG
                                           	extern	_TRISA
                                           	extern	_TRISB
                                           	extern	_TRISC
                                           	extern	_TRISD
                                           	extern	_TRISE
                                           	extern	_PIE1
                                           	extern	_PIE2
                                           	extern	_PCON
                                           	extern	_SSPCON2
                                           	extern	_PR2
                                           	extern	_SSPADD
                                           	extern	_SSPSTAT
                                           	extern	_TXSTA
                                           	extern	_SPBRG
                                           	extern	_CMCON
                                           	extern	_CVRCON
                                           	extern	_ADRESL
                                           	extern	_ADCON1
                                           	extern	_EEDATA
                                           	extern	_EEADR
                                           	extern	_EEDATH
                                           	extern	_EEADRH
                                           	extern	_EECON1
                                           	extern	_EECON2
                                           	extern	__mulchar

                                           	extern PSAVE
                                           	extern SSAVE
                                           	extern WSAVE
                                           	extern STK12
                                           	extern STK11
                                           	extern STK10
                                           	extern STK09
                                           	extern STK08
                                           	extern STK07
                                           	extern STK06
                                           	extern STK05
                                           	extern STK04
                                           	extern STK03
                                           	extern STK02
                                           	extern STK01
                                           	extern STK00
                                           ;--------------------------------------------------------
                                           ; global declarations
                                           ;--------------------------------------------------------
                                           	global	_lm35_update
                                           	global	_lm35_get_currentTemp
                                           	global	_lm35_set_currentTemp
                                           	global	_lm35_init

                                           ;--------------------------------------------------------
                                           ; global definitions
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; absolute symbol definitions
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; compiler-defined variables
                                           ;--------------------------------------------------------
                                           UDL_lm35_0	udata
                                           r0x102B	res	1
                                           r0x102C	res	1
                                           r0x101A	res	1
                                           r0x1019	res	1
                                           r0x101B	res	1
                                           r0x101C	res	1
                                           r0x101D	res	1
                                           r0x101E	res	1
                                           r0x1027	res	1
                                           r0x1028	res	1
                                           r0x1029	res	1
                                           r0x102A	res	1
                                           r0x101F	res	1
                                           r0x1020	res	1
                                           r0x1021	res	1
                                           r0x1022	res	1
                                           r0x1024	res	1
                                           r0x1023	res	1
                                           r0x1026	res	1
                                           r0x1025	res	1
                                           _temprature	res	20
                                           _currenttemp	res	2
                                           _lm35_update_taskcounter_1_33	res	2
                                           _lm35_update_samplescounter_1_33	res	1
                                           ;--------------------------------------------------------
                                           ; initialized data
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; overlayable items in internal ram 
                                           ;--------------------------------------------------------
                                           ;	udata_ovr
                                           ;--------------------------------------------------------
                                           ; code
                                           ;--------------------------------------------------------
                                           code_lm35	code
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _lm35_update	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;functions called:
                                           ;   _adc_convert
                                           ;   _lm35_set_temp
                                           ;   _lm35_set_currentTemp
                                           ;   _lm35_get_currentTemp
                                           ;   __moduint
                                           ;   _SSD_SetValue
                                           ;   _lm35_get_currentTemp
                                           ;   __divuint
                                           ;   _SSD_SetValue
                                           ;   _adc_convert
                                           ;   _lm35_set_temp
                                           ;   _lm35_set_currentTemp
                                           ;   _lm35_get_currentTemp
                                           ;   __moduint
                                           ;   _SSD_SetValue
                                           ;   _lm35_get_currentTemp
                                           ;   __divuint
                                           ;   _SSD_SetValue
                                           ;7 compiler assigned registers:
                                           ;   r0x1023
                                           ;   STK00
                                           ;   r0x1024
                                           ;   r0x1025
                                           ;   r0x1026
                                           ;   STK01
                                           ;   STK02
                                           ;; Starting pCode block
                                           _lm35_update	;Function start
                                           ; 2 exit points
                                           ;	.line	58; "lm35.c"	taskcounter+=TMR_TICK_MS;
000800   3014     movlw   0x14             	MOVLW	0x14
000801   1283     bcf     0x03, 0x5        	BANKSEL	_lm35_update_taskcounter_1_33
000802   1303     bcf     0x03, 0x6        
000803   07ca     addwf   0x4a, 0x1        	ADDWF	_lm35_update_taskcounter_1_33,F
000804   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
000805   0acb     incf    0x4b, 0x1        	INCF	(_lm35_update_taskcounter_1_33 + 1),F
                                           ;	.line	60; "lm35.c"	if(taskcounter!=taskperiod)
000806   084a     movf    0x4a, 0x0        	MOVF	_lm35_update_taskcounter_1_33,W
000807   3a64     xorlw   0x64             	XORLW	0x64
000808   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
000809   280d     goto    0x000d           	GOTO	_00155_DS_
00080a   084b     movf    0x4b, 0x0        	MOVF	(_lm35_update_taskcounter_1_33 + 1),W
                                           ;	.line	62; "lm35.c"	return ;
00080b   3a00     xorlw   0x00             	XORLW	0x00
                                           ;	.line	64; "lm35.c"	taskcounter=0;
00080c   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
                                           _00155_DS_
00080d   2873     goto    0x0073           	GOTO	_00147_DS_
00080e   1283     bcf     0x03, 0x5        	BANKSEL	_lm35_update_taskcounter_1_33
00080f   1303     bcf     0x03, 0x6        
000810   01ca     clrf    0x4a             	CLRF	_lm35_update_taskcounter_1_33
000811   01cb     clrf    0x4b             	CLRF	(_lm35_update_taskcounter_1_33 + 1)
                                           ;	.line	66; "lm35.c"	temp=adc_convert(2)/2;
000812   3002     movlw   0x02             	MOVLW	0x02
000813   158a     bsf     0x0a, 0x3        	PAGESEL	_adc_convert
000814   120a     bcf     0x0a, 0x4        
000815   258d     call    0x058d           	CALL	_adc_convert
000816   158a     bsf     0x0a, 0x3        	PAGESEL	$
000817   120a     bcf     0x0a, 0x4        
000818   1283     bcf     0x03, 0x5        	BANKSEL	r0x1023
000819   1303     bcf     0x03, 0x6        
00081a   00b1     movwf   0x31             	MOVWF	r0x1023
00081b   087f     movf    0x7f, 0x0        	MOVF	STK00,W
00081c   00b0     movwf   0x30             	MOVWF	r0x1024
                                           ;;shiftRight_Left2ResultLit:5273: shCount=1, size=2, sign=0, same=0, offr=0
00081d   1003     bcf     0x03, 0x0        	BCF	STATUS,0
00081e   0c31     rrf     0x31, 0x0        	RRF	r0x1023,W
00081f   00b3     movwf   0x33             	MOVWF	r0x1025
000820   0c30     rrf     0x30, 0x0        	RRF	r0x1024,W
000821   00b2     movwf   0x32             	MOVWF	r0x1026
                                           ;	.line	67; "lm35.c"	lm35_set_temp(temp,samplescounter);
000822   1283     bcf     0x03, 0x5        	BANKSEL	_lm35_update_samplescounter_1_33
000823   1303     bcf     0x03, 0x6        
000824   084c     movf    0x4c, 0x0        	MOVF	_lm35_update_samplescounter_1_33,W
000825   00fe     movwf   0x7e             	MOVWF	STK01
000826   1283     bcf     0x03, 0x5        	BANKSEL	r0x1026
000827   1303     bcf     0x03, 0x6        
000828   0832     movf    0x32, 0x0        	MOVF	r0x1026,W
000829   00ff     movwf   0x7f             	MOVWF	STK00
00082a   0833     movf    0x33, 0x0        	MOVF	r0x1025,W
00082b   2102     call    0x0102           	CALL	_lm35_set_temp
                                           ;	.line	68; "lm35.c"	samplescounter++;
00082c   1283     bcf     0x03, 0x5        	BANKSEL	_lm35_update_samplescounter_1_33
00082d   1303     bcf     0x03, 0x6        
00082e   0acc     incf    0x4c, 0x1        	INCF	_lm35_update_samplescounter_1_33,F
                                           ;	.line	70; "lm35.c"	if(samplescounter==10)
00082f   084c     movf    0x4c, 0x0        	MOVF	_lm35_update_samplescounter_1_33,W
000830   3a0a     xorlw   0x0a             	XORLW	0x0a
000831   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
000832   2873     goto    0x0073           	GOTO	_00147_DS_
                                           ;	.line	72; "lm35.c"	samplescounter=0;
000833   01cc     clrf    0x4c             	CLRF	_lm35_update_samplescounter_1_33
                                           ;	.line	73; "lm35.c"	lm35_set_currentTemp();
000834   207a     call    0x007a           	CALL	_lm35_set_currentTemp
                                           ;	.line	74; "lm35.c"	SSD_SetValue(SSD_UNITS,lm35_get_currentTemp()%10);
000835   2074     call    0x0074           	CALL	_lm35_get_currentTemp
000836   1283     bcf     0x03, 0x5        	BANKSEL	r0x1023
000837   1303     bcf     0x03, 0x6        
000838   00b1     movwf   0x31             	MOVWF	r0x1023
000839   087f     movf    0x7f, 0x0        	MOVF	STK00,W
00083a   00b0     movwf   0x30             	MOVWF	r0x1024
00083b   300a     movlw   0x0a             	MOVLW	0x0a
00083c   00fd     movwf   0x7d             	MOVWF	STK02
00083d   3000     movlw   0x00             	MOVLW	0x00
00083e   00fe     movwf   0x7e             	MOVWF	STK01
00083f   0830     movf    0x30, 0x0        	MOVF	r0x1024,W
000840   00ff     movwf   0x7f             	MOVWF	STK00
000841   0831     movf    0x31, 0x0        	MOVF	r0x1023,W
000842   158a     bsf     0x0a, 0x3        	PAGESEL	__moduint
000843   120a     bcf     0x0a, 0x4        
000844   2516     call    0x0516           	CALL	__moduint
000845   158a     bsf     0x0a, 0x3        	PAGESEL	$
000846   120a     bcf     0x0a, 0x4        
000847   1283     bcf     0x03, 0x5        	BANKSEL	r0x1023
000848   1303     bcf     0x03, 0x6        
000849   00b1     movwf   0x31             	MOVWF	r0x1023
00084a   087f     movf    0x7f, 0x0        	MOVF	STK00,W
00084b   00b0     movwf   0x30             	MOVWF	r0x1024
00084c   00b2     movwf   0x32             	MOVWF	r0x1026
00084d   00ff     movwf   0x7f             	MOVWF	STK00
00084e   3000     movlw   0x00             	MOVLW	0x00
00084f   118a     bcf     0x0a, 0x3        	PAGESEL	_SSD_SetValue
000850   120a     bcf     0x0a, 0x4        
000851   2358     call    0x0358           	CALL	_SSD_SetValue
000852   158a     bsf     0x0a, 0x3        	PAGESEL	$
000853   120a     bcf     0x0a, 0x4        
                                           ;	.line	75; "lm35.c"	SSD_SetValue(SSD_TENS,lm35_get_currentTemp()/10);
000854   2074     call    0x0074           	CALL	_lm35_get_currentTemp
000855   1283     bcf     0x03, 0x5        	BANKSEL	r0x1023
000856   1303     bcf     0x03, 0x6        
000857   00b1     movwf   0x31             	MOVWF	r0x1023
000858   087f     movf    0x7f, 0x0        	MOVF	STK00,W
000859   00b0     movwf   0x30             	MOVWF	r0x1024
00085a   300a     movlw   0x0a             	MOVLW	0x0a
00085b   00fd     movwf   0x7d             	MOVWF	STK02
00085c   3000     movlw   0x00             	MOVLW	0x00
00085d   00fe     movwf   0x7e             	MOVWF	STK01
00085e   0830     movf    0x30, 0x0        	MOVF	r0x1024,W
00085f   00ff     movwf   0x7f             	MOVWF	STK00
000860   0831     movf    0x31, 0x0        	MOVF	r0x1023,W
000861   118a     bcf     0x0a, 0x3        	PAGESEL	__divuint
000862   120a     bcf     0x0a, 0x4        
000863   27aa     call    0x07aa           	CALL	__divuint
000864   158a     bsf     0x0a, 0x3        	PAGESEL	$
000865   120a     bcf     0x0a, 0x4        
000866   1283     bcf     0x03, 0x5        	BANKSEL	r0x1023
000867   1303     bcf     0x03, 0x6        
000868   00b1     movwf   0x31             	MOVWF	r0x1023
000869   087f     movf    0x7f, 0x0        	MOVF	STK00,W
00086a   00b0     movwf   0x30             	MOVWF	r0x1024
00086b   00b2     movwf   0x32             	MOVWF	r0x1026
00086c   00ff     movwf   0x7f             	MOVWF	STK00
00086d   3001     movlw   0x01             	MOVLW	0x01
00086e   118a     bcf     0x0a, 0x3        	PAGESEL	_SSD_SetValue
00086f   120a     bcf     0x0a, 0x4        
000870   2358     call    0x0358           	CALL	_SSD_SetValue
000871   158a     bsf     0x0a, 0x3        	PAGESEL	$
000872   120a     bcf     0x0a, 0x4        
                                           _00147_DS_
000873   0008     return                   	RETURN	
                                           ; exit point of _lm35_update

                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _lm35_get_currentTemp	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;1 compiler assigned register :
                                           ;   STK00
                                           ;; Starting pCode block
                                           _lm35_get_currentTemp	;Function start
                                           ; 2 exit points
                                           ;	.line	48; "lm35.c"	return currenttemp;
000874   1283     bcf     0x03, 0x5        	BANKSEL	_currenttemp
000875   1303     bcf     0x03, 0x6        
000876   0848     movf    0x48, 0x0        	MOVF	_currenttemp,W
000877   00ff     movwf   0x7f             	MOVWF	STK00
000878   0849     movf    0x49, 0x0        	MOVF	(_currenttemp + 1),W
000879   0008     return                   	RETURN	
                                           ; exit point of _lm35_get_currentTemp

                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _lm35_set_currentTemp	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;functions called:
                                           ;   __divuint
                                           ;   __divuint
                                           ;13 compiler assigned registers:
                                           ;   r0x1019
                                           ;   r0x101A
                                           ;   r0x101B
                                           ;   r0x101C
                                           ;   r0x101D
                                           ;   r0x101E
                                           ;   r0x101F
                                           ;   r0x1020
                                           ;   r0x1021
                                           ;   r0x1022
                                           ;   STK02
                                           ;   STK01
                                           ;   STK00
                                           ;; Starting pCode block
                                           _lm35_set_currentTemp	;Function start
                                           ; 2 exit points
                                           ;	.line	36; "lm35.c"	tWord temp=0;
00087a   1283     bcf     0x03, 0x5        	BANKSEL	r0x1019
00087b   1303     bcf     0x03, 0x6        
00087c   01a3     clrf    0x23             	CLRF	r0x1019
00087d   01a2     clrf    0x22             	CLRF	r0x101A
                                           ;	.line	38; "lm35.c"	for (i;i<samples;i++)
00087e   01a4     clrf    0x24             	CLRF	r0x101B
00087f   01a5     clrf    0x25             	CLRF	r0x101C
000880   01a6     clrf    0x26             	CLRF	r0x101D
000881   01a7     clrf    0x27             	CLRF	r0x101E
                                           ;;signed compare: left < lit(0xA=10), size=2, mask=ffff
                                           _00123_DS_
000882   1283     bcf     0x03, 0x5        	BANKSEL	r0x101C
000883   1303     bcf     0x03, 0x6        
000884   0825     movf    0x25, 0x0        	MOVF	r0x101C,W
000885   3e80     addlw   0x80             	ADDLW	0x80
000886   3e80     addlw   0x80             	ADDLW	0x80
000887   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
000888   288b     goto    0x008b           	GOTO	_00134_DS_
000889   300a     movlw   0x0a             	MOVLW	0x0a
00088a   0224     subwf   0x24, 0x0        	SUBWF	r0x101B,W
                                           _00134_DS_
00088b   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
00088c   28bc     goto    0x00bc           	GOTO	_00121_DS_
                                           ;;genSkipc:3247: created from rifx:027A5E04
                                           ;	.line	40; "lm35.c"	temp+=temprature[i];
00088d   1283     bcf     0x03, 0x5        	BANKSEL	r0x101D
00088e   1303     bcf     0x03, 0x6        
00088f   0826     movf    0x26, 0x0        	MOVF	r0x101D,W
000890   3e34     addlw   0x34             	ADDLW	(_temprature + 0)
000891   00ac     movwf   0x2c             	MOVWF	r0x101F
000892   3000     movlw   0x00             	MOVLW	high (_temprature + 0)
000893   00ad     movwf   0x2d             	MOVWF	r0x1020
000894   0827     movf    0x27, 0x0        	MOVF	r0x101E,W
000895   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
000896   0f27     incfsz  0x27, 0x0        	INCFSZ	r0x101E,W
000897   07ad     addwf   0x2d, 0x1        	ADDWF	r0x1020,F
000898   082c     movf    0x2c, 0x0        	MOVF	r0x101F,W
000899   1283     bcf     0x03, 0x5        	BANKSEL	FSR
00089a   1303     bcf     0x03, 0x6        
00089b   0084     movwf   0x04             	MOVWF	FSR
00089c   1383     bcf     0x03, 0x7        	BCF	STATUS,7
00089d   1283     bcf     0x03, 0x5        	BANKSEL	r0x1020
00089e   1303     bcf     0x03, 0x6        
00089f   182d     btfsc   0x2d, 0x0        	BTFSC	r0x1020,0
0008a0   1783     bsf     0x03, 0x7        	BSF	STATUS,7
0008a1   1283     bcf     0x03, 0x5        	BANKSEL	INDF
0008a2   1303     bcf     0x03, 0x6        
0008a3   0800     movf    0x00, 0x0        	MOVF	INDF,W
0008a4   1283     bcf     0x03, 0x5        	BANKSEL	r0x1021
0008a5   1303     bcf     0x03, 0x6        
0008a6   00ae     movwf   0x2e             	MOVWF	r0x1021
0008a7   1283     bcf     0x03, 0x5        	BANKSEL	FSR
0008a8   1303     bcf     0x03, 0x6        
0008a9   0a84     incf    0x04, 0x1        	INCF	FSR,F
0008aa   0800     movf    0x00, 0x0        	MOVF	INDF,W
0008ab   1283     bcf     0x03, 0x5        	BANKSEL	r0x1022
0008ac   1303     bcf     0x03, 0x6        
0008ad   00af     movwf   0x2f             	MOVWF	r0x1022
0008ae   082e     movf    0x2e, 0x0        	MOVF	r0x1021,W
0008af   07a3     addwf   0x23, 0x1        	ADDWF	r0x1019,F
0008b0   082f     movf    0x2f, 0x0        	MOVF	r0x1022,W
0008b1   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
0008b2   0f2f     incfsz  0x2f, 0x0        	INCFSZ	r0x1022,W
0008b3   07a2     addwf   0x22, 0x1        	ADDWF	r0x101A,F
                                           ;	.line	38; "lm35.c"	for (i;i<samples;i++)
0008b4   3002     movlw   0x02             	MOVLW	0x02
0008b5   07a6     addwf   0x26, 0x1        	ADDWF	r0x101D,F
0008b6   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
0008b7   0aa7     incf    0x27, 0x1        	INCF	r0x101E,F
0008b8   0aa4     incf    0x24, 0x1        	INCF	r0x101B,F
0008b9   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
0008ba   0aa5     incf    0x25, 0x1        	INCF	r0x101C,F
0008bb   2882     goto    0x0082           	GOTO	_00123_DS_
                                           _00121_DS_
                                           ;	.line	42; "lm35.c"	temp/=10;
0008bc   300a     movlw   0x0a             	MOVLW	0x0a
0008bd   00fd     movwf   0x7d             	MOVWF	STK02
0008be   3000     movlw   0x00             	MOVLW	0x00
0008bf   00fe     movwf   0x7e             	MOVWF	STK01
0008c0   1283     bcf     0x03, 0x5        	BANKSEL	r0x1019
0008c1   1303     bcf     0x03, 0x6        
0008c2   0823     movf    0x23, 0x0        	MOVF	r0x1019,W
0008c3   00ff     movwf   0x7f             	MOVWF	STK00
0008c4   0822     movf    0x22, 0x0        	MOVF	r0x101A,W
0008c5   118a     bcf     0x0a, 0x3        	PAGESEL	__divuint
0008c6   120a     bcf     0x0a, 0x4        
0008c7   27aa     call    0x07aa           	CALL	__divuint
0008c8   158a     bsf     0x0a, 0x3        	PAGESEL	$
0008c9   120a     bcf     0x0a, 0x4        
0008ca   1283     bcf     0x03, 0x5        	BANKSEL	_currenttemp
0008cb   1303     bcf     0x03, 0x6        
0008cc   00c9     movwf   0x49             	MOVWF	(_currenttemp + 1)
0008cd   087f     movf    0x7f, 0x0        	MOVF	STK00,W
0008ce   00c8     movwf   0x48             	MOVWF	_currenttemp
                                           ;	.line	43; "lm35.c"	currenttemp=temp;
0008cf   0008     return                   	RETURN	
                                           ; exit point of _lm35_set_currentTemp

                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _lm35_get_temp	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;functions called:
                                           ;   __mulchar
                                           ;   __mulchar
                                           ;5 compiler assigned registers:
                                           ;   r0x1027
                                           ;   STK00
                                           ;   r0x1028
                                           ;   r0x1029
                                           ;   r0x102A
                                           ;; Starting pCode block
                                           _lm35_get_temp	;Function start
                                           ; 2 exit points
                                           ;	.line	28; "lm35.c"	static tWord lm35_get_temp (tByte index)
0008d0   1283     bcf     0x03, 0x5        	BANKSEL	r0x1027
0008d1   1303     bcf     0x03, 0x6        
0008d2   00a8     movwf   0x28             	MOVWF	r0x1027
                                           ;	.line	30; "lm35.c"	return temprature[index];
0008d3   3002     movlw   0x02             	MOVLW	0x02
0008d4   00ff     movwf   0x7f             	MOVWF	STK00
0008d5   0828     movf    0x28, 0x0        	MOVF	r0x1027,W
0008d6   158a     bsf     0x0a, 0x3        	PAGESEL	__mulchar
0008d7   120a     bcf     0x0a, 0x4        
0008d8   262e     call    0x062e           	CALL	__mulchar
0008d9   158a     bsf     0x0a, 0x3        	PAGESEL	$
0008da   120a     bcf     0x0a, 0x4        
0008db   1283     bcf     0x03, 0x5        	BANKSEL	r0x1028
0008dc   1303     bcf     0x03, 0x6        
0008dd   00a9     movwf   0x29             	MOVWF	r0x1028
0008de   01aa     clrf    0x2a             	CLRF	r0x1029
0008df   0829     movf    0x29, 0x0        	MOVF	r0x1028,W
0008e0   3e34     addlw   0x34             	ADDLW	(_temprature + 0)
0008e1   00a8     movwf   0x28             	MOVWF	r0x1027
0008e2   3000     movlw   0x00             	MOVLW	high (_temprature + 0)
0008e3   00ab     movwf   0x2b             	MOVWF	r0x102A
0008e4   3000     movlw   0x00             	MOVLW	0x00
0008e5   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
0008e6   0f2a     incfsz  0x2a, 0x0        	INCFSZ	r0x1029,W
0008e7   07ab     addwf   0x2b, 0x1        	ADDWF	r0x102A,F
0008e8   0828     movf    0x28, 0x0        	MOVF	r0x1027,W
0008e9   1283     bcf     0x03, 0x5        	BANKSEL	FSR
0008ea   1303     bcf     0x03, 0x6        
0008eb   0084     movwf   0x04             	MOVWF	FSR
0008ec   1383     bcf     0x03, 0x7        	BCF	STATUS,7
0008ed   1283     bcf     0x03, 0x5        	BANKSEL	r0x102A
0008ee   1303     bcf     0x03, 0x6        
0008ef   182b     btfsc   0x2b, 0x0        	BTFSC	r0x102A,0
0008f0   1783     bsf     0x03, 0x7        	BSF	STATUS,7
0008f1   1283     bcf     0x03, 0x5        	BANKSEL	INDF
0008f2   1303     bcf     0x03, 0x6        
0008f3   0800     movf    0x00, 0x0        	MOVF	INDF,W
0008f4   1283     bcf     0x03, 0x5        	BANKSEL	r0x1028
0008f5   1303     bcf     0x03, 0x6        
0008f6   00a9     movwf   0x29             	MOVWF	r0x1028
0008f7   1283     bcf     0x03, 0x5        	BANKSEL	FSR
0008f8   1303     bcf     0x03, 0x6        
0008f9   0a84     incf    0x04, 0x1        	INCF	FSR,F
0008fa   0800     movf    0x00, 0x0        	MOVF	INDF,W
0008fb   1283     bcf     0x03, 0x5        	BANKSEL	r0x1029
0008fc   1303     bcf     0x03, 0x6        
0008fd   00aa     movwf   0x2a             	MOVWF	r0x1029
0008fe   0829     movf    0x29, 0x0        	MOVF	r0x1028,W
0008ff   00ff     movwf   0x7f             	MOVWF	STK00
000900   082a     movf    0x2a, 0x0        	MOVF	r0x1029,W
000901   0008     return                   	RETURN	
                                           ; exit point of _lm35_get_temp

                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _lm35_set_temp	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;functions called:
                                           ;   __mulchar
                                           ;   __mulchar
                                           ;8 compiler assigned registers:
                                           ;   r0x1019
                                           ;   STK00
                                           ;   r0x101A
                                           ;   STK01
                                           ;   r0x101B
                                           ;   r0x101C
                                           ;   r0x101D
                                           ;   r0x101E
                                           ;; Starting pCode block
                                           _lm35_set_temp	;Function start
                                           ; 2 exit points
                                           ;	.line	23; "lm35.c"	static void lm35_set_temp(tWord temp,tByte index)
000902   1283     bcf     0x03, 0x5        	BANKSEL	r0x1019
000903   1303     bcf     0x03, 0x6        
000904   00a3     movwf   0x23             	MOVWF	r0x1019
000905   087f     movf    0x7f, 0x0        	MOVF	STK00,W
000906   00a2     movwf   0x22             	MOVWF	r0x101A
000907   087e     movf    0x7e, 0x0        	MOVF	STK01,W
000908   00a4     movwf   0x24             	MOVWF	r0x101B
                                           ;	.line	25; "lm35.c"	temprature[index]=temp;
000909   3002     movlw   0x02             	MOVLW	0x02
00090a   00ff     movwf   0x7f             	MOVWF	STK00
00090b   0824     movf    0x24, 0x0        	MOVF	r0x101B,W
00090c   158a     bsf     0x0a, 0x3        	PAGESEL	__mulchar
00090d   120a     bcf     0x0a, 0x4        
00090e   262e     call    0x062e           	CALL	__mulchar
00090f   158a     bsf     0x0a, 0x3        	PAGESEL	$
000910   120a     bcf     0x0a, 0x4        
000911   1283     bcf     0x03, 0x5        	BANKSEL	r0x101C
000912   1303     bcf     0x03, 0x6        
000913   00a5     movwf   0x25             	MOVWF	r0x101C
000914   01a6     clrf    0x26             	CLRF	r0x101D
000915   0825     movf    0x25, 0x0        	MOVF	r0x101C,W
000916   3e34     addlw   0x34             	ADDLW	(_temprature + 0)
000917   00a4     movwf   0x24             	MOVWF	r0x101B
000918   3000     movlw   0x00             	MOVLW	high (_temprature + 0)
000919   00a7     movwf   0x27             	MOVWF	r0x101E
00091a   3000     movlw   0x00             	MOVLW	0x00
00091b   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
00091c   0f26     incfsz  0x26, 0x0        	INCFSZ	r0x101D,W
00091d   07a7     addwf   0x27, 0x1        	ADDWF	r0x101E,F
00091e   0824     movf    0x24, 0x0        	MOVF	r0x101B,W
00091f   1283     bcf     0x03, 0x5        	BANKSEL	FSR
000920   1303     bcf     0x03, 0x6        
000921   0084     movwf   0x04             	MOVWF	FSR
000922   1383     bcf     0x03, 0x7        	BCF	STATUS,7
000923   1283     bcf     0x03, 0x5        	BANKSEL	r0x101E
000924   1303     bcf     0x03, 0x6        
000925   1827     btfsc   0x27, 0x0        	BTFSC	r0x101E,0
000926   1783     bsf     0x03, 0x7        	BSF	STATUS,7
000927   0822     movf    0x22, 0x0        	MOVF	r0x101A,W
000928   1283     bcf     0x03, 0x5        	BANKSEL	INDF
000929   1303     bcf     0x03, 0x6        
00092a   0080     movwf   0x00             	MOVWF	INDF
00092b   0a84     incf    0x04, 0x1        	INCF	FSR,F
00092c   1283     bcf     0x03, 0x5        	BANKSEL	r0x1019
00092d   1303     bcf     0x03, 0x6        
00092e   0823     movf    0x23, 0x0        	MOVF	r0x1019,W
00092f   1283     bcf     0x03, 0x5        	BANKSEL	INDF
000930   1303     bcf     0x03, 0x6        
000931   0080     movwf   0x00             	MOVWF	INDF
000932   0008     return                   	RETURN	
                                           ; exit point of _lm35_set_temp

                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _lm35_init	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;functions called:
                                           ;   _adc_init
                                           ;   _adc_init
                                           ;2 compiler assigned registers:
                                           ;   r0x102B
                                           ;   r0x102C
                                           ;; Starting pCode block
                                           _lm35_init	;Function start
                                           ; 2 exit points
                                           ;	.line	17; "lm35.c"	void lm35_init(tByte sensor_pin)
000933   1283     bcf     0x03, 0x5        	BANKSEL	r0x102B
000934   1303     bcf     0x03, 0x6        
000935   00a0     movwf   0x20             	MOVWF	r0x102B
                                           ;	.line	19; "lm35.c"	GPIO_InitPortPin(GPIO_PORTA_CONTROL,sensor_pin,GPIO_IN);
000936   3001     movlw   0x01             	MOVLW	0x01
000937   00a1     movwf   0x21             	MOVWF	r0x102C
000938   0820     movf    0x20, 0x0        	MOVF	r0x102B,W
000939   3c00     sublw   0x00             	SUBLW	0x00
00093a   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
00093b   2942     goto    0x0142           	GOTO	_00108_DS_
                                           _00107_DS_
00093c   1283     bcf     0x03, 0x5        	BANKSEL	r0x102C
00093d   1303     bcf     0x03, 0x6        
00093e   0da1     rlf     0x21, 0x1        	RLF	r0x102C,F
00093f   3e01     addlw   0x01             	ADDLW	0x01
000940   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
000941   293c     goto    0x013c           	GOTO	_00107_DS_
                                           _00108_DS_
000942   1283     bcf     0x03, 0x5        	BANKSEL	r0x102C
000943   1303     bcf     0x03, 0x6        
000944   0921     comf    0x21, 0x0        	COMF	r0x102C,W
000945   00a0     movwf   0x20             	MOVWF	r0x102B
000946   1683     bsf     0x03, 0x5        	BANKSEL	_TRISA
000947   1303     bcf     0x03, 0x6        
000948   0805     movf    0x05, 0x0        	MOVF	_TRISA,W
000949   1283     bcf     0x03, 0x5        	BANKSEL	r0x102B
00094a   1303     bcf     0x03, 0x6        
00094b   05a0     andwf   0x20, 0x1        	ANDWF	r0x102B,F
00094c   0821     movf    0x21, 0x0        	MOVF	r0x102C,W
00094d   0420     iorwf   0x20, 0x0        	IORWF	r0x102B,W
00094e   1683     bsf     0x03, 0x5        	BANKSEL	_TRISA
00094f   1303     bcf     0x03, 0x6        
000950   0085     movwf   0x05             	MOVWF	_TRISA
                                           ;	.line	20; "lm35.c"	adc_init();
000951   158a     bsf     0x0a, 0x3        	PAGESEL	_adc_init
000952   120a     bcf     0x0a, 0x4        
000953   25b0     call    0x05b0           	CALL	_adc_init
000954   158a     bsf     0x0a, 0x3        	PAGESEL	$
000955   120a     bcf     0x0a, 0x4        
000956   0008     return                   	RETURN	
                                           ; exit point of _lm35_init


                                           ;	code size estimation:
                                           ;	  221+   61 =   282 instructions (  686 byte)

                                           	end
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.5.0 #9253 (Jun 20 2015) (MINGW32)
                                           ; This file was generated Tue Jul 14 05:24:33 2020
                                           ;--------------------------------------------------------
                                           ; PIC port for the 14-bit core
                                           ;--------------------------------------------------------
                                           ;	.file	"main.c"
                                           	list	p=16f877a
                                           	radix dec
                                           	include "p16f877a.inc"
                                                   LIST

                                           ;==========================================================================
                                           ; Build date : Oct 21 2015
                                           ;  MPASM PIC16F877A processor include
                                           ; 
                                           ;  (c) Copyright 1999-2015 Microchip Technology, All rights reserved
                                           ;==========================================================================

                                                   NOLIST
                                           ;--------------------------------------------------------
                                           ; config word(s)
                                           ;--------------------------------------------------------
002007   3f3a     addlw   0x3a             	__config 0x3f3a
                                           ;--------------------------------------------------------
                                           ; external declarations
                                           ;--------------------------------------------------------
                                           	extern	_SW_Init
                                           	extern	_SW_GetState
                                           	extern	_SW_Update
                                           	extern	_tempset_init
                                           	extern	_tempset_setstate
                                           	extern	_tempset_settemp
                                           	extern	_tempset_getstate
                                           	extern	_tempset_gettemp
                                           	extern	_tempset_update
                                           	extern	_TMR_Init
                                           	extern	_TMR_Start
                                           	extern	_TMR_CheckOverFlow
                                           	extern	_TMR_Stop
                                           	extern	_TMR_Update
                                           	extern	_SSD_Init
                                           	extern	_SSD_Update
                                           	extern	_SSD_SetValue
                                           	extern	_SSD_GetValue
                                           	extern	_SSD_GetState
                                           	extern	_SSD_SetState
                                           	extern	_SSD_SetDotState
                                           	extern	_heaterstate_init
                                           	extern	_heaterstate_setstate
                                           	extern	_heaterstate_getstate
                                           	extern	_heaterstate_update
                                           	extern	_display_init
                                           	extern	_display_update
                                           	extern	_lm35_init
                                           	extern	_lm35_set_currentTemp
                                           	extern	_lm35_get_currentTemp
                                           	extern	_lm35_update
                                           	extern	_heater_init
                                           	extern	_heater_set_state
                                           	extern	_heater_get_state
                                           	extern	_heater_update
                                           	extern	_cooler_init
                                           	extern	_cooler_set_state
                                           	extern	_cooler_get_state
                                           	extern	_cooler_update
                                           	extern	_led_init
                                           	extern	_led_set_state
                                           	extern	_led_get_state
                                           	extern	_led_update
                                           	extern	_i2c_init
                                           	extern	_i2c_start
                                           	extern	_i2c_stop
                                           	extern	_i2c_wb
                                           	extern	_i2c_rb
                                           	extern	_i2c_acktst
                                           	extern	_e2pext_r
                                           	extern	_e2pext_w
                                           	extern	_e2pext_init
                                           	extern	_STATUSbits
                                           	extern	_PORTAbits
                                           	extern	_PORTBbits
                                           	extern	_PORTCbits
                                           	extern	_PORTDbits
                                           	extern	_PORTEbits
                                           	extern	_INTCONbits
                                           	extern	_PIR1bits
                                           	extern	_PIR2bits
                                           	extern	_T1CONbits
                                           	extern	_T2CONbits
                                           	extern	_SSPCONbits
                                           	extern	_CCP1CONbits
                                           	extern	_RCSTAbits
                                           	extern	_CCP2CONbits
                                           	extern	_ADCON0bits
                                           	extern	_OPTION_REGbits
                                           	extern	_TRISAbits
                                           	extern	_TRISBbits
                                           	extern	_TRISCbits
                                           	extern	_TRISDbits
                                           	extern	_TRISEbits
                                           	extern	_PIE1bits
                                           	extern	_PIE2bits
                                           	extern	_PCONbits
                                           	extern	_SSPCON2bits
                                           	extern	_SSPSTATbits
                                           	extern	_TXSTAbits
                                           	extern	_CMCONbits
                                           	extern	_CVRCONbits
                                           	extern	_ADCON1bits
                                           	extern	_EECON1bits
                                           	extern	_INDF
                                           	extern	_TMR0
                                           	extern	_PCL
                                           	extern	_STATUS
                                           	extern	_FSR
                                           	extern	_PORTA
                                           	extern	_PORTB
                                           	extern	_PORTC
                                           	extern	_PORTD
                                           	extern	_PORTE
                                           	extern	_PCLATH
                                           	extern	_INTCON
                                           	extern	_PIR1
                                           	extern	_PIR2
                                           	extern	_TMR1
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_T1CON
                                           	extern	_TMR2
                                           	extern	_T2CON
                                           	extern	_SSPBUF
                                           	extern	_SSPCON
                                           	extern	_CCPR1
                                           	extern	_CCPR1L
                                           	extern	_CCPR1H
                                           	extern	_CCP1CON
                                           	extern	_RCSTA
                                           	extern	_TXREG
                                           	extern	_RCREG
                                           	extern	_CCPR2
                                           	extern	_CCPR2L
                                           	extern	_CCPR2H
                                           	extern	_CCP2CON
                                           	extern	_ADRESH
                                           	extern	_ADCON0
                                           	extern	_OPTION_REG
                                           	extern	_TRISA
                                           	extern	_TRISB
                                           	extern	_TRISC
                                           	extern	_TRISD
                                           	extern	_TRISE
                                           	extern	_PIE1
                                           	extern	_PIE2
                                           	extern	_PCON
                                           	extern	_SSPCON2
                                           	extern	_PR2
                                           	extern	_SSPADD
                                           	extern	_SSPSTAT
                                           	extern	_TXSTA
                                           	extern	_SPBRG
                                           	extern	_CMCON
                                           	extern	_CVRCON
                                           	extern	_ADRESL
                                           	extern	_ADCON1
                                           	extern	_EEDATA
                                           	extern	_EEADR
                                           	extern	_EEDATH
                                           	extern	_EEADRH
                                           	extern	_EECON1
                                           	extern	_EECON2
                                           	extern	__sdcc_gsinit_startup
                                           ;--------------------------------------------------------
                                           ; global declarations
                                           ;--------------------------------------------------------
                                           	global	_main
                                           	global	_flag

                                           	global PSAVE
                                           	global SSAVE
                                           	global WSAVE
                                           	global STK12
                                           	global STK11
                                           	global STK10
                                           	global STK09
                                           	global STK08
                                           	global STK07
                                           	global STK06
                                           	global STK05
                                           	global STK04
                                           	global STK03
                                           	global STK02
                                           	global STK01
                                           	global STK00

                                           sharebank udata_ovr 0x0070
                                           PSAVE	res 1
                                           SSAVE	res 1
                                           WSAVE	res 1
                                           STK12	res 1
                                           STK11	res 1
                                           STK10	res 1
                                           STK09	res 1
                                           STK08	res 1
                                           STK07	res 1
                                           STK06	res 1
                                           STK05	res 1
                                           STK04	res 1
                                           STK03	res 1
                                           STK02	res 1
                                           STK01	res 1
                                           STK00	res 1

                                           ;--------------------------------------------------------
                                           ; global definitions
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; absolute symbol definitions
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; compiler-defined variables
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; initialized data
                                           ;--------------------------------------------------------

                                           ID_main_0	idata
                                           _flag
                                           	db	0x00

                                           ;--------------------------------------------------------
                                           ; overlayable items in internal ram 
                                           ;--------------------------------------------------------
                                           ;	udata_ovr
                                           ;--------------------------------------------------------
                                           ; reset vector 
                                           ;--------------------------------------------------------
                                           STARTUP	code 0x0000
000000   0000     nop                      	nop
000001   158a     bsf     0x0a, 0x3        	pagesel __sdcc_gsinit_startup
000002   120a     bcf     0x0a, 0x4        
000003   2c37     goto    0x0437           	goto	__sdcc_gsinit_startup
                                           ;--------------------------------------------------------
                                           ; code
                                           ;--------------------------------------------------------
                                           code_main	code
                                           ;***
                                           ;  pBlock Stats: dbName = M
                                           ;***
                                           ;entry:  _main	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;functions called:
                                           ;   _e2pext_init
                                           ;   _SW_Init
                                           ;   _heaterstate_init
                                           ;   _tempset_init
                                           ;   _display_init
                                           ;   _lm35_init
                                           ;   _heater_init
                                           ;   _cooler_init
                                           ;   _led_init
                                           ;   _TMR_Init
                                           ;   _TMR_Start
                                           ;   _e2pext_init
                                           ;   _SW_Init
                                           ;   _heaterstate_init
                                           ;   _tempset_init
                                           ;   _display_init
                                           ;   _lm35_init
                                           ;   _heater_init
                                           ;   _cooler_init
                                           ;   _led_init
                                           ;   _TMR_Init
                                           ;   _TMR_Start
                                           ;2 compiler assigned registers:
                                           ;   STK01
                                           ;   STK00
                                           ;; Starting pCode block
                                           _main	;Function start
                                           ; 2 exit points
                                           ;	.line	23; "main.c"	e2pext_init();
000cd3   118a     bcf     0x0a, 0x3        	PAGESEL	_e2pext_init
000cd4   120a     bcf     0x0a, 0x4        
000cd5   26e3     call    0x06e3           	CALL	_e2pext_init
000cd6   158a     bsf     0x0a, 0x3        	PAGESEL	$
000cd7   120a     bcf     0x0a, 0x4        
                                           ;	.line	24; "main.c"	SW_Init();
000cd8   118a     bcf     0x0a, 0x3        	PAGESEL	_SW_Init
000cd9   120a     bcf     0x0a, 0x4        
000cda   223b     call    0x023b           	CALL	_SW_Init
000cdb   158a     bsf     0x0a, 0x3        	PAGESEL	$
000cdc   120a     bcf     0x0a, 0x4        
                                           ;	.line	25; "main.c"	heaterstate_init(off);
000cdd   3000     movlw   0x00             	MOVLW	0x00
000cde   158a     bsf     0x0a, 0x3        	PAGESEL	_heaterstate_init
000cdf   120a     bcf     0x0a, 0x4        
000ce0   2431     call    0x0431           	CALL	_heaterstate_init
000ce1   158a     bsf     0x0a, 0x3        	PAGESEL	$
000ce2   120a     bcf     0x0a, 0x4        
                                           ;	.line	26; "main.c"	tempset_init(start,60);
000ce3   303c     movlw   0x3c             	MOVLW	0x3c
000ce4   00fe     movwf   0x7e             	MOVWF	STK01
000ce5   3000     movlw   0x00             	MOVLW	0x00
000ce6   00ff     movwf   0x7f             	MOVWF	STK00
000ce7   3000     movlw   0x00             	MOVLW	0x00
000ce8   118a     bcf     0x0a, 0x3        	PAGESEL	_tempset_init
000ce9   120a     bcf     0x0a, 0x4        
000cea   2591     call    0x0591           	CALL	_tempset_init
000ceb   158a     bsf     0x0a, 0x3        	PAGESEL	$
000cec   120a     bcf     0x0a, 0x4        
                                           ;	.line	27; "main.c"	display_init();
000ced   158a     bsf     0x0a, 0x3        	PAGESEL	_display_init
000cee   120a     bcf     0x0a, 0x4        
000cef   237e     call    0x037e           	CALL	_display_init
000cf0   158a     bsf     0x0a, 0x3        	PAGESEL	$
000cf1   120a     bcf     0x0a, 0x4        
                                           ;	.line	28; "main.c"	lm35_init(GPIO_PIN_2);
000cf2   3002     movlw   0x02             	MOVLW	0x02
000cf3   158a     bsf     0x0a, 0x3        	PAGESEL	_lm35_init
000cf4   120a     bcf     0x0a, 0x4        
000cf5   2133     call    0x0133           	CALL	_lm35_init
000cf6   158a     bsf     0x0a, 0x3        	PAGESEL	$
000cf7   120a     bcf     0x0a, 0x4        
                                           ;	.line	29; "main.c"	heater_init(heateroff);
000cf8   3000     movlw   0x00             	MOVLW	0x00
000cf9   158a     bsf     0x0a, 0x3        	PAGESEL	_heater_init
000cfa   120a     bcf     0x0a, 0x4        
000cfb   2273     call    0x0273           	CALL	_heater_init
000cfc   158a     bsf     0x0a, 0x3        	PAGESEL	$
000cfd   120a     bcf     0x0a, 0x4        
                                           ;	.line	30; "main.c"	cooler_init(cooleroff);
000cfe   3000     movlw   0x00             	MOVLW	0x00
000cff   158a     bsf     0x0a, 0x3        	PAGESEL	_cooler_init
000d00   120a     bcf     0x0a, 0x4        
000d01   21db     call    0x01db           	CALL	_cooler_init
000d02   158a     bsf     0x0a, 0x3        	PAGESEL	$
000d03   120a     bcf     0x0a, 0x4        
                                           ;	.line	31; "main.c"	led_init(ledoff);
000d04   3000     movlw   0x00             	MOVLW	0x00
000d05   118a     bcf     0x0a, 0x3        	PAGESEL	_led_init
000d06   120a     bcf     0x0a, 0x4        
000d07   2796     call    0x0796           	CALL	_led_init
000d08   158a     bsf     0x0a, 0x3        	PAGESEL	$
000d09   120a     bcf     0x0a, 0x4        
                                           ;	.line	32; "main.c"	TMR_Init();
000d0a   158a     bsf     0x0a, 0x3        	PAGESEL	_TMR_Init
000d0b   120a     bcf     0x0a, 0x4        
000d0c   2626     call    0x0626           	CALL	_TMR_Init
000d0d   158a     bsf     0x0a, 0x3        	PAGESEL	$
000d0e   120a     bcf     0x0a, 0x4        
                                           ;	.line	33; "main.c"	TMR_Start();
000d0f   158a     bsf     0x0a, 0x3        	PAGESEL	_TMR_Start
000d10   120a     bcf     0x0a, 0x4        
000d11   261b     call    0x061b           	CALL	_TMR_Start
000d12   158a     bsf     0x0a, 0x3        	PAGESEL	$
000d13   120a     bcf     0x0a, 0x4        
                                           _00106_DS_
                                           ;	.line	35; "main.c"	while(1)
000d14   2d14     goto    0x0514           	GOTO	_00106_DS_
                                           ;	.line	40; "main.c"	return 0;
000d15   0008     return                   	RETURN	
                                           ; exit point of _main


                                           ;	code size estimation:
                                           ;	   23+   22 =    45 instructions (  134 byte)

                                           	end
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.5.0 #9253 (Jun 20 2015) (MINGW32)
                                           ; This file was generated Tue Jul 14 05:24:34 2020
                                           ;--------------------------------------------------------
                                           ; PIC port for the 14-bit core
                                           ;--------------------------------------------------------
                                           ;	.file	"onoff.c"
                                           	list	p=16f877a
                                           	radix dec
                                           	include "p16f877a.inc"
                                                   LIST

                                           ;==========================================================================
                                           ; Build date : Oct 21 2015
                                           ;  MPASM PIC16F877A processor include
                                           ; 
                                           ;  (c) Copyright 1999-2015 Microchip Technology, All rights reserved
                                           ;==========================================================================

                                                   NOLIST
                                           ;--------------------------------------------------------
                                           ; external declarations
                                           ;--------------------------------------------------------
                                           	extern	_SW_Init
                                           	extern	_SW_GetState
                                           	extern	_SW_Update
                                           	extern	_SSD_Init
                                           	extern	_SSD_Update
                                           	extern	_SSD_SetValue
                                           	extern	_SSD_GetValue
                                           	extern	_SSD_GetState
                                           	extern	_SSD_SetState
                                           	extern	_SSD_SetDotState
                                           	extern	_TMR_Init
                                           	extern	_TMR_Start
                                           	extern	_TMR_CheckOverFlow
                                           	extern	_TMR_Stop
                                           	extern	_TMR_Update
                                           	extern	_tempset_init
                                           	extern	_tempset_setstate
                                           	extern	_tempset_settemp
                                           	extern	_tempset_getstate
                                           	extern	_tempset_gettemp
                                           	extern	_tempset_update
                                           	extern	_e2prom_r
                                           	extern	_e2prom_w
                                           	extern	_i2c_init
                                           	extern	_i2c_start
                                           	extern	_i2c_stop
                                           	extern	_i2c_wb
                                           	extern	_i2c_rb
                                           	extern	_i2c_acktst
                                           	extern	_e2pext_r
                                           	extern	_e2pext_w
                                           	extern	_e2pext_init
                                           	extern	_heater_init
                                           	extern	_heater_set_state
                                           	extern	_heater_get_state
                                           	extern	_heater_update
                                           	extern	_cooler_init
                                           	extern	_cooler_set_state
                                           	extern	_cooler_get_state
                                           	extern	_cooler_update
                                           	extern	_STATUSbits
                                           	extern	_PORTAbits
                                           	extern	_PORTBbits
                                           	extern	_PORTCbits
                                           	extern	_PORTDbits
                                           	extern	_PORTEbits
                                           	extern	_INTCONbits
                                           	extern	_PIR1bits
                                           	extern	_PIR2bits
                                           	extern	_T1CONbits
                                           	extern	_T2CONbits
                                           	extern	_SSPCONbits
                                           	extern	_CCP1CONbits
                                           	extern	_RCSTAbits
                                           	extern	_CCP2CONbits
                                           	extern	_ADCON0bits
                                           	extern	_OPTION_REGbits
                                           	extern	_TRISAbits
                                           	extern	_TRISBbits
                                           	extern	_TRISCbits
                                           	extern	_TRISDbits
                                           	extern	_TRISEbits
                                           	extern	_PIE1bits
                                           	extern	_PIE2bits
                                           	extern	_PCONbits
                                           	extern	_SSPCON2bits
                                           	extern	_SSPSTATbits
                                           	extern	_TXSTAbits
                                           	extern	_CMCONbits
                                           	extern	_CVRCONbits
                                           	extern	_ADCON1bits
                                           	extern	_EECON1bits
                                           	extern	_INDF
                                           	extern	_TMR0
                                           	extern	_PCL
                                           	extern	_STATUS
                                           	extern	_FSR
                                           	extern	_PORTA
                                           	extern	_PORTB
                                           	extern	_PORTC
                                           	extern	_PORTD
                                           	extern	_PORTE
                                           	extern	_PCLATH
                                           	extern	_INTCON
                                           	extern	_PIR1
                                           	extern	_PIR2
                                           	extern	_TMR1
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_T1CON
                                           	extern	_TMR2
                                           	extern	_T2CON
                                           	extern	_SSPBUF
                                           	extern	_SSPCON
                                           	extern	_CCPR1
                                           	extern	_CCPR1L
                                           	extern	_CCPR1H
                                           	extern	_CCP1CON
                                           	extern	_RCSTA
                                           	extern	_TXREG
                                           	extern	_RCREG
                                           	extern	_CCPR2
                                           	extern	_CCPR2L
                                           	extern	_CCPR2H
                                           	extern	_CCP2CON
                                           	extern	_ADRESH
                                           	extern	_ADCON0
                                           	extern	_OPTION_REG
                                           	extern	_TRISA
                                           	extern	_TRISB
                                           	extern	_TRISC
                                           	extern	_TRISD
                                           	extern	_TRISE
                                           	extern	_PIE1
                                           	extern	_PIE2
                                           	extern	_PCON
                                           	extern	_SSPCON2
                                           	extern	_PR2
                                           	extern	_SSPADD
                                           	extern	_SSPSTAT
                                           	extern	_TXSTA
                                           	extern	_SPBRG
                                           	extern	_CMCON
                                           	extern	_CVRCON
                                           	extern	_ADRESL
                                           	extern	_ADCON1
                                           	extern	_EEDATA
                                           	extern	_EEADR
                                           	extern	_EEDATH
                                           	extern	_EEADRH
                                           	extern	_EECON1
                                           	extern	_EECON2

                                           	extern PSAVE
                                           	extern SSAVE
                                           	extern WSAVE
                                           	extern STK12
                                           	extern STK11
                                           	extern STK10
                                           	extern STK09
                                           	extern STK08
                                           	extern STK07
                                           	extern STK06
                                           	extern STK05
                                           	extern STK04
                                           	extern STK03
                                           	extern STK02
                                           	extern STK01
                                           	extern STK00
                                           ;--------------------------------------------------------
                                           ; global declarations
                                           ;--------------------------------------------------------
                                           	global	_heaterstate_update
                                           	global	_heaterstate_getstate
                                           	global	_heaterstate_setstate
                                           	global	_heaterstate_init

                                           ;--------------------------------------------------------
                                           ; global definitions
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; absolute symbol definitions
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; compiler-defined variables
                                           ;--------------------------------------------------------
                                           UDL_onoff_0	udata
                                           r0x1003	res	1
                                           r0x1004	res	1
                                           _heaterstate	res	1
                                           _heaterstate_update_periodcount_1_51	res	2
                                           ;--------------------------------------------------------
                                           ; initialized data
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; overlayable items in internal ram 
                                           ;--------------------------------------------------------
                                           ;	udata_ovr
                                           ;--------------------------------------------------------
                                           ; code
                                           ;--------------------------------------------------------
                                           code_onoff	code
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _heaterstate_update	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;functions called:
                                           ;   _heaterstate_getstate
                                           ;   _e2pext_r
                                           ;   _tempset_settemp
                                           ;   _e2pext_r
                                           ;   _tempset_settemp
                                           ;   _SW_GetState
                                           ;   _heaterstate_setstate
                                           ;   _e2pext_w
                                           ;   _SW_GetState
                                           ;   _heaterstate_setstate
                                           ;   _cooler_set_state
                                           ;   _heater_set_state
                                           ;   _tempset_setstate
                                           ;   _heaterstate_getstate
                                           ;   _e2pext_r
                                           ;   _tempset_settemp
                                           ;   _e2pext_r
                                           ;   _tempset_settemp
                                           ;   _SW_GetState
                                           ;   _heaterstate_setstate
                                           ;   _e2pext_w
                                           ;   _SW_GetState
                                           ;   _heaterstate_setstate
                                           ;   _cooler_set_state
                                           ;   _heater_set_state
                                           ;   _tempset_setstate
                                           ;5 compiler assigned registers:
                                           ;   r0x1003
                                           ;   r0x1004
                                           ;   STK00
                                           ;   r0x1005
                                           ;   STK01
                                           ;; Starting pCode block
                                           _heaterstate_update	;Function start
                                           ; 2 exit points
                                           ;	.line	36; "onoff.c"	periodcount+=TMR_TICK_MS;
000b9b   3014     movlw   0x14             	MOVLW	0x14
000b9c   1283     bcf     0x03, 0x5        	BANKSEL	_heaterstate_update_periodcount_1_51
000b9d   1703     bsf     0x03, 0x6        
000b9e   07b9     addwf   0x39, 0x1        	ADDWF	_heaterstate_update_periodcount_1_51,F
000b9f   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
000ba0   0aba     incf    0x3a, 0x1        	INCF	(_heaterstate_update_periodcount_1_51 + 1),F
                                           ;	.line	38; "onoff.c"	if(periodcount!=taskperiod)
000ba1   0839     movf    0x39, 0x0        	MOVF	_heaterstate_update_periodcount_1_51,W
000ba2   3a14     xorlw   0x14             	XORLW	0x14
000ba3   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
000ba4   2ba8     goto    0x03a8           	GOTO	_00155_DS_
000ba5   083a     movf    0x3a, 0x0        	MOVF	(_heaterstate_update_periodcount_1_51 + 1),W
                                           ;	.line	40; "onoff.c"	return;
000ba6   3a00     xorlw   0x00             	XORLW	0x00
                                           ;	.line	43; "onoff.c"	periodcount=0;
000ba7   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
                                           _00155_DS_
000ba8   2c28     goto    0x0428           	GOTO	_00132_DS_
000ba9   1283     bcf     0x03, 0x5        	BANKSEL	_heaterstate_update_periodcount_1_51
000baa   1703     bsf     0x03, 0x6        
000bab   01b9     clrf    0x39             	CLRF	_heaterstate_update_periodcount_1_51
000bac   01ba     clrf    0x3a             	CLRF	(_heaterstate_update_periodcount_1_51 + 1)
                                           ;	.line	45; "onoff.c"	switch(heaterstate_getstate())
000bad   2429     call    0x0429           	CALL	_heaterstate_getstate
000bae   1283     bcf     0x03, 0x5        	BANKSEL	r0x1003
000baf   1703     bsf     0x03, 0x6        
000bb0   00b6     movwf   0x36             	MOVWF	r0x1003
000bb1   00b7     movwf   0x37             	MOVWF	r0x1004
000bb2   0837     movf    0x37, 0x0        	MOVF	r0x1004,W
000bb3   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
000bb4   2bba     goto    0x03ba           	GOTO	_00119_DS_
000bb5   0836     movf    0x36, 0x0        	MOVF	r0x1003,W
000bb6   3a01     xorlw   0x01             	XORLW	0x01
000bb7   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
000bb8   2bfe     goto    0x03fe           	GOTO	_00127_DS_
000bb9   2c28     goto    0x0428           	GOTO	_00132_DS_
                                           _00119_DS_
                                           ;	.line	49; "onoff.c"	on_state=e2pext_r(20);
000bba   3014     movlw   0x14             	MOVLW	0x14
000bbb   00ff     movwf   0x7f             	MOVWF	STK00
000bbc   3000     movlw   0x00             	MOVLW	0x00
000bbd   118a     bcf     0x0a, 0x3        	PAGESEL	_e2pext_r
000bbe   120a     bcf     0x0a, 0x4        
000bbf   25dc     call    0x05dc           	CALL	_e2pext_r
000bc0   158a     bsf     0x0a, 0x3        	PAGESEL	$
000bc1   120a     bcf     0x0a, 0x4        
000bc2   1283     bcf     0x03, 0x5        	BANKSEL	r0x1003
000bc3   1703     bsf     0x03, 0x6        
000bc4   00b6     movwf   0x36             	MOVWF	r0x1003
                                           ;	.line	50; "onoff.c"	if(on_state!=0x01)
000bc5   01b7     clrf    0x37             	CLRF	r0x1004
000bc6   0836     movf    0x36, 0x0        	MOVF	r0x1003,W
000bc7   3a01     xorlw   0x01             	XORLW	0x01
000bc8   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
000bc9   0ab7     incf    0x37, 0x1        	INCF	r0x1004,F
000bca   0837     movf    0x37, 0x0        	MOVF	r0x1004,W
000bcb   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
000bcc   2bd6     goto    0x03d6           	GOTO	_00123_DS_
                                           ;	.line	52; "onoff.c"	tempset_settemp(60);
000bcd   303c     movlw   0x3c             	MOVLW	0x3c
000bce   00ff     movwf   0x7f             	MOVWF	STK00
000bcf   3000     movlw   0x00             	MOVLW	0x00
000bd0   118a     bcf     0x0a, 0x3        	PAGESEL	_tempset_settemp
000bd1   120a     bcf     0x0a, 0x4        
000bd2   257f     call    0x057f           	CALL	_tempset_settemp
000bd3   158a     bsf     0x0a, 0x3        	PAGESEL	$
000bd4   120a     bcf     0x0a, 0x4        
000bd5   2bef     goto    0x03ef           	GOTO	_00124_DS_
                                           _00123_DS_
                                           ;	.line	54; "onoff.c"	else if(on_state==0x01)
000bd6   3000     movlw   0x00             	MOVLW	0x00
000bd7   1283     bcf     0x03, 0x5        	BANKSEL	r0x1004
000bd8   1703     bsf     0x03, 0x6        
000bd9   0437     iorwf   0x37, 0x0        	IORWF	r0x1004,W
000bda   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
000bdb   2bef     goto    0x03ef           	GOTO	_00124_DS_
                                           ;	.line	57; "onoff.c"	tByte x=e2pext_r(10);
000bdc   300a     movlw   0x0a             	MOVLW	0x0a
000bdd   00ff     movwf   0x7f             	MOVWF	STK00
000bde   3000     movlw   0x00             	MOVLW	0x00
000bdf   118a     bcf     0x0a, 0x3        	PAGESEL	_e2pext_r
000be0   120a     bcf     0x0a, 0x4        
000be1   25dc     call    0x05dc           	CALL	_e2pext_r
000be2   158a     bsf     0x0a, 0x3        	PAGESEL	$
000be3   120a     bcf     0x0a, 0x4        
                                           ;	.line	58; "onoff.c"	tempset_settemp(x);
000be4   1283     bcf     0x03, 0x5        	BANKSEL	r0x1003
000be5   1703     bsf     0x03, 0x6        
000be6   00b6     movwf   0x36             	MOVWF	r0x1003
000be7   00b7     movwf   0x37             	MOVWF	r0x1004
000be8   00ff     movwf   0x7f             	MOVWF	STK00
000be9   3000     movlw   0x00             	MOVLW	0x00
000bea   118a     bcf     0x0a, 0x3        	PAGESEL	_tempset_settemp
000beb   120a     bcf     0x0a, 0x4        
000bec   257f     call    0x057f           	CALL	_tempset_settemp
000bed   158a     bsf     0x0a, 0x3        	PAGESEL	$
000bee   120a     bcf     0x0a, 0x4        
                                           _00124_DS_
                                           ;	.line	61; "onoff.c"	if(SW_GetState(SW_ONOFF)==SW_PRE_RELEASED)
000bef   3002     movlw   0x02             	MOVLW	0x02
000bf0   118a     bcf     0x0a, 0x3        	PAGESEL	_SW_GetState
000bf1   120a     bcf     0x0a, 0x4        
000bf2   220f     call    0x020f           	CALL	_SW_GetState
000bf3   158a     bsf     0x0a, 0x3        	PAGESEL	$
000bf4   120a     bcf     0x0a, 0x4        
000bf5   1283     bcf     0x03, 0x5        	BANKSEL	r0x1003
000bf6   1703     bsf     0x03, 0x6        
000bf7   00b6     movwf   0x36             	MOVWF	r0x1003
000bf8   3a03     xorlw   0x03             	XORLW	0x03
000bf9   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
000bfa   2c28     goto    0x0428           	GOTO	_00132_DS_
                                           ;	.line	63; "onoff.c"	heaterstate_setstate(on);
000bfb   3001     movlw   0x01             	MOVLW	0x01
000bfc   242d     call    0x042d           	CALL	_heaterstate_setstate
                                           ;	.line	65; "onoff.c"	break;
000bfd   2c28     goto    0x0428           	GOTO	_00132_DS_
                                           _00127_DS_
                                           ;	.line	69; "onoff.c"	e2pext_w(20,0x01);
000bfe   3001     movlw   0x01             	MOVLW	0x01
000bff   00fe     movwf   0x7e             	MOVWF	STK01
000c00   3014     movlw   0x14             	MOVLW	0x14
000c01   00ff     movwf   0x7f             	MOVWF	STK00
000c02   3000     movlw   0x00             	MOVLW	0x00
000c03   118a     bcf     0x0a, 0x3        	PAGESEL	_e2pext_w
000c04   120a     bcf     0x0a, 0x4        
000c05   2597     call    0x0597           	CALL	_e2pext_w
000c06   158a     bsf     0x0a, 0x3        	PAGESEL	$
000c07   120a     bcf     0x0a, 0x4        
                                           ;	.line	70; "onoff.c"	if(SW_GetState(SW_ONOFF)==SW_PRE_RELEASED)
000c08   3002     movlw   0x02             	MOVLW	0x02
000c09   118a     bcf     0x0a, 0x3        	PAGESEL	_SW_GetState
000c0a   120a     bcf     0x0a, 0x4        
000c0b   220f     call    0x020f           	CALL	_SW_GetState
000c0c   158a     bsf     0x0a, 0x3        	PAGESEL	$
000c0d   120a     bcf     0x0a, 0x4        
000c0e   1283     bcf     0x03, 0x5        	BANKSEL	r0x1003
000c0f   1703     bsf     0x03, 0x6        
000c10   00b6     movwf   0x36             	MOVWF	r0x1003
000c11   3a03     xorlw   0x03             	XORLW	0x03
000c12   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
000c13   2c28     goto    0x0428           	GOTO	_00132_DS_
                                           ;	.line	72; "onoff.c"	heaterstate_setstate(off);
000c14   3000     movlw   0x00             	MOVLW	0x00
000c15   242d     call    0x042d           	CALL	_heaterstate_setstate
                                           ;	.line	73; "onoff.c"	cooler_set_state(cooleroff);
000c16   3000     movlw   0x00             	MOVLW	0x00
000c17   158a     bsf     0x0a, 0x3        	PAGESEL	_cooler_set_state
000c18   120a     bcf     0x0a, 0x4        
000c19   21d7     call    0x01d7           	CALL	_cooler_set_state
000c1a   158a     bsf     0x0a, 0x3        	PAGESEL	$
000c1b   120a     bcf     0x0a, 0x4        
                                           ;	.line	74; "onoff.c"	heater_set_state(heateroff);
000c1c   3000     movlw   0x00             	MOVLW	0x00
000c1d   158a     bsf     0x0a, 0x3        	PAGESEL	_heater_set_state
000c1e   120a     bcf     0x0a, 0x4        
000c1f   226f     call    0x026f           	CALL	_heater_set_state
000c20   158a     bsf     0x0a, 0x3        	PAGESEL	$
000c21   120a     bcf     0x0a, 0x4        
                                           ;	.line	75; "onoff.c"	tempset_setstate(start);
000c22   3000     movlw   0x00             	MOVLW	0x00
000c23   118a     bcf     0x0a, 0x3        	PAGESEL	_tempset_setstate
000c24   120a     bcf     0x0a, 0x4        
000c25   258d     call    0x058d           	CALL	_tempset_setstate
000c26   158a     bsf     0x0a, 0x3        	PAGESEL	$
000c27   120a     bcf     0x0a, 0x4        
                                           _00132_DS_
                                           ;	.line	84; "onoff.c"	}
000c28   0008     return                   	RETURN	
                                           ; exit point of _heaterstate_update

                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _heaterstate_getstate	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;; Starting pCode block
                                           _heaterstate_getstate	;Function start
                                           ; 2 exit points
                                           ;	.line	27; "onoff.c"	return heaterstate;
000c29   1283     bcf     0x03, 0x5        	BANKSEL	_heaterstate
000c2a   1703     bsf     0x03, 0x6        
000c2b   0838     movf    0x38, 0x0        	MOVF	_heaterstate,W
000c2c   0008     return                   	RETURN	
                                           ; exit point of _heaterstate_getstate

                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _heaterstate_setstate	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;; Starting pCode block
                                           _heaterstate_setstate	;Function start
                                           ; 2 exit points
                                           ;	.line	20; "onoff.c"	void heaterstate_setstate(heaterState state)
000c2d   1283     bcf     0x03, 0x5        	BANKSEL	_heaterstate
000c2e   1703     bsf     0x03, 0x6        
000c2f   00b8     movwf   0x38             	MOVWF	_heaterstate
                                           ;	.line	22; "onoff.c"	heaterstate=state;
000c30   0008     return                   	RETURN	
                                           ; exit point of _heaterstate_setstate

                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _heaterstate_init	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;functions called:
                                           ;   _heaterstate_setstate
                                           ;   _heaterstate_setstate
                                           ;1 compiler assigned register :
                                           ;   r0x1006
                                           ;; Starting pCode block
                                           _heaterstate_init	;Function start
                                           ; 2 exit points
                                           ;;1	MOVWF	r0x1006
                                           ;	.line	17; "onoff.c"	heaterstate_setstate(state);
000c31   158a     bsf     0x0a, 0x3        	PAGESEL	_heaterstate_setstate
000c32   120a     bcf     0x0a, 0x4        
000c33   242d     call    0x042d           	CALL	_heaterstate_setstate
000c34   158a     bsf     0x0a, 0x3        	PAGESEL	$
000c35   120a     bcf     0x0a, 0x4        
000c36   0008     return                   	RETURN	
                                           ; exit point of _heaterstate_init


                                           ;	code size estimation:
                                           ;	   92+   32 =   124 instructions (  312 byte)

                                           	end
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.5.0 #9253 (Jun 20 2015) (MINGW32)
                                           ; This file was generated Fri Jul 03 11:35:52 2020
                                           ;--------------------------------------------------------
                                           ; PIC port for the 14-bit core
                                           ;--------------------------------------------------------
                                           ;	.file	"SSD.c"
                                           	list	p=16f877a
                                           	radix dec
                                           	include "p16f877a.inc"
                                                   LIST

                                           ;==========================================================================
                                           ; Build date : Oct 21 2015
                                           ;  MPASM PIC16F877A processor include
                                           ; 
                                           ;  (c) Copyright 1999-2015 Microchip Technology, All rights reserved
                                           ;==========================================================================

                                                   NOLIST
                                           ;--------------------------------------------------------
                                           ; external declarations
                                           ;--------------------------------------------------------
                                           	extern	_TMR_Init
                                           	extern	_TMR_Start
                                           	extern	_TMR_CheckOverFlow
                                           	extern	_TMR_Stop
                                           	extern	_TMR_Update
                                           	extern	_heaterstate_init
                                           	extern	_heaterstate_setstate
                                           	extern	_heaterstate_getstate
                                           	extern	_heaterstate_update
                                           	extern	_STATUSbits
                                           	extern	_PORTAbits
                                           	extern	_PORTBbits
                                           	extern	_PORTCbits
                                           	extern	_PORTDbits
                                           	extern	_PORTEbits
                                           	extern	_INTCONbits
                                           	extern	_PIR1bits
                                           	extern	_PIR2bits
                                           	extern	_T1CONbits
                                           	extern	_T2CONbits
                                           	extern	_SSPCONbits
                                           	extern	_CCP1CONbits
                                           	extern	_RCSTAbits
                                           	extern	_CCP2CONbits
                                           	extern	_ADCON0bits
                                           	extern	_OPTION_REGbits
                                           	extern	_TRISAbits
                                           	extern	_TRISBbits
                                           	extern	_TRISCbits
                                           	extern	_TRISDbits
                                           	extern	_TRISEbits
                                           	extern	_PIE1bits
                                           	extern	_PIE2bits
                                           	extern	_PCONbits
                                           	extern	_SSPCON2bits
                                           	extern	_SSPSTATbits
                                           	extern	_TXSTAbits
                                           	extern	_CMCONbits
                                           	extern	_CVRCONbits
                                           	extern	_ADCON1bits
                                           	extern	_EECON1bits
                                           	extern	_INDF
                                           	extern	_TMR0
                                           	extern	_PCL
                                           	extern	_STATUS
                                           	extern	_FSR
                                           	extern	_PORTA
                                           	extern	_PORTB
                                           	extern	_PORTC
                                           	extern	_PORTD
                                           	extern	_PORTE
                                           	extern	_PCLATH
                                           	extern	_INTCON
                                           	extern	_PIR1
                                           	extern	_PIR2
                                           	extern	_TMR1
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_T1CON
                                           	extern	_TMR2
                                           	extern	_T2CON
                                           	extern	_SSPBUF
                                           	extern	_SSPCON
                                           	extern	_CCPR1
                                           	extern	_CCPR1L
                                           	extern	_CCPR1H
                                           	extern	_CCP1CON
                                           	extern	_RCSTA
                                           	extern	_TXREG
                                           	extern	_RCREG
                                           	extern	_CCPR2
                                           	extern	_CCPR2L
                                           	extern	_CCPR2H
                                           	extern	_CCP2CON
                                           	extern	_ADRESH
                                           	extern	_ADCON0
                                           	extern	_OPTION_REG
                                           	extern	_TRISA
                                           	extern	_TRISB
                                           	extern	_TRISC
                                           	extern	_TRISD
                                           	extern	_TRISE
                                           	extern	_PIE1
                                           	extern	_PIE2
                                           	extern	_PCON
                                           	extern	_SSPCON2
                                           	extern	_PR2
                                           	extern	_SSPADD
                                           	extern	_SSPSTAT
                                           	extern	_TXSTA
                                           	extern	_SPBRG
                                           	extern	_CMCON
                                           	extern	_CVRCON
                                           	extern	_ADRESL
                                           	extern	_ADCON1
                                           	extern	_EEDATA
                                           	extern	_EEADR
                                           	extern	_EEDATH
                                           	extern	_EEADRH
                                           	extern	_EECON1
                                           	extern	_EECON2

                                           	extern PSAVE
                                           	extern SSAVE
                                           	extern WSAVE
                                           	extern STK12
                                           	extern STK11
                                           	extern STK10
                                           	extern STK09
                                           	extern STK08
                                           	extern STK07
                                           	extern STK06
                                           	extern STK05
                                           	extern STK04
                                           	extern STK03
                                           	extern STK02
                                           	extern STK01
                                           	extern STK00
                                           ;--------------------------------------------------------
                                           ; global declarations
                                           ;--------------------------------------------------------
                                           	global	_SSD_SetDotState
                                           	global	_SSD_SetState
                                           	global	_SSD_GetState
                                           	global	_SSD_SetValue
                                           	global	_SSD_GetValue
                                           	global	_SSD_Update
                                           	global	_SSD_Init

                                           ;--------------------------------------------------------
                                           ; global definitions
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; absolute symbol definitions
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; compiler-defined variables
                                           ;--------------------------------------------------------
                                           UDL_SSD_0	udata
                                           r0x1026	res	1
                                           r0x1027	res	1
                                           r0x1023	res	1
                                           r0x1024	res	1
                                           r0x1020	res	1
                                           r0x1021	res	1
                                           r0x101D	res	1
                                           r0x101E	res	1
                                           r0x101F	res	1
                                           r0x101A	res	1
                                           r0x101B	res	1
                                           r0x1013	res	1
                                           r0x1014	res	1
                                           r0x1015	res	1
                                           r0x1016	res	1
                                           r0x1017	res	1
                                           r0x1018	res	1
                                           r0x1019	res	1
                                           _SSD_Update_SSD_counter_1_22	res	2
                                           ;--------------------------------------------------------
                                           ; initialized data
                                           ;--------------------------------------------------------

                                           ID_SSD_0	idata
                                           _SSD_Data
                                           	db	0x3f
                                           	db	0x06
                                           	db	0x5b
                                           	db	0x4f
                                           	db	0x66
                                           	db	0x6d
                                           	db	0x7d
                                           	db	0x07
                                           	db	0x7f
                                           	db	0x6f
                                           	db	0x00


                                           ID_SSD_1	idata
                                           _SSD_current
                                           	db	0x00


                                           ID_SSD_2	idata
                                           _SSD_Values
                                           	db	0x0a
                                           	db	0x00
                                           	db	0x00
                                           	db	0x00


                                           ID_SSD_3	idata
                                           _SSD_DotState
                                           	db	0x00

                                           ;--------------------------------------------------------
                                           ; overlayable items in internal ram 
                                           ;--------------------------------------------------------
                                           ;	udata_ovr
                                           ;--------------------------------------------------------
                                           ; code
                                           ;--------------------------------------------------------
                                           code_SSD	code
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _SSD_Out	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;functions called:
                                           ;   _SSD_SetState
                                           ;   _SSD_SetState
                                           ;   _SSD_SetState
                                           ;   _SSD_SetState
                                           ;   _SSD_SetState
                                           ;   _SSD_SetState
                                           ;4 compiler assigned registers:
                                           ;   r0x1017
                                           ;   STK00
                                           ;   r0x1018
                                           ;   r0x1019
                                           ;; Starting pCode block
                                           _SSD_Out	;Function start
                                           ; 2 exit points
                                           ;	.line	172; "SSD.c"	static  void SSD_Out(tSSD ssd, tSSD_Symbol ssd_symbol)
0002c0   1683     bsf     0x03, 0x5        	BANKSEL	r0x1017
0002c1   1303     bcf     0x03, 0x6        
0002c2   00af     movwf   0x2f             	MOVWF	r0x1017
0002c3   087f     movf    0x7f, 0x0        	MOVF	STK00,W
0002c4   00b0     movwf   0x30             	MOVWF	r0x1018
                                           ;	.line	177; "SSD.c"	SSD_SetState(SSD_UNITS, SSD_OFF);
0002c5   3000     movlw   0x00             	MOVLW	0x00
0002c6   00ff     movwf   0x7f             	MOVWF	STK00
0002c7   3000     movlw   0x00             	MOVLW	0x00
0002c8   22ee     call    0x02ee           	CALL	_SSD_SetState
                                           ;	.line	178; "SSD.c"	SSD_SetState(SSD_TENS, SSD_OFF);
0002c9   3000     movlw   0x00             	MOVLW	0x00
0002ca   00ff     movwf   0x7f             	MOVWF	STK00
0002cb   3001     movlw   0x01             	MOVLW	0x01
0002cc   22ee     call    0x02ee           	CALL	_SSD_SetState
                                           ;	.line	181; "SSD.c"	GPIO_WritePort(SSD_DATA_PORT_DR, SSD_Data[ssd_symbol]);
0002cd   1683     bsf     0x03, 0x5        	BANKSEL	r0x1018
0002ce   1303     bcf     0x03, 0x6        
0002cf   0830     movf    0x30, 0x0        	MOVF	r0x1018,W
0002d0   3e10     addlw   0x10             	ADDLW	(_SSD_Data + 0)
0002d1   00b0     movwf   0x30             	MOVWF	r0x1018
0002d2   3001     movlw   0x01             	MOVLW	high (_SSD_Data + 0)
0002d3   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
0002d4   3e01     addlw   0x01             	ADDLW	0x01
0002d5   00b1     movwf   0x31             	MOVWF	r0x1019
0002d6   0830     movf    0x30, 0x0        	MOVF	r0x1018,W
0002d7   1283     bcf     0x03, 0x5        	BANKSEL	FSR
0002d8   1303     bcf     0x03, 0x6        
0002d9   0084     movwf   0x04             	MOVWF	FSR
0002da   1383     bcf     0x03, 0x7        	BCF	STATUS,7
0002db   1683     bsf     0x03, 0x5        	BANKSEL	r0x1019
0002dc   1303     bcf     0x03, 0x6        
0002dd   1831     btfsc   0x31, 0x0        	BTFSC	r0x1019,0
0002de   1783     bsf     0x03, 0x7        	BSF	STATUS,7
0002df   1283     bcf     0x03, 0x5        	BANKSEL	INDF
0002e0   1303     bcf     0x03, 0x6        
0002e1   0800     movf    0x00, 0x0        	MOVF	INDF,W
0002e2   0088     movwf   0x08             	MOVWF	_PORTD
                                           ;	.line	184; "SSD.c"	SSD_SetState(ssd, SSD_ON);
0002e3   3001     movlw   0x01             	MOVLW	0x01
0002e4   00ff     movwf   0x7f             	MOVWF	STK00
0002e5   1683     bsf     0x03, 0x5        	BANKSEL	r0x1017
0002e6   1303     bcf     0x03, 0x6        
0002e7   082f     movf    0x2f, 0x0        	MOVF	r0x1017,W
0002e8   22ee     call    0x02ee           	CALL	_SSD_SetState
0002e9   0008     return                   	RETURN	
                                           ; exit point of _SSD_Out

                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _SSD_SetDotState	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;; Starting pCode block
                                           _SSD_SetDotState	;Function start
                                           ; 2 exit points
                                           ;	.line	166; "SSD.c"	void SSD_SetDotState(tByte state)
0002ea   1283     bcf     0x03, 0x5        	BANKSEL	_SSD_DotState
0002eb   1703     bsf     0x03, 0x6        
0002ec   00cb     movwf   0x4b             	MOVWF	_SSD_DotState
                                           ;	.line	169; "SSD.c"	SSD_DotState = state;
0002ed   0008     return                   	RETURN	
                                           ; exit point of _SSD_SetDotState

                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _SSD_SetState	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;5 compiler assigned registers:
                                           ;   r0x1013
                                           ;   STK00
                                           ;   r0x1014
                                           ;   r0x1015
                                           ;   r0x1016
                                           ;; Starting pCode block
                                           _SSD_SetState	;Function start
                                           ; 2 exit points
                                           ;	.line	146; "SSD.c"	void SSD_SetState(tSSD ssd, tSSD_State state)
0002ee   1683     bsf     0x03, 0x5        	BANKSEL	r0x1013
0002ef   1303     bcf     0x03, 0x6        
0002f0   00ab     movwf   0x2b             	MOVWF	r0x1013
0002f1   087f     movf    0x7f, 0x0        	MOVF	STK00,W
0002f2   00ac     movwf   0x2c             	MOVWF	r0x1014
                                           ;	.line	149; "SSD.c"	switch (ssd)
0002f3   082b     movf    0x2b, 0x0        	MOVF	r0x1013,W
0002f4   00ad     movwf   0x2d             	MOVWF	r0x1015
0002f5   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
0002f6   2afc     goto    0x02fc           	GOTO	_00179_DS_
0002f7   082b     movf    0x2b, 0x0        	MOVF	r0x1013,W
0002f8   3a01     xorlw   0x01             	XORLW	0x01
0002f9   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
0002fa   2b21     goto    0x0321           	GOTO	_00180_DS_
0002fb   2b30     goto    0x0330           	GOTO	_00183_DS_
                                           _00179_DS_
                                           ;	.line	152; "SSD.c"	GPIO_WritePortPin(SSD_HOURS_UNITS_DR, SSD_HOURS_UNITS_PIN, state);
0002fc   1283     bcf     0x03, 0x5        	BANKSEL	_PORTA
0002fd   1303     bcf     0x03, 0x6        
0002fe   0805     movf    0x05, 0x0        	MOVF	_PORTA,W
0002ff   1683     bsf     0x03, 0x5        	BANKSEL	r0x1013
000300   1303     bcf     0x03, 0x6        
000301   00ab     movwf   0x2b             	MOVWF	r0x1013
000302   12ab     bcf     0x2b, 0x5        	BCF	r0x1013,5
000303   0e2c     swapf   0x2c, 0x0        	SWAPF	r0x1014,W
000304   39f0     andlw   0xf0             	ANDLW	0xf0
000305   00ad     movwf   0x2d             	MOVWF	r0x1015
000306   1003     bcf     0x03, 0x0        	BCF	STATUS,0
000307   0dad     rlf     0x2d, 0x1        	RLF	r0x1015,F
000308   082d     movf    0x2d, 0x0        	MOVF	r0x1015,W
000309   00ae     movwf   0x2e             	MOVWF	r0x1016
00030a   042b     iorwf   0x2b, 0x0        	IORWF	r0x1013,W
00030b   1283     bcf     0x03, 0x5        	BANKSEL	_PORTA
00030c   1303     bcf     0x03, 0x6        
00030d   0085     movwf   0x05             	MOVWF	_PORTA
                                           ;	.line	153; "SSD.c"	GPIO_WritePortPin(SSD_DATA_PORT_DR, GPIO_PIN_7, SSD_DotState);
00030e   0808     movf    0x08, 0x0        	MOVF	_PORTD,W
00030f   1683     bsf     0x03, 0x5        	BANKSEL	r0x1013
000310   1303     bcf     0x03, 0x6        
000311   00ab     movwf   0x2b             	MOVWF	r0x1013
000312   13ab     bcf     0x2b, 0x7        	BCF	r0x1013,7
000313   1283     bcf     0x03, 0x5        	BANKSEL	_SSD_DotState
000314   1703     bsf     0x03, 0x6        
000315   0c4b     rrf     0x4b, 0x0        	RRF	_SSD_DotState,W
000316   1683     bsf     0x03, 0x5        	BANKSEL	r0x1015
000317   1303     bcf     0x03, 0x6        
000318   01ad     clrf    0x2d             	CLRF	r0x1015
000319   0cad     rrf     0x2d, 0x1        	RRF	r0x1015,F
00031a   082d     movf    0x2d, 0x0        	MOVF	r0x1015,W
00031b   00ae     movwf   0x2e             	MOVWF	r0x1016
00031c   042b     iorwf   0x2b, 0x0        	IORWF	r0x1013,W
00031d   1283     bcf     0x03, 0x5        	BANKSEL	_PORTD
00031e   1303     bcf     0x03, 0x6        
00031f   0088     movwf   0x08             	MOVWF	_PORTD
                                           ;	.line	154; "SSD.c"	break;
000320   2b30     goto    0x0330           	GOTO	_00183_DS_
                                           _00180_DS_
                                           ;	.line	156; "SSD.c"	GPIO_WritePortPin(SSD_HOURS_TENS_DR, SSD_HOURS_TENS_PIN, state);
000321   1283     bcf     0x03, 0x5        	BANKSEL	_PORTA
000322   1303     bcf     0x03, 0x6        
000323   0805     movf    0x05, 0x0        	MOVF	_PORTA,W
000324   1683     bsf     0x03, 0x5        	BANKSEL	r0x1013
000325   1303     bcf     0x03, 0x6        
000326   00ab     movwf   0x2b             	MOVWF	r0x1013
000327   122b     bcf     0x2b, 0x4        	BCF	r0x1013,4
000328   0e2c     swapf   0x2c, 0x0        	SWAPF	r0x1014,W
000329   39f0     andlw   0xf0             	ANDLW	0xf0
00032a   00ad     movwf   0x2d             	MOVWF	r0x1015
00032b   00ac     movwf   0x2c             	MOVWF	r0x1014
00032c   042b     iorwf   0x2b, 0x0        	IORWF	r0x1013,W
00032d   1283     bcf     0x03, 0x5        	BANKSEL	_PORTA
00032e   1303     bcf     0x03, 0x6        
00032f   0085     movwf   0x05             	MOVWF	_PORTA
                                           _00183_DS_
                                           ;	.line	161; "SSD.c"	}
000330   0008     return                   	RETURN	
                                           ; exit point of _SSD_SetState

                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _SSD_GetState	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;3 compiler assigned registers:
                                           ;   r0x101A
                                           ;   r0x101B
                                           ;   r0x101C
                                           ;; Starting pCode block
                                           _SSD_GetState	;Function start
                                           ; 2 exit points
                                           ;	.line	125; "SSD.c"	tSSD_State SSD_GetState(tSSD ssd)
000331   1683     bsf     0x03, 0x5        	BANKSEL	r0x101A
000332   1303     bcf     0x03, 0x6        
000333   00a9     movwf   0x29             	MOVWF	r0x101A
                                           ;	.line	127; "SSD.c"	tSSD_State ret = SSD_OFF;
000334   01aa     clrf    0x2a             	CLRF	r0x101B
                                           ;	.line	129; "SSD.c"	switch (ssd)
000335   0829     movf    0x29, 0x0        	MOVF	r0x101A,W
                                           ;;1	MOVWF	r0x101C
000336   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
000337   2b3d     goto    0x033d           	GOTO	_00161_DS_
000338   0829     movf    0x29, 0x0        	MOVF	r0x101A,W
000339   3a01     xorlw   0x01             	XORLW	0x01
00033a   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
00033b   2b4a     goto    0x034a           	GOTO	_00162_DS_
00033c   2b54     goto    0x0354           	GOTO	_00164_DS_
                                           _00161_DS_
                                           ;	.line	132; "SSD.c"	ret = GPIO_ReadPortPin(SSD_HOURS_UNITS_DR, SSD_HOURS_UNITS_PIN);
00033d   3020     movlw   0x20             	MOVLW	0x20
00033e   1283     bcf     0x03, 0x5        	BANKSEL	_PORTA
00033f   1303     bcf     0x03, 0x6        
000340   0505     andwf   0x05, 0x0        	ANDWF	_PORTA,W
000341   1683     bsf     0x03, 0x5        	BANKSEL	r0x101A
000342   1303     bcf     0x03, 0x6        
000343   00a9     movwf   0x29             	MOVWF	r0x101A
000344   0e29     swapf   0x29, 0x0        	SWAPF	r0x101A,W
000345   390f     andlw   0x0f             	ANDLW	0x0f
000346   00aa     movwf   0x2a             	MOVWF	r0x101B
                                           ;;shiftRight_Left2ResultLit:5273: shCount=1, size=1, sign=0, same=1, offr=0
000347   1003     bcf     0x03, 0x0        	BCF	STATUS,0
000348   0caa     rrf     0x2a, 0x1        	RRF	r0x101B,F
                                           ;	.line	133; "SSD.c"	break;
000349   2b54     goto    0x0354           	GOTO	_00164_DS_
                                           _00162_DS_
                                           ;	.line	135; "SSD.c"	ret = GPIO_ReadPortPin(SSD_HOURS_TENS_DR, SSD_HOURS_TENS_PIN);
00034a   3010     movlw   0x10             	MOVLW	0x10
00034b   1283     bcf     0x03, 0x5        	BANKSEL	_PORTA
00034c   1303     bcf     0x03, 0x6        
00034d   0505     andwf   0x05, 0x0        	ANDWF	_PORTA,W
00034e   1683     bsf     0x03, 0x5        	BANKSEL	r0x101A
00034f   1303     bcf     0x03, 0x6        
000350   00a9     movwf   0x29             	MOVWF	r0x101A
000351   0e29     swapf   0x29, 0x0        	SWAPF	r0x101A,W
000352   390f     andlw   0x0f             	ANDLW	0x0f
000353   00aa     movwf   0x2a             	MOVWF	r0x101B
                                           _00164_DS_
                                           ;	.line	142; "SSD.c"	return ret;
000354   1683     bsf     0x03, 0x5        	BANKSEL	r0x101B
000355   1303     bcf     0x03, 0x6        
000356   082a     movf    0x2a, 0x0        	MOVF	r0x101B,W
000357   0008     return                   	RETURN	
                                           ; exit point of _SSD_GetState

                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _SSD_SetValue	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;4 compiler assigned registers:
                                           ;   r0x101D
                                           ;   STK00
                                           ;   r0x101E
                                           ;   r0x101F
                                           ;; Starting pCode block
                                           _SSD_SetValue	;Function start
                                           ; 2 exit points
                                           ;	.line	118; "SSD.c"	void SSD_SetValue(tSSD ssd, tSSD_Symbol ssd_symbol)
000358   1683     bsf     0x03, 0x5        	BANKSEL	r0x101D
000359   1303     bcf     0x03, 0x6        
00035a   00a6     movwf   0x26             	MOVWF	r0x101D
00035b   087f     movf    0x7f, 0x0        	MOVF	STK00,W
00035c   00a7     movwf   0x27             	MOVWF	r0x101E
                                           ;	.line	121; "SSD.c"	SSD_Values[ssd] = ssd_symbol;
00035d   0826     movf    0x26, 0x0        	MOVF	r0x101D,W
00035e   3e44     addlw   0x44             	ADDLW	(_SSD_Values + 0)
00035f   00a6     movwf   0x26             	MOVWF	r0x101D
000360   3001     movlw   0x01             	MOVLW	high (_SSD_Values + 0)
000361   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
000362   3e01     addlw   0x01             	ADDLW	0x01
000363   00a8     movwf   0x28             	MOVWF	r0x101F
000364   0826     movf    0x26, 0x0        	MOVF	r0x101D,W
000365   1283     bcf     0x03, 0x5        	BANKSEL	FSR
000366   1303     bcf     0x03, 0x6        
000367   0084     movwf   0x04             	MOVWF	FSR
000368   1383     bcf     0x03, 0x7        	BCF	STATUS,7
000369   1683     bsf     0x03, 0x5        	BANKSEL	r0x101F
00036a   1303     bcf     0x03, 0x6        
00036b   1828     btfsc   0x28, 0x0        	BTFSC	r0x101F,0
00036c   1783     bsf     0x03, 0x7        	BSF	STATUS,7
00036d   0827     movf    0x27, 0x0        	MOVF	r0x101E,W
00036e   1283     bcf     0x03, 0x5        	BANKSEL	INDF
00036f   1303     bcf     0x03, 0x6        
000370   0080     movwf   0x00             	MOVWF	INDF
000371   0008     return                   	RETURN	
                                           ; exit point of _SSD_SetValue

                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _SSD_GetValue	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;3 compiler assigned registers:
                                           ;   r0x1020
                                           ;   r0x1021
                                           ;   r0x1022
                                           ;; Starting pCode block
                                           _SSD_GetValue	;Function start
                                           ; 2 exit points
                                           ;	.line	111; "SSD.c"	tSSD_Symbol SSD_GetValue(tSSD ssd)
000372   1683     bsf     0x03, 0x5        	BANKSEL	r0x1020
000373   1303     bcf     0x03, 0x6        
000374   00a4     movwf   0x24             	MOVWF	r0x1020
                                           ;	.line	114; "SSD.c"	return SSD_Values[ssd];
000375   3e44     addlw   0x44             	ADDLW	(_SSD_Values + 0)
000376   00a4     movwf   0x24             	MOVWF	r0x1020
000377   3001     movlw   0x01             	MOVLW	high (_SSD_Values + 0)
000378   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
000379   3e01     addlw   0x01             	ADDLW	0x01
00037a   00a5     movwf   0x25             	MOVWF	r0x1021
00037b   0824     movf    0x24, 0x0        	MOVF	r0x1020,W
00037c   1283     bcf     0x03, 0x5        	BANKSEL	FSR
00037d   1303     bcf     0x03, 0x6        
00037e   0084     movwf   0x04             	MOVWF	FSR
00037f   1383     bcf     0x03, 0x7        	BCF	STATUS,7
000380   1683     bsf     0x03, 0x5        	BANKSEL	r0x1021
000381   1303     bcf     0x03, 0x6        
000382   1825     btfsc   0x25, 0x0        	BTFSC	r0x1021,0
000383   1783     bsf     0x03, 0x7        	BSF	STATUS,7
000384   1283     bcf     0x03, 0x5        	BANKSEL	INDF
000385   1303     bcf     0x03, 0x6        
000386   0800     movf    0x00, 0x0        	MOVF	INDF,W
                                           ;;1	MOVWF	r0x1022
000387   0008     return                   	RETURN	
                                           ; exit point of _SSD_GetValue

                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _SSD_Update	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;functions called:
                                           ;   _heaterstate_getstate
                                           ;   _SSD_SetState
                                           ;   _SSD_SetState
                                           ;   _SSD_Out
                                           ;   _heaterstate_getstate
                                           ;   _SSD_SetState
                                           ;   _SSD_SetState
                                           ;   _SSD_Out
                                           ;4 compiler assigned registers:
                                           ;   r0x1023
                                           ;   r0x1024
                                           ;   STK00
                                           ;   r0x1025
                                           ;; Starting pCode block
                                           _SSD_Update	;Function start
                                           ; 2 exit points
                                           ;	.line	72; "SSD.c"	SSD_counter += TMR_TICK_MS;
000388   3014     movlw   0x14             	MOVLW	0x14
000389   1683     bsf     0x03, 0x5        	BANKSEL	_SSD_Update_SSD_counter_1_22
00038a   1303     bcf     0x03, 0x6        
00038b   07b2     addwf   0x32, 0x1        	ADDWF	_SSD_Update_SSD_counter_1_22,F
00038c   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
00038d   0ab3     incf    0x33, 0x1        	INCF	(_SSD_Update_SSD_counter_1_22 + 1),F
                                           ;	.line	74; "SSD.c"	if (SSD_counter != SSD_PERIOD_MS){
00038e   0832     movf    0x32, 0x0        	MOVF	_SSD_Update_SSD_counter_1_22,W
00038f   3a14     xorlw   0x14             	XORLW	0x14
000390   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
000391   2b95     goto    0x0395           	GOTO	_00146_DS_
000392   0833     movf    0x33, 0x0        	MOVF	(_SSD_Update_SSD_counter_1_22 + 1),W
                                           ;	.line	75; "SSD.c"	return;
000393   3a00     xorlw   0x00             	XORLW	0x00
                                           ;	.line	78; "SSD.c"	SSD_counter = 0;
000394   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
                                           _00146_DS_
000395   2be3     goto    0x03e3           	GOTO	_00132_DS_
000396   1683     bsf     0x03, 0x5        	BANKSEL	_SSD_Update_SSD_counter_1_22
000397   1303     bcf     0x03, 0x6        
000398   01b2     clrf    0x32             	CLRF	_SSD_Update_SSD_counter_1_22
000399   01b3     clrf    0x33             	CLRF	(_SSD_Update_SSD_counter_1_22 + 1)
                                           ;	.line	80; "SSD.c"	switch(heaterstate_getstate())
00039a   158a     bsf     0x0a, 0x3        	PAGESEL	_heaterstate_getstate
00039b   120a     bcf     0x0a, 0x4        
00039c   2429     call    0x0429           	CALL	_heaterstate_getstate
00039d   118a     bcf     0x0a, 0x3        	PAGESEL	$
00039e   120a     bcf     0x0a, 0x4        
00039f   1683     bsf     0x03, 0x5        	BANKSEL	r0x1023
0003a0   1303     bcf     0x03, 0x6        
0003a1   00a2     movwf   0x22             	MOVWF	r0x1023
0003a2   00a3     movwf   0x23             	MOVWF	r0x1024
0003a3   0823     movf    0x23, 0x0        	MOVF	r0x1024,W
0003a4   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
0003a5   2bab     goto    0x03ab           	GOTO	_00125_DS_
0003a6   0822     movf    0x22, 0x0        	MOVF	r0x1023,W
0003a7   3a01     xorlw   0x01             	XORLW	0x01
0003a8   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
0003a9   2bbc     goto    0x03bc           	GOTO	_00126_DS_
0003aa   2be3     goto    0x03e3           	GOTO	_00132_DS_
                                           _00125_DS_
                                           ;	.line	84; "SSD.c"	SSD_SetState(SSD_UNITS,SSD_OFF);
0003ab   3000     movlw   0x00             	MOVLW	0x00
0003ac   00ff     movwf   0x7f             	MOVWF	STK00
0003ad   3000     movlw   0x00             	MOVLW	0x00
0003ae   118a     bcf     0x0a, 0x3        	PAGESEL	_SSD_SetState
0003af   120a     bcf     0x0a, 0x4        
0003b0   22ee     call    0x02ee           	CALL	_SSD_SetState
0003b1   118a     bcf     0x0a, 0x3        	PAGESEL	$
0003b2   120a     bcf     0x0a, 0x4        
                                           ;	.line	85; "SSD.c"	SSD_SetState(SSD_TENS,SSD_OFF);
0003b3   3000     movlw   0x00             	MOVLW	0x00
0003b4   00ff     movwf   0x7f             	MOVWF	STK00
0003b5   3001     movlw   0x01             	MOVLW	0x01
0003b6   118a     bcf     0x0a, 0x3        	PAGESEL	_SSD_SetState
0003b7   120a     bcf     0x0a, 0x4        
0003b8   22ee     call    0x02ee           	CALL	_SSD_SetState
0003b9   118a     bcf     0x0a, 0x3        	PAGESEL	$
0003ba   120a     bcf     0x0a, 0x4        
                                           ;	.line	86; "SSD.c"	break;
0003bb   2be3     goto    0x03e3           	GOTO	_00132_DS_
                                           _00126_DS_
                                           ;	.line	91; "SSD.c"	SSD_Out(SSD_current, SSD_Values[SSD_current]);
0003bc   1283     bcf     0x03, 0x5        	BANKSEL	_SSD_current
0003bd   1703     bsf     0x03, 0x6        
0003be   084a     movf    0x4a, 0x0        	MOVF	_SSD_current,W
0003bf   3e44     addlw   0x44             	ADDLW	(_SSD_Values + 0)
0003c0   1683     bsf     0x03, 0x5        	BANKSEL	r0x1023
0003c1   1303     bcf     0x03, 0x6        
0003c2   00a2     movwf   0x22             	MOVWF	r0x1023
0003c3   3001     movlw   0x01             	MOVLW	high (_SSD_Values + 0)
0003c4   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
0003c5   3e01     addlw   0x01             	ADDLW	0x01
0003c6   00a3     movwf   0x23             	MOVWF	r0x1024
0003c7   0822     movf    0x22, 0x0        	MOVF	r0x1023,W
0003c8   1283     bcf     0x03, 0x5        	BANKSEL	FSR
0003c9   1303     bcf     0x03, 0x6        
0003ca   0084     movwf   0x04             	MOVWF	FSR
0003cb   1383     bcf     0x03, 0x7        	BCF	STATUS,7
0003cc   1683     bsf     0x03, 0x5        	BANKSEL	r0x1024
0003cd   1303     bcf     0x03, 0x6        
0003ce   1823     btfsc   0x23, 0x0        	BTFSC	r0x1024,0
0003cf   1783     bsf     0x03, 0x7        	BSF	STATUS,7
0003d0   1283     bcf     0x03, 0x5        	BANKSEL	INDF
0003d1   1303     bcf     0x03, 0x6        
0003d2   0800     movf    0x00, 0x0        	MOVF	INDF,W
                                           ;;1	MOVWF	r0x1025
0003d3   00ff     movwf   0x7f             	MOVWF	STK00
0003d4   1283     bcf     0x03, 0x5        	BANKSEL	_SSD_current
0003d5   1703     bsf     0x03, 0x6        
0003d6   084a     movf    0x4a, 0x0        	MOVF	_SSD_current,W
0003d7   22c0     call    0x02c0           	CALL	_SSD_Out
                                           ;	.line	93; "SSD.c"	if (SSD_current == SSD_TENS)
0003d8   1283     bcf     0x03, 0x5        	BANKSEL	_SSD_current
0003d9   1703     bsf     0x03, 0x6        
0003da   084a     movf    0x4a, 0x0        	MOVF	_SSD_current,W
0003db   3a01     xorlw   0x01             	XORLW	0x01
0003dc   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
0003dd   2be0     goto    0x03e0           	GOTO	_00128_DS_
                                           ;	.line	95; "SSD.c"	SSD_current = SSD_UNITS;
0003de   01ca     clrf    0x4a             	CLRF	_SSD_current
0003df   2be3     goto    0x03e3           	GOTO	_00132_DS_
                                           _00128_DS_
                                           ;	.line	98; "SSD.c"	SSD_current++;
0003e0   1283     bcf     0x03, 0x5        	BANKSEL	_SSD_current
0003e1   1703     bsf     0x03, 0x6        
0003e2   0aca     incf    0x4a, 0x1        	INCF	_SSD_current,F
                                           _00132_DS_
                                           ;	.line	106; "SSD.c"	}
0003e3   0008     return                   	RETURN	
                                           ; exit point of _SSD_Update

                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _SSD_Init	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;functions called:
                                           ;   _SSD_Out
                                           ;   _SSD_SetValue
                                           ;   _SSD_SetValue
                                           ;   _SSD_SetState
                                           ;   _SSD_Out
                                           ;   _SSD_SetValue
                                           ;   _SSD_SetValue
                                           ;   _SSD_SetState
                                           ;3 compiler assigned registers:
                                           ;   r0x1026
                                           ;   STK00
                                           ;   r0x1027
                                           ;; Starting pCode block
                                           _SSD_Init	;Function start
                                           ; 2 exit points
                                           ;	.line	40; "SSD.c"	void SSD_Init(tSSD ssd)
0003e4   1683     bsf     0x03, 0x5        	BANKSEL	r0x1026
0003e5   1303     bcf     0x03, 0x6        
0003e6   00a0     movwf   0x20             	MOVWF	r0x1026
                                           ;	.line	44; "SSD.c"	GPIO_InitPort(SSD_DATA_PORT_CR, GPIO_OUT);
0003e7   1683     bsf     0x03, 0x5        	BANKSEL	_TRISD
0003e8   1303     bcf     0x03, 0x6        
0003e9   0188     clrf    0x08             	CLRF	_TRISD
                                           ;	.line	45; "SSD.c"	SSD_Out(ssd, SSD_NULL);
0003ea   300a     movlw   0x0a             	MOVLW	0x0a
0003eb   00ff     movwf   0x7f             	MOVWF	STK00
0003ec   1683     bsf     0x03, 0x5        	BANKSEL	r0x1026
0003ed   1303     bcf     0x03, 0x6        
0003ee   0820     movf    0x20, 0x0        	MOVF	r0x1026,W
0003ef   22c0     call    0x02c0           	CALL	_SSD_Out
                                           ;	.line	48; "SSD.c"	switch (ssd)
0003f0   1683     bsf     0x03, 0x5        	BANKSEL	r0x1026
0003f1   1303     bcf     0x03, 0x6        
0003f2   0820     movf    0x20, 0x0        	MOVF	r0x1026,W
0003f3   00a1     movwf   0x21             	MOVWF	r0x1027
0003f4   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
0003f5   2bfb     goto    0x03fb           	GOTO	_00105_DS_
0003f6   0820     movf    0x20, 0x0        	MOVF	r0x1026,W
0003f7   3a01     xorlw   0x01             	XORLW	0x01
0003f8   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
0003f9   2c0f     goto    0x040f           	GOTO	_00106_DS_
0003fa   2c22     goto    0x0422           	GOTO	_00108_DS_
                                           _00105_DS_
                                           ;	.line	51; "SSD.c"	GPIO_InitPortPin(SSD_HOURS_UNITS_CR, SSD_HOURS_UNITS_PIN, GPIO_OUT);
0003fb   1683     bsf     0x03, 0x5        	BANKSEL	_TRISA
0003fc   1303     bcf     0x03, 0x6        
0003fd   0805     movf    0x05, 0x0        	MOVF	_TRISA,W
0003fe   1683     bsf     0x03, 0x5        	BANKSEL	r0x1027
0003ff   1303     bcf     0x03, 0x6        
000400   00a1     movwf   0x21             	MOVWF	r0x1027
000401   30df     movlw   0xdf             	MOVLW	0xdf
000402   0521     andwf   0x21, 0x0        	ANDWF	r0x1027,W
000403   1683     bsf     0x03, 0x5        	BANKSEL	_TRISA
000404   1303     bcf     0x03, 0x6        
000405   0085     movwf   0x05             	MOVWF	_TRISA
                                           ;	.line	52; "SSD.c"	SSD_SetValue(SSD_UNITS,SSD_0);
000406   3000     movlw   0x00             	MOVLW	0x00
000407   00ff     movwf   0x7f             	MOVWF	STK00
000408   3000     movlw   0x00             	MOVLW	0x00
000409   118a     bcf     0x0a, 0x3        	PAGESEL	_SSD_SetValue
00040a   120a     bcf     0x0a, 0x4        
00040b   2358     call    0x0358           	CALL	_SSD_SetValue
00040c   118a     bcf     0x0a, 0x3        	PAGESEL	$
00040d   120a     bcf     0x0a, 0x4        
                                           ;	.line	53; "SSD.c"	break;
00040e   2c22     goto    0x0422           	GOTO	_00108_DS_
                                           _00106_DS_
                                           ;	.line	55; "SSD.c"	GPIO_InitPortPin(SSD_HOURS_TENS_CR, SSD_HOURS_TENS_PIN, GPIO_OUT);
00040f   1683     bsf     0x03, 0x5        	BANKSEL	_TRISA
000410   1303     bcf     0x03, 0x6        
000411   0805     movf    0x05, 0x0        	MOVF	_TRISA,W
000412   1683     bsf     0x03, 0x5        	BANKSEL	r0x1027
000413   1303     bcf     0x03, 0x6        
000414   00a1     movwf   0x21             	MOVWF	r0x1027
000415   30ef     movlw   0xef             	MOVLW	0xef
000416   0521     andwf   0x21, 0x0        	ANDWF	r0x1027,W
000417   1683     bsf     0x03, 0x5        	BANKSEL	_TRISA
000418   1303     bcf     0x03, 0x6        
000419   0085     movwf   0x05             	MOVWF	_TRISA
                                           ;	.line	56; "SSD.c"	SSD_SetValue(SSD_TENS,SSD_0);
00041a   3000     movlw   0x00             	MOVLW	0x00
00041b   00ff     movwf   0x7f             	MOVWF	STK00
00041c   3001     movlw   0x01             	MOVLW	0x01
00041d   118a     bcf     0x0a, 0x3        	PAGESEL	_SSD_SetValue
00041e   120a     bcf     0x0a, 0x4        
00041f   2358     call    0x0358           	CALL	_SSD_SetValue
000420   118a     bcf     0x0a, 0x3        	PAGESEL	$
000421   120a     bcf     0x0a, 0x4        
                                           _00108_DS_
                                           ;	.line	62; "SSD.c"	SSD_SetState(ssd, SSD_OFF);
000422   3000     movlw   0x00             	MOVLW	0x00
000423   00ff     movwf   0x7f             	MOVWF	STK00
000424   1683     bsf     0x03, 0x5        	BANKSEL	r0x1026
000425   1303     bcf     0x03, 0x6        
000426   0820     movf    0x20, 0x0        	MOVF	r0x1026,W
000427   118a     bcf     0x0a, 0x3        	PAGESEL	_SSD_SetState
000428   120a     bcf     0x0a, 0x4        
000429   22ee     call    0x02ee           	CALL	_SSD_SetState
00042a   118a     bcf     0x0a, 0x3        	PAGESEL	$
00042b   120a     bcf     0x0a, 0x4        
00042c   0008     return                   	RETURN	
                                           ; exit point of _SSD_Init


                                           ;	code size estimation:
                                           ;	  233+   66 =   299 instructions (  730 byte)

                                           	end
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.5.0 #9253 (Jun 20 2015) (MINGW32)
                                           ; This file was generated Fri Jul 03 11:35:52 2020
                                           ;--------------------------------------------------------
                                           ; PIC port for the 14-bit core
                                           ;--------------------------------------------------------
                                           ;	.file	"SW.c"
                                           	list	p=16f877a
                                           	radix dec
                                           	include "p16f877a.inc"
                                                   LIST

                                           ;==========================================================================
                                           ; Build date : Oct 21 2015
                                           ;  MPASM PIC16F877A processor include
                                           ; 
                                           ;  (c) Copyright 1999-2015 Microchip Technology, All rights reserved
                                           ;==========================================================================

                                                   NOLIST
                                           ;--------------------------------------------------------
                                           ; external declarations
                                           ;--------------------------------------------------------
                                           	extern	_TMR_Init
                                           	extern	_TMR_Start
                                           	extern	_TMR_CheckOverFlow
                                           	extern	_TMR_Stop
                                           	extern	_TMR_Update
                                           	extern	_STATUSbits
                                           	extern	_PORTAbits
                                           	extern	_PORTBbits
                                           	extern	_PORTCbits
                                           	extern	_PORTDbits
                                           	extern	_PORTEbits
                                           	extern	_INTCONbits
                                           	extern	_PIR1bits
                                           	extern	_PIR2bits
                                           	extern	_T1CONbits
                                           	extern	_T2CONbits
                                           	extern	_SSPCONbits
                                           	extern	_CCP1CONbits
                                           	extern	_RCSTAbits
                                           	extern	_CCP2CONbits
                                           	extern	_ADCON0bits
                                           	extern	_OPTION_REGbits
                                           	extern	_TRISAbits
                                           	extern	_TRISBbits
                                           	extern	_TRISCbits
                                           	extern	_TRISDbits
                                           	extern	_TRISEbits
                                           	extern	_PIE1bits
                                           	extern	_PIE2bits
                                           	extern	_PCONbits
                                           	extern	_SSPCON2bits
                                           	extern	_SSPSTATbits
                                           	extern	_TXSTAbits
                                           	extern	_CMCONbits
                                           	extern	_CVRCONbits
                                           	extern	_ADCON1bits
                                           	extern	_EECON1bits
                                           	extern	_INDF
                                           	extern	_TMR0
                                           	extern	_PCL
                                           	extern	_STATUS
                                           	extern	_FSR
                                           	extern	_PORTA
                                           	extern	_PORTB
                                           	extern	_PORTC
                                           	extern	_PORTD
                                           	extern	_PORTE
                                           	extern	_PCLATH
                                           	extern	_INTCON
                                           	extern	_PIR1
                                           	extern	_PIR2
                                           	extern	_TMR1
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_T1CON
                                           	extern	_TMR2
                                           	extern	_T2CON
                                           	extern	_SSPBUF
                                           	extern	_SSPCON
                                           	extern	_CCPR1
                                           	extern	_CCPR1L
                                           	extern	_CCPR1H
                                           	extern	_CCP1CON
                                           	extern	_RCSTA
                                           	extern	_TXREG
                                           	extern	_RCREG
                                           	extern	_CCPR2
                                           	extern	_CCPR2L
                                           	extern	_CCPR2H
                                           	extern	_CCP2CON
                                           	extern	_ADRESH
                                           	extern	_ADCON0
                                           	extern	_OPTION_REG
                                           	extern	_TRISA
                                           	extern	_TRISB
                                           	extern	_TRISC
                                           	extern	_TRISD
                                           	extern	_TRISE
                                           	extern	_PIE1
                                           	extern	_PIE2
                                           	extern	_PCON
                                           	extern	_SSPCON2
                                           	extern	_PR2
                                           	extern	_SSPADD
                                           	extern	_SSPSTAT
                                           	extern	_TXSTA
                                           	extern	_SPBRG
                                           	extern	_CMCON
                                           	extern	_CVRCON
                                           	extern	_ADRESL
                                           	extern	_ADCON1
                                           	extern	_EEDATA
                                           	extern	_EEADR
                                           	extern	_EEDATH
                                           	extern	_EEADRH
                                           	extern	_EECON1
                                           	extern	_EECON2
                                           	extern	__mulchar

                                           	extern PSAVE
                                           	extern SSAVE
                                           	extern WSAVE
                                           	extern STK12
                                           	extern STK11
                                           	extern STK10
                                           	extern STK09
                                           	extern STK08
                                           	extern STK07
                                           	extern STK06
                                           	extern STK05
                                           	extern STK04
                                           	extern STK03
                                           	extern STK02
                                           	extern STK01
                                           	extern STK00
                                           ;--------------------------------------------------------
                                           ; global declarations
                                           ;--------------------------------------------------------
                                           	global	_SW_Update
                                           	global	_SW_GetState
                                           	global	_SW_Init

                                           ;--------------------------------------------------------
                                           ; global definitions
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; absolute symbol definitions
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; compiler-defined variables
                                           ;--------------------------------------------------------
                                           UDL_SW_0	udata
                                           r0x1017	res	1
                                           r0x1018	res	1
                                           r0x1019	res	1
                                           r0x101A	res	1
                                           r0x101B	res	1
                                           r0x1013	res	1
                                           r0x1014	res	1
                                           r0x1015	res	1
                                           r0x1016	res	1
                                           r0x100B	res	1
                                           r0x100C	res	1
                                           r0x100D	res	1
                                           r0x100E	res	1
                                           r0x100F	res	1
                                           r0x1010	res	1
                                           r0x1011	res	1
                                           r0x1012	res	1
                                           _SWs_Info	res	9
                                           _SW_Update_SW_counter_1_15	res	2
                                           ;--------------------------------------------------------
                                           ; initialized data
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; overlayable items in internal ram 
                                           ;--------------------------------------------------------
                                           ;	udata_ovr
                                           ;--------------------------------------------------------
                                           ; code
                                           ;--------------------------------------------------------
                                           code_SW	code
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _SW_Update	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;functions called:
                                           ;   __mulchar
                                           ;   __mulchar
                                           ;   __mulchar
                                           ;   __mulchar
                                           ;9 compiler assigned registers:
                                           ;   r0x100B
                                           ;   STK00
                                           ;   r0x100C
                                           ;   r0x100D
                                           ;   r0x100E
                                           ;   r0x100F
                                           ;   r0x1010
                                           ;   r0x1011
                                           ;   r0x1012
                                           ;; Starting pCode block
                                           _SW_Update	;Function start
                                           ; 2 exit points
                                           ;	.line	70; "SW.c"	SW_counter += TMR_TICK_MS;
000057   3014     movlw   0x14             	MOVLW	0x14
000058   1283     bcf     0x03, 0x5        	BANKSEL	_SW_Update_SW_counter_1_15
000059   1303     bcf     0x03, 0x6        
00005a   07e7     addwf   0x67, 0x1        	ADDWF	_SW_Update_SW_counter_1_15,F
00005b   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
00005c   0ae8     incf    0x68, 0x1        	INCF	(_SW_Update_SW_counter_1_15 + 1),F
                                           ;	.line	73; "SW.c"	if (SW_counter != SW_PERIOD_MS){
00005d   0867     movf    0x67, 0x0        	MOVF	_SW_Update_SW_counter_1_15,W
00005e   3a14     xorlw   0x14             	XORLW	0x14
00005f   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
000060   2864     goto    0x0064           	GOTO	_00183_DS_
000061   0868     movf    0x68, 0x0        	MOVF	(_SW_Update_SW_counter_1_15 + 1),W
                                           ;	.line	74; "SW.c"	return;
000062   3a00     xorlw   0x00             	XORLW	0x00
                                           ;	.line	77; "SW.c"	SW_counter = 0;
000063   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
                                           _00183_DS_
000064   2a0e     goto    0x020e           	GOTO	_00144_DS_
000065   1283     bcf     0x03, 0x5        	BANKSEL	_SW_Update_SW_counter_1_15
000066   1303     bcf     0x03, 0x6        
000067   01e7     clrf    0x67             	CLRF	_SW_Update_SW_counter_1_15
000068   01e8     clrf    0x68             	CLRF	(_SW_Update_SW_counter_1_15 + 1)
                                           ;	.line	80; "SW.c"	for (index = SW_PLUS; index < N_SWITCHES; index++)
000069   1283     bcf     0x03, 0x5        	BANKSEL	r0x100B
00006a   1303     bcf     0x03, 0x6        
00006b   01d6     clrf    0x56             	CLRF	r0x100B
                                           _00142_DS_
                                           ;	.line	84; "SW.c"	SWs_Info[index].sw_samples[0] = SWs_Info[index].sw_samples[1];
00006c   3003     movlw   0x03             	MOVLW	0x03
00006d   00ff     movwf   0x7f             	MOVWF	STK00
00006e   1283     bcf     0x03, 0x5        	BANKSEL	r0x100B
00006f   1303     bcf     0x03, 0x6        
000070   0856     movf    0x56, 0x0        	MOVF	r0x100B,W
000071   158a     bsf     0x0a, 0x3        	PAGESEL	__mulchar
000072   120a     bcf     0x0a, 0x4        
000073   262e     call    0x062e           	CALL	__mulchar
000074   118a     bcf     0x0a, 0x3        	PAGESEL	$
000075   120a     bcf     0x0a, 0x4        
000076   1283     bcf     0x03, 0x5        	BANKSEL	r0x100C
000077   1303     bcf     0x03, 0x6        
000078   00d7     movwf   0x57             	MOVWF	r0x100C
000079   01d8     clrf    0x58             	CLRF	r0x100D
00007a   0857     movf    0x57, 0x0        	MOVF	r0x100C,W
00007b   3e5e     addlw   0x5e             	ADDLW	(_SWs_Info + 0)
00007c   00d9     movwf   0x59             	MOVWF	r0x100E
00007d   3000     movlw   0x00             	MOVLW	high (_SWs_Info + 0)
00007e   00da     movwf   0x5a             	MOVWF	r0x100F
00007f   3000     movlw   0x00             	MOVLW	0x00
000080   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
000081   0f58     incfsz  0x58, 0x0        	INCFSZ	r0x100D,W
000082   07da     addwf   0x5a, 0x1        	ADDWF	r0x100F,F
000083   0857     movf    0x57, 0x0        	MOVF	r0x100C,W
000084   3e5e     addlw   0x5e             	ADDLW	(_SWs_Info + 0)
000085   00d7     movwf   0x57             	MOVWF	r0x100C
000086   0858     movf    0x58, 0x0        	MOVF	r0x100D,W
000087   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
000088   0f58     incfsz  0x58, 0x0        	INCFSZ	r0x100D,W
000089   3e00     addlw   0x00             	ADDLW	high (_SWs_Info + 0)
00008a   00d8     movwf   0x58             	MOVWF	r0x100D
00008b   0ad7     incf    0x57, 0x1        	INCF	r0x100C,F
00008c   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
00008d   0ad8     incf    0x58, 0x1        	INCF	r0x100D,F
00008e   0857     movf    0x57, 0x0        	MOVF	r0x100C,W
00008f   1283     bcf     0x03, 0x5        	BANKSEL	FSR
000090   1303     bcf     0x03, 0x6        
000091   0084     movwf   0x04             	MOVWF	FSR
000092   1383     bcf     0x03, 0x7        	BCF	STATUS,7
000093   1283     bcf     0x03, 0x5        	BANKSEL	r0x100D
000094   1303     bcf     0x03, 0x6        
000095   1858     btfsc   0x58, 0x0        	BTFSC	r0x100D,0
000096   1783     bsf     0x03, 0x7        	BSF	STATUS,7
000097   1283     bcf     0x03, 0x5        	BANKSEL	INDF
000098   1303     bcf     0x03, 0x6        
000099   0800     movf    0x00, 0x0        	MOVF	INDF,W
00009a   1283     bcf     0x03, 0x5        	BANKSEL	r0x1010
00009b   1303     bcf     0x03, 0x6        
00009c   00db     movwf   0x5b             	MOVWF	r0x1010
00009d   0859     movf    0x59, 0x0        	MOVF	r0x100E,W
00009e   1283     bcf     0x03, 0x5        	BANKSEL	FSR
00009f   1303     bcf     0x03, 0x6        
0000a0   0084     movwf   0x04             	MOVWF	FSR
0000a1   1383     bcf     0x03, 0x7        	BCF	STATUS,7
0000a2   1283     bcf     0x03, 0x5        	BANKSEL	r0x100F
0000a3   1303     bcf     0x03, 0x6        
0000a4   185a     btfsc   0x5a, 0x0        	BTFSC	r0x100F,0
0000a5   1783     bsf     0x03, 0x7        	BSF	STATUS,7
0000a6   085b     movf    0x5b, 0x0        	MOVF	r0x1010,W
0000a7   1283     bcf     0x03, 0x5        	BANKSEL	INDF
0000a8   1303     bcf     0x03, 0x6        
0000a9   0080     movwf   0x00             	MOVWF	INDF
                                           ;	.line	86; "SW.c"	if (index == SW_PLUS)
0000aa   1283     bcf     0x03, 0x5        	BANKSEL	r0x100B
0000ab   1303     bcf     0x03, 0x6        
0000ac   0856     movf    0x56, 0x0        	MOVF	r0x100B,W
0000ad   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
0000ae   28c9     goto    0x00c9           	GOTO	_00123_DS_
                                           ;	.line	88; "SW.c"	SWs_Info[index].sw_samples[1] = GPIO_ReadPortPin(SW_PLUS_PORT_DR, SW_PLUS_PIN);
0000af   3004     movlw   0x04             	MOVLW	0x04
0000b0   1283     bcf     0x03, 0x5        	BANKSEL	_PORTB
0000b1   1303     bcf     0x03, 0x6        
0000b2   0506     andwf   0x06, 0x0        	ANDWF	_PORTB,W
0000b3   1283     bcf     0x03, 0x5        	BANKSEL	r0x100E
0000b4   1303     bcf     0x03, 0x6        
0000b5   00d9     movwf   0x59             	MOVWF	r0x100E
                                           ;;shiftRight_Left2ResultLit:5273: shCount=1, size=1, sign=0, same=0, offr=0
0000b6   1003     bcf     0x03, 0x0        	BCF	STATUS,0
0000b7   0c59     rrf     0x59, 0x0        	RRF	r0x100E,W
0000b8   00da     movwf   0x5a             	MOVWF	r0x100F
                                           ;;shiftRight_Left2ResultLit:5273: shCount=1, size=1, sign=0, same=1, offr=0
0000b9   1003     bcf     0x03, 0x0        	BCF	STATUS,0
0000ba   0cda     rrf     0x5a, 0x1        	RRF	r0x100F,F
0000bb   0857     movf    0x57, 0x0        	MOVF	r0x100C,W
0000bc   1283     bcf     0x03, 0x5        	BANKSEL	FSR
0000bd   1303     bcf     0x03, 0x6        
0000be   0084     movwf   0x04             	MOVWF	FSR
0000bf   1383     bcf     0x03, 0x7        	BCF	STATUS,7
0000c0   1283     bcf     0x03, 0x5        	BANKSEL	r0x100D
0000c1   1303     bcf     0x03, 0x6        
0000c2   1858     btfsc   0x58, 0x0        	BTFSC	r0x100D,0
0000c3   1783     bsf     0x03, 0x7        	BSF	STATUS,7
0000c4   085a     movf    0x5a, 0x0        	MOVF	r0x100F,W
0000c5   1283     bcf     0x03, 0x5        	BANKSEL	INDF
0000c6   1303     bcf     0x03, 0x6        
0000c7   0080     movwf   0x00             	MOVWF	INDF
0000c8   2902     goto    0x0102           	GOTO	_00124_DS_
                                           _00123_DS_
                                           ;	.line	89; "SW.c"	} else if (index == SW_MINUS)
0000c9   1283     bcf     0x03, 0x5        	BANKSEL	r0x100B
0000ca   1303     bcf     0x03, 0x6        
0000cb   0856     movf    0x56, 0x0        	MOVF	r0x100B,W
0000cc   3a01     xorlw   0x01             	XORLW	0x01
0000cd   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
0000ce   28e7     goto    0x00e7           	GOTO	_00120_DS_
                                           ;	.line	91; "SW.c"	SWs_Info[index].sw_samples[1] = GPIO_ReadPortPin(SW_MINUS_PORT_DR, SW_MINUS_PIN);
0000cf   3002     movlw   0x02             	MOVLW	0x02
0000d0   1283     bcf     0x03, 0x5        	BANKSEL	_PORTB
0000d1   1303     bcf     0x03, 0x6        
0000d2   0506     andwf   0x06, 0x0        	ANDWF	_PORTB,W
0000d3   1283     bcf     0x03, 0x5        	BANKSEL	r0x100E
0000d4   1303     bcf     0x03, 0x6        
0000d5   00d9     movwf   0x59             	MOVWF	r0x100E
                                           ;;shiftRight_Left2ResultLit:5273: shCount=1, size=1, sign=0, same=0, offr=0
0000d6   1003     bcf     0x03, 0x0        	BCF	STATUS,0
0000d7   0c59     rrf     0x59, 0x0        	RRF	r0x100E,W
0000d8   00da     movwf   0x5a             	MOVWF	r0x100F
0000d9   0857     movf    0x57, 0x0        	MOVF	r0x100C,W
0000da   1283     bcf     0x03, 0x5        	BANKSEL	FSR
0000db   1303     bcf     0x03, 0x6        
0000dc   0084     movwf   0x04             	MOVWF	FSR
0000dd   1383     bcf     0x03, 0x7        	BCF	STATUS,7
0000de   1283     bcf     0x03, 0x5        	BANKSEL	r0x100D
0000df   1303     bcf     0x03, 0x6        
0000e0   1858     btfsc   0x58, 0x0        	BTFSC	r0x100D,0
0000e1   1783     bsf     0x03, 0x7        	BSF	STATUS,7
0000e2   085a     movf    0x5a, 0x0        	MOVF	r0x100F,W
0000e3   1283     bcf     0x03, 0x5        	BANKSEL	INDF
0000e4   1303     bcf     0x03, 0x6        
0000e5   0080     movwf   0x00             	MOVWF	INDF
0000e6   2902     goto    0x0102           	GOTO	_00124_DS_
                                           _00120_DS_
                                           ;	.line	92; "SW.c"	} else if (index == SW_ONOFF)
0000e7   1283     bcf     0x03, 0x5        	BANKSEL	r0x100B
0000e8   1303     bcf     0x03, 0x6        
0000e9   0856     movf    0x56, 0x0        	MOVF	r0x100B,W
0000ea   3a02     xorlw   0x02             	XORLW	0x02
0000eb   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
0000ec   2902     goto    0x0102           	GOTO	_00124_DS_
                                           ;	.line	94; "SW.c"	SWs_Info[index].sw_samples[1] = GPIO_ReadPortPin(SW_ONOFF_PORT_DR,SW_ONOFF_PIN);
0000ed   3001     movlw   0x01             	MOVLW	0x01
0000ee   1283     bcf     0x03, 0x5        	BANKSEL	_PORTB
0000ef   1303     bcf     0x03, 0x6        
0000f0   0506     andwf   0x06, 0x0        	ANDWF	_PORTB,W
0000f1   1283     bcf     0x03, 0x5        	BANKSEL	r0x100E
0000f2   1303     bcf     0x03, 0x6        
0000f3   00d9     movwf   0x59             	MOVWF	r0x100E
0000f4   00da     movwf   0x5a             	MOVWF	r0x100F
0000f5   0857     movf    0x57, 0x0        	MOVF	r0x100C,W
0000f6   1283     bcf     0x03, 0x5        	BANKSEL	FSR
0000f7   1303     bcf     0x03, 0x6        
0000f8   0084     movwf   0x04             	MOVWF	FSR
0000f9   1383     bcf     0x03, 0x7        	BCF	STATUS,7
0000fa   1283     bcf     0x03, 0x5        	BANKSEL	r0x100D
0000fb   1303     bcf     0x03, 0x6        
0000fc   1858     btfsc   0x58, 0x0        	BTFSC	r0x100D,0
0000fd   1783     bsf     0x03, 0x7        	BSF	STATUS,7
0000fe   085a     movf    0x5a, 0x0        	MOVF	r0x100F,W
0000ff   1283     bcf     0x03, 0x5        	BANKSEL	INDF
000100   1303     bcf     0x03, 0x6        
000101   0080     movwf   0x00             	MOVWF	INDF
                                           _00124_DS_
                                           ;	.line	103; "SW.c"	switch(SWs_Info[index].sw_state)
000102   3003     movlw   0x03             	MOVLW	0x03
000103   00ff     movwf   0x7f             	MOVWF	STK00
000104   1283     bcf     0x03, 0x5        	BANKSEL	r0x100B
000105   1303     bcf     0x03, 0x6        
000106   0856     movf    0x56, 0x0        	MOVF	r0x100B,W
000107   158a     bsf     0x0a, 0x3        	PAGESEL	__mulchar
000108   120a     bcf     0x0a, 0x4        
000109   262e     call    0x062e           	CALL	__mulchar
00010a   118a     bcf     0x0a, 0x3        	PAGESEL	$
00010b   120a     bcf     0x0a, 0x4        
00010c   1283     bcf     0x03, 0x5        	BANKSEL	r0x100C
00010d   1303     bcf     0x03, 0x6        
00010e   00d7     movwf   0x57             	MOVWF	r0x100C
00010f   01d8     clrf    0x58             	CLRF	r0x100D
000110   0857     movf    0x57, 0x0        	MOVF	r0x100C,W
000111   3e5e     addlw   0x5e             	ADDLW	(_SWs_Info + 0)
000112   00d7     movwf   0x57             	MOVWF	r0x100C
000113   3000     movlw   0x00             	MOVLW	0x00
000114   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
000115   0f58     incfsz  0x58, 0x0        	INCFSZ	r0x100D,W
000116   3e00     addlw   0x00             	ADDLW	high (_SWs_Info + 0)
000117   00d8     movwf   0x58             	MOVWF	r0x100D
000118   3002     movlw   0x02             	MOVLW	0x02
000119   0757     addwf   0x57, 0x0        	ADDWF	r0x100C,W
00011a   00d9     movwf   0x59             	MOVWF	r0x100E
00011b   01da     clrf    0x5a             	CLRF	r0x100F
00011c   0dda     rlf     0x5a, 0x1        	RLF	r0x100F,F
00011d   0858     movf    0x58, 0x0        	MOVF	r0x100D,W
00011e   07da     addwf   0x5a, 0x1        	ADDWF	r0x100F,F
00011f   0859     movf    0x59, 0x0        	MOVF	r0x100E,W
000120   1283     bcf     0x03, 0x5        	BANKSEL	FSR
000121   1303     bcf     0x03, 0x6        
000122   0084     movwf   0x04             	MOVWF	FSR
000123   1383     bcf     0x03, 0x7        	BCF	STATUS,7
000124   1283     bcf     0x03, 0x5        	BANKSEL	r0x100F
000125   1303     bcf     0x03, 0x6        
000126   185a     btfsc   0x5a, 0x0        	BTFSC	r0x100F,0
000127   1783     bsf     0x03, 0x7        	BSF	STATUS,7
000128   1283     bcf     0x03, 0x5        	BANKSEL	INDF
000129   1303     bcf     0x03, 0x6        
00012a   0800     movf    0x00, 0x0        	MOVF	INDF,W
00012b   1283     bcf     0x03, 0x5        	BANKSEL	r0x1010
00012c   1303     bcf     0x03, 0x6        
00012d   00db     movwf   0x5b             	MOVWF	r0x1010
                                           ;;swapping arguments (AOP_TYPEs 1/2)
                                           ;;unsigned compare: left >= lit(0x4=4), size=1
00012e   3004     movlw   0x04             	MOVLW	0x04
00012f   025b     subwf   0x5b, 0x0        	SUBWF	r0x1010,W
000130   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
000131   2a07     goto    0x0207           	GOTO	_00143_DS_
                                           ;;genSkipc:3247: created from rifx:027A5E04
000132   3001     movlw   0x01             	MOVLW	HIGH(_00185_DS_)
000133   1283     bcf     0x03, 0x5        	BANKSEL	PCLATH
000134   1303     bcf     0x03, 0x6        
000135   008a     movwf   0x0a             	MOVWF	PCLATH
000136   3040     movlw   0x40             	MOVLW	_00185_DS_
000137   1283     bcf     0x03, 0x5        	BANKSEL	r0x1010
000138   1303     bcf     0x03, 0x6        
000139   075b     addwf   0x5b, 0x0        	ADDWF	r0x1010,W
00013a   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
00013b   293f     goto    0x013f           	GOTO	_00001_DS_
00013c   1283     bcf     0x03, 0x5        	BANKSEL	PCLATH
00013d   1303     bcf     0x03, 0x6        
00013e   0a8a     incf    0x0a, 0x1        	INCF	PCLATH,F
                                           _00001_DS_
00013f   0082     movwf   0x02             	MOVWF	PCL
                                           _00185_DS_
000140   2944     goto    0x0144           	GOTO	_00125_DS_
000141   297f     goto    0x017f           	GOTO	_00129_DS_
000142   29a8     goto    0x01a8           	GOTO	_00132_DS_
000143   29e3     goto    0x01e3           	GOTO	_00136_DS_
                                           _00125_DS_
                                           ;	.line	108; "SW.c"	if ((SWs_Info[index].sw_samples[0] == SW_PRESSED_LEVEL) &&
000144   1283     bcf     0x03, 0x5        	BANKSEL	r0x100C
000145   1303     bcf     0x03, 0x6        
000146   0857     movf    0x57, 0x0        	MOVF	r0x100C,W
000147   1283     bcf     0x03, 0x5        	BANKSEL	FSR
000148   1303     bcf     0x03, 0x6        
000149   0084     movwf   0x04             	MOVWF	FSR
00014a   1383     bcf     0x03, 0x7        	BCF	STATUS,7
00014b   1283     bcf     0x03, 0x5        	BANKSEL	r0x100D
00014c   1303     bcf     0x03, 0x6        
00014d   1858     btfsc   0x58, 0x0        	BTFSC	r0x100D,0
00014e   1783     bsf     0x03, 0x7        	BSF	STATUS,7
00014f   1283     bcf     0x03, 0x5        	BANKSEL	INDF
000150   1303     bcf     0x03, 0x6        
000151   0800     movf    0x00, 0x0        	MOVF	INDF,W
000152   1283     bcf     0x03, 0x5        	BANKSEL	r0x1010
000153   1303     bcf     0x03, 0x6        
000154   00db     movwf   0x5b             	MOVWF	r0x1010
000155   085b     movf    0x5b, 0x0        	MOVF	r0x1010,W
000156   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
000157   2a07     goto    0x0207           	GOTO	_00143_DS_
                                           ;	.line	109; "SW.c"	(SWs_Info[index].sw_samples[1] == SW_PRESSED_LEVEL))
000158   3001     movlw   0x01             	MOVLW	0x01
000159   0757     addwf   0x57, 0x0        	ADDWF	r0x100C,W
00015a   00db     movwf   0x5b             	MOVWF	r0x1010
00015b   01dc     clrf    0x5c             	CLRF	r0x1011
00015c   0ddc     rlf     0x5c, 0x1        	RLF	r0x1011,F
00015d   0858     movf    0x58, 0x0        	MOVF	r0x100D,W
00015e   07dc     addwf   0x5c, 0x1        	ADDWF	r0x1011,F
00015f   085b     movf    0x5b, 0x0        	MOVF	r0x1010,W
000160   1283     bcf     0x03, 0x5        	BANKSEL	FSR
000161   1303     bcf     0x03, 0x6        
000162   0084     movwf   0x04             	MOVWF	FSR
000163   1383     bcf     0x03, 0x7        	BCF	STATUS,7
000164   1283     bcf     0x03, 0x5        	BANKSEL	r0x1011
000165   1303     bcf     0x03, 0x6        
000166   185c     btfsc   0x5c, 0x0        	BTFSC	r0x1011,0
000167   1783     bsf     0x03, 0x7        	BSF	STATUS,7
000168   1283     bcf     0x03, 0x5        	BANKSEL	INDF
000169   1303     bcf     0x03, 0x6        
00016a   0800     movf    0x00, 0x0        	MOVF	INDF,W
00016b   1283     bcf     0x03, 0x5        	BANKSEL	r0x1012
00016c   1303     bcf     0x03, 0x6        
00016d   00dd     movwf   0x5d             	MOVWF	r0x1012
00016e   085d     movf    0x5d, 0x0        	MOVF	r0x1012,W
00016f   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
000170   2a07     goto    0x0207           	GOTO	_00143_DS_
                                           ;	.line	111; "SW.c"	SWs_Info[index].sw_state = SW_PRE_PRESSED;
000171   0859     movf    0x59, 0x0        	MOVF	r0x100E,W
000172   1283     bcf     0x03, 0x5        	BANKSEL	FSR
000173   1303     bcf     0x03, 0x6        
000174   0084     movwf   0x04             	MOVWF	FSR
000175   1383     bcf     0x03, 0x7        	BCF	STATUS,7
000176   1283     bcf     0x03, 0x5        	BANKSEL	r0x100F
000177   1303     bcf     0x03, 0x6        
000178   185a     btfsc   0x5a, 0x0        	BTFSC	r0x100F,0
000179   1783     bsf     0x03, 0x7        	BSF	STATUS,7
00017a   3001     movlw   0x01             	MOVLW	0x01
00017b   1283     bcf     0x03, 0x5        	BANKSEL	INDF
00017c   1303     bcf     0x03, 0x6        
00017d   0080     movwf   0x00             	MOVWF	INDF
                                           ;	.line	116; "SW.c"	break;
00017e   2a07     goto    0x0207           	GOTO	_00143_DS_
                                           _00129_DS_
                                           ;	.line	119; "SW.c"	if (SWs_Info[index].sw_samples[1] == SW_PRESSED_LEVEL)
00017f   3001     movlw   0x01             	MOVLW	0x01
000180   1283     bcf     0x03, 0x5        	BANKSEL	r0x100C
000181   1303     bcf     0x03, 0x6        
000182   0757     addwf   0x57, 0x0        	ADDWF	r0x100C,W
000183   00db     movwf   0x5b             	MOVWF	r0x1010
000184   01dc     clrf    0x5c             	CLRF	r0x1011
000185   0ddc     rlf     0x5c, 0x1        	RLF	r0x1011,F
000186   0858     movf    0x58, 0x0        	MOVF	r0x100D,W
000187   07dc     addwf   0x5c, 0x1        	ADDWF	r0x1011,F
000188   085b     movf    0x5b, 0x0        	MOVF	r0x1010,W
000189   1283     bcf     0x03, 0x5        	BANKSEL	FSR
00018a   1303     bcf     0x03, 0x6        
00018b   0084     movwf   0x04             	MOVWF	FSR
00018c   1383     bcf     0x03, 0x7        	BCF	STATUS,7
00018d   1283     bcf     0x03, 0x5        	BANKSEL	r0x1011
00018e   1303     bcf     0x03, 0x6        
00018f   185c     btfsc   0x5c, 0x0        	BTFSC	r0x1011,0
000190   1783     bsf     0x03, 0x7        	BSF	STATUS,7
000191   1283     bcf     0x03, 0x5        	BANKSEL	INDF
000192   1303     bcf     0x03, 0x6        
000193   0800     movf    0x00, 0x0        	MOVF	INDF,W
000194   1283     bcf     0x03, 0x5        	BANKSEL	r0x1012
000195   1303     bcf     0x03, 0x6        
000196   00dd     movwf   0x5d             	MOVWF	r0x1012
000197   085d     movf    0x5d, 0x0        	MOVF	r0x1012,W
000198   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
000199   2a07     goto    0x0207           	GOTO	_00143_DS_
                                           ;	.line	121; "SW.c"	SWs_Info[index].sw_state = SW_PRESSED;
00019a   0859     movf    0x59, 0x0        	MOVF	r0x100E,W
00019b   1283     bcf     0x03, 0x5        	BANKSEL	FSR
00019c   1303     bcf     0x03, 0x6        
00019d   0084     movwf   0x04             	MOVWF	FSR
00019e   1383     bcf     0x03, 0x7        	BCF	STATUS,7
00019f   1283     bcf     0x03, 0x5        	BANKSEL	r0x100F
0001a0   1303     bcf     0x03, 0x6        
0001a1   185a     btfsc   0x5a, 0x0        	BTFSC	r0x100F,0
0001a2   1783     bsf     0x03, 0x7        	BSF	STATUS,7
0001a3   3002     movlw   0x02             	MOVLW	0x02
0001a4   1283     bcf     0x03, 0x5        	BANKSEL	INDF
0001a5   1303     bcf     0x03, 0x6        
0001a6   0080     movwf   0x00             	MOVWF	INDF
                                           ;	.line	126; "SW.c"	break;
0001a7   2a07     goto    0x0207           	GOTO	_00143_DS_
                                           _00132_DS_
                                           ;	.line	129; "SW.c"	if ((SWs_Info[index].sw_samples[0] == SW_RELEASED_LEVEL) &&
0001a8   1283     bcf     0x03, 0x5        	BANKSEL	r0x100C
0001a9   1303     bcf     0x03, 0x6        
0001aa   0857     movf    0x57, 0x0        	MOVF	r0x100C,W
0001ab   1283     bcf     0x03, 0x5        	BANKSEL	FSR
0001ac   1303     bcf     0x03, 0x6        
0001ad   0084     movwf   0x04             	MOVWF	FSR
0001ae   1383     bcf     0x03, 0x7        	BCF	STATUS,7
0001af   1283     bcf     0x03, 0x5        	BANKSEL	r0x100D
0001b0   1303     bcf     0x03, 0x6        
0001b1   1858     btfsc   0x58, 0x0        	BTFSC	r0x100D,0
0001b2   1783     bsf     0x03, 0x7        	BSF	STATUS,7
0001b3   1283     bcf     0x03, 0x5        	BANKSEL	INDF
0001b4   1303     bcf     0x03, 0x6        
0001b5   0800     movf    0x00, 0x0        	MOVF	INDF,W
0001b6   1283     bcf     0x03, 0x5        	BANKSEL	r0x1010
0001b7   1303     bcf     0x03, 0x6        
0001b8   00db     movwf   0x5b             	MOVWF	r0x1010
0001b9   3a01     xorlw   0x01             	XORLW	0x01
0001ba   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
0001bb   2a07     goto    0x0207           	GOTO	_00143_DS_
                                           ;	.line	130; "SW.c"	(SWs_Info[index].sw_samples[1] == SW_RELEASED_LEVEL))
0001bc   3001     movlw   0x01             	MOVLW	0x01
0001bd   0757     addwf   0x57, 0x0        	ADDWF	r0x100C,W
0001be   00db     movwf   0x5b             	MOVWF	r0x1010
0001bf   01dc     clrf    0x5c             	CLRF	r0x1011
0001c0   0ddc     rlf     0x5c, 0x1        	RLF	r0x1011,F
0001c1   0858     movf    0x58, 0x0        	MOVF	r0x100D,W
0001c2   07dc     addwf   0x5c, 0x1        	ADDWF	r0x1011,F
0001c3   085b     movf    0x5b, 0x0        	MOVF	r0x1010,W
0001c4   1283     bcf     0x03, 0x5        	BANKSEL	FSR
0001c5   1303     bcf     0x03, 0x6        
0001c6   0084     movwf   0x04             	MOVWF	FSR
0001c7   1383     bcf     0x03, 0x7        	BCF	STATUS,7
0001c8   1283     bcf     0x03, 0x5        	BANKSEL	r0x1011
0001c9   1303     bcf     0x03, 0x6        
0001ca   185c     btfsc   0x5c, 0x0        	BTFSC	r0x1011,0
0001cb   1783     bsf     0x03, 0x7        	BSF	STATUS,7
0001cc   1283     bcf     0x03, 0x5        	BANKSEL	INDF
0001cd   1303     bcf     0x03, 0x6        
0001ce   0800     movf    0x00, 0x0        	MOVF	INDF,W
0001cf   1283     bcf     0x03, 0x5        	BANKSEL	r0x1012
0001d0   1303     bcf     0x03, 0x6        
0001d1   00dd     movwf   0x5d             	MOVWF	r0x1012
0001d2   3a01     xorlw   0x01             	XORLW	0x01
0001d3   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
0001d4   2a07     goto    0x0207           	GOTO	_00143_DS_
                                           ;	.line	132; "SW.c"	SWs_Info[index].sw_state = SW_PRE_RELEASED;
0001d5   0859     movf    0x59, 0x0        	MOVF	r0x100E,W
0001d6   1283     bcf     0x03, 0x5        	BANKSEL	FSR
0001d7   1303     bcf     0x03, 0x6        
0001d8   0084     movwf   0x04             	MOVWF	FSR
0001d9   1383     bcf     0x03, 0x7        	BCF	STATUS,7
0001da   1283     bcf     0x03, 0x5        	BANKSEL	r0x100F
0001db   1303     bcf     0x03, 0x6        
0001dc   185a     btfsc   0x5a, 0x0        	BTFSC	r0x100F,0
0001dd   1783     bsf     0x03, 0x7        	BSF	STATUS,7
0001de   3003     movlw   0x03             	MOVLW	0x03
0001df   1283     bcf     0x03, 0x5        	BANKSEL	INDF
0001e0   1303     bcf     0x03, 0x6        
0001e1   0080     movwf   0x00             	MOVWF	INDF
                                           ;	.line	138; "SW.c"	break;
0001e2   2a07     goto    0x0207           	GOTO	_00143_DS_
                                           _00136_DS_
                                           ;	.line	141; "SW.c"	if (SWs_Info[index].sw_samples[1] == SW_RELEASED_LEVEL)
0001e3   1283     bcf     0x03, 0x5        	BANKSEL	r0x100C
0001e4   1303     bcf     0x03, 0x6        
0001e5   0ad7     incf    0x57, 0x1        	INCF	r0x100C,F
0001e6   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
0001e7   0ad8     incf    0x58, 0x1        	INCF	r0x100D,F
0001e8   0857     movf    0x57, 0x0        	MOVF	r0x100C,W
0001e9   1283     bcf     0x03, 0x5        	BANKSEL	FSR
0001ea   1303     bcf     0x03, 0x6        
0001eb   0084     movwf   0x04             	MOVWF	FSR
0001ec   1383     bcf     0x03, 0x7        	BCF	STATUS,7
0001ed   1283     bcf     0x03, 0x5        	BANKSEL	r0x100D
0001ee   1303     bcf     0x03, 0x6        
0001ef   1858     btfsc   0x58, 0x0        	BTFSC	r0x100D,0
0001f0   1783     bsf     0x03, 0x7        	BSF	STATUS,7
0001f1   1283     bcf     0x03, 0x5        	BANKSEL	INDF
0001f2   1303     bcf     0x03, 0x6        
0001f3   0800     movf    0x00, 0x0        	MOVF	INDF,W
0001f4   1283     bcf     0x03, 0x5        	BANKSEL	r0x1010
0001f5   1303     bcf     0x03, 0x6        
0001f6   00db     movwf   0x5b             	MOVWF	r0x1010
0001f7   3a01     xorlw   0x01             	XORLW	0x01
0001f8   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
0001f9   2a07     goto    0x0207           	GOTO	_00143_DS_
                                           ;	.line	143; "SW.c"	SWs_Info[index].sw_state = SW_RELEASED;
0001fa   0859     movf    0x59, 0x0        	MOVF	r0x100E,W
0001fb   1283     bcf     0x03, 0x5        	BANKSEL	FSR
0001fc   1303     bcf     0x03, 0x6        
0001fd   0084     movwf   0x04             	MOVWF	FSR
0001fe   1383     bcf     0x03, 0x7        	BCF	STATUS,7
0001ff   1283     bcf     0x03, 0x5        	BANKSEL	r0x100F
000200   1303     bcf     0x03, 0x6        
000201   185a     btfsc   0x5a, 0x0        	BTFSC	r0x100F,0
000202   1783     bsf     0x03, 0x7        	BSF	STATUS,7
000203   3000     movlw   0x00             	MOVLW	0x00
000204   1283     bcf     0x03, 0x5        	BANKSEL	INDF
000205   1303     bcf     0x03, 0x6        
000206   0080     movwf   0x00             	MOVWF	INDF
                                           _00143_DS_
                                           ;	.line	80; "SW.c"	for (index = SW_PLUS; index < N_SWITCHES; index++)
000207   1283     bcf     0x03, 0x5        	BANKSEL	r0x100B
000208   1303     bcf     0x03, 0x6        
000209   0ad6     incf    0x56, 0x1        	INCF	r0x100B,F
                                           ;;unsigned compare: left < lit(0x3=3), size=1
00020a   3003     movlw   0x03             	MOVLW	0x03
00020b   0256     subwf   0x56, 0x0        	SUBWF	r0x100B,W
00020c   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
00020d   286c     goto    0x006c           	GOTO	_00142_DS_
                                           ;;genSkipc:3247: created from rifx:027A5E04
                                           _00144_DS_
00020e   0008     return                   	RETURN	
                                           ; exit point of _SW_Update

                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _SW_GetState	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;functions called:
                                           ;   __mulchar
                                           ;   __mulchar
                                           ;5 compiler assigned registers:
                                           ;   r0x1013
                                           ;   STK00
                                           ;   r0x1014
                                           ;   r0x1015
                                           ;   r0x1016
                                           ;; Starting pCode block
                                           _SW_GetState	;Function start
                                           ; 2 exit points
                                           ;	.line	55; "SW.c"	tSW_State SW_GetState(tSW sw)
00020f   1283     bcf     0x03, 0x5        	BANKSEL	r0x1013
000210   1303     bcf     0x03, 0x6        
000211   00d2     movwf   0x52             	MOVWF	r0x1013
                                           ;	.line	59; "SW.c"	return SWs_Info[sw].sw_state;
000212   3003     movlw   0x03             	MOVLW	0x03
000213   00ff     movwf   0x7f             	MOVWF	STK00
000214   0852     movf    0x52, 0x0        	MOVF	r0x1013,W
000215   158a     bsf     0x0a, 0x3        	PAGESEL	__mulchar
000216   120a     bcf     0x0a, 0x4        
000217   262e     call    0x062e           	CALL	__mulchar
000218   118a     bcf     0x0a, 0x3        	PAGESEL	$
000219   120a     bcf     0x0a, 0x4        
00021a   1283     bcf     0x03, 0x5        	BANKSEL	r0x1014
00021b   1303     bcf     0x03, 0x6        
00021c   00d3     movwf   0x53             	MOVWF	r0x1014
00021d   01d4     clrf    0x54             	CLRF	r0x1015
00021e   0853     movf    0x53, 0x0        	MOVF	r0x1014,W
00021f   3e5e     addlw   0x5e             	ADDLW	(_SWs_Info + 0)
000220   00d2     movwf   0x52             	MOVWF	r0x1013
000221   3000     movlw   0x00             	MOVLW	high (_SWs_Info + 0)
000222   00d5     movwf   0x55             	MOVWF	r0x1016
000223   3000     movlw   0x00             	MOVLW	0x00
000224   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
000225   0f54     incfsz  0x54, 0x0        	INCFSZ	r0x1015,W
000226   07d5     addwf   0x55, 0x1        	ADDWF	r0x1016,F
000227   3002     movlw   0x02             	MOVLW	0x02
000228   07d2     addwf   0x52, 0x1        	ADDWF	r0x1013,F
000229   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
00022a   0ad5     incf    0x55, 0x1        	INCF	r0x1016,F
00022b   0852     movf    0x52, 0x0        	MOVF	r0x1013,W
00022c   1283     bcf     0x03, 0x5        	BANKSEL	FSR
00022d   1303     bcf     0x03, 0x6        
00022e   0084     movwf   0x04             	MOVWF	FSR
00022f   1383     bcf     0x03, 0x7        	BCF	STATUS,7
000230   1283     bcf     0x03, 0x5        	BANKSEL	r0x1016
000231   1303     bcf     0x03, 0x6        
000232   1855     btfsc   0x55, 0x0        	BTFSC	r0x1016,0
000233   1783     bsf     0x03, 0x7        	BSF	STATUS,7
000234   1283     bcf     0x03, 0x5        	BANKSEL	INDF
000235   1303     bcf     0x03, 0x6        
000236   0800     movf    0x00, 0x0        	MOVF	INDF,W
000237   1283     bcf     0x03, 0x5        	BANKSEL	r0x1014
000238   1303     bcf     0x03, 0x6        
000239   00d3     movwf   0x53             	MOVWF	r0x1014
00023a   0008     return                   	RETURN	
                                           ; exit point of _SW_GetState

                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _SW_Init	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;functions called:
                                           ;   __mulchar
                                           ;   __mulchar
                                           ;6 compiler assigned registers:
                                           ;   r0x1017
                                           ;   STK00
                                           ;   r0x1018
                                           ;   r0x1019
                                           ;   r0x101A
                                           ;   r0x101B
                                           ;; Starting pCode block
                                           _SW_Init	;Function start
                                           ; 2 exit points
                                           ;	.line	36; "SW.c"	GPIO_InitPortPin(SW_PLUS_PORT_CR, SW_PLUS_PIN,   GPIO_IN);
00023b   1683     bsf     0x03, 0x5        	BANKSEL	_TRISB
00023c   1303     bcf     0x03, 0x6        
00023d   0806     movf    0x06, 0x0        	MOVF	_TRISB,W
00023e   1283     bcf     0x03, 0x5        	BANKSEL	r0x1017
00023f   1303     bcf     0x03, 0x6        
000240   00cd     movwf   0x4d             	MOVWF	r0x1017
000241   114d     bcf     0x4d, 0x2        	BCF	r0x1017,2
000242   3004     movlw   0x04             	MOVLW	0x04
000243   044d     iorwf   0x4d, 0x0        	IORWF	r0x1017,W
000244   1683     bsf     0x03, 0x5        	BANKSEL	_TRISB
000245   1303     bcf     0x03, 0x6        
000246   0086     movwf   0x06             	MOVWF	_TRISB
                                           ;	.line	37; "SW.c"	GPIO_InitPortPin(SW_MINUS_PORT_CR, SW_MINUS_PIN, GPIO_IN);
000247   0806     movf    0x06, 0x0        	MOVF	_TRISB,W
000248   1283     bcf     0x03, 0x5        	BANKSEL	r0x1017
000249   1303     bcf     0x03, 0x6        
00024a   00cd     movwf   0x4d             	MOVWF	r0x1017
00024b   10cd     bcf     0x4d, 0x1        	BCF	r0x1017,1
00024c   3002     movlw   0x02             	MOVLW	0x02
00024d   044d     iorwf   0x4d, 0x0        	IORWF	r0x1017,W
00024e   1683     bsf     0x03, 0x5        	BANKSEL	_TRISB
00024f   1303     bcf     0x03, 0x6        
000250   0086     movwf   0x06             	MOVWF	_TRISB
                                           ;	.line	38; "SW.c"	GPIO_InitPortPin(SW_ONOFF_PORT_CR, SW_ONOFF_PIN, GPIO_IN);
000251   0806     movf    0x06, 0x0        	MOVF	_TRISB,W
000252   1283     bcf     0x03, 0x5        	BANKSEL	r0x1017
000253   1303     bcf     0x03, 0x6        
000254   00cd     movwf   0x4d             	MOVWF	r0x1017
000255   104d     bcf     0x4d, 0x0        	BCF	r0x1017,0
000256   3001     movlw   0x01             	MOVLW	0x01
000257   044d     iorwf   0x4d, 0x0        	IORWF	r0x1017,W
000258   1683     bsf     0x03, 0x5        	BANKSEL	_TRISB
000259   1303     bcf     0x03, 0x6        
00025a   0086     movwf   0x06             	MOVWF	_TRISB
                                           ;	.line	41; "SW.c"	for (index = SW_PLUS; index < N_SWITCHES; index++)
00025b   1283     bcf     0x03, 0x5        	BANKSEL	r0x1017
00025c   1303     bcf     0x03, 0x6        
00025d   01cd     clrf    0x4d             	CLRF	r0x1017
                                           _00106_DS_
                                           ;	.line	44; "SW.c"	SWs_Info[index].sw_samples[0] = SW_RELEASED_LEVEL;
00025e   3003     movlw   0x03             	MOVLW	0x03
00025f   00ff     movwf   0x7f             	MOVWF	STK00
000260   1283     bcf     0x03, 0x5        	BANKSEL	r0x1017
000261   1303     bcf     0x03, 0x6        
000262   084d     movf    0x4d, 0x0        	MOVF	r0x1017,W
000263   158a     bsf     0x0a, 0x3        	PAGESEL	__mulchar
000264   120a     bcf     0x0a, 0x4        
000265   262e     call    0x062e           	CALL	__mulchar
000266   118a     bcf     0x0a, 0x3        	PAGESEL	$
000267   120a     bcf     0x0a, 0x4        
000268   1283     bcf     0x03, 0x5        	BANKSEL	r0x1018
000269   1303     bcf     0x03, 0x6        
00026a   00ce     movwf   0x4e             	MOVWF	r0x1018
00026b   01cf     clrf    0x4f             	CLRF	r0x1019
00026c   084e     movf    0x4e, 0x0        	MOVF	r0x1018,W
00026d   3e5e     addlw   0x5e             	ADDLW	(_SWs_Info + 0)
00026e   00d0     movwf   0x50             	MOVWF	r0x101A
00026f   3000     movlw   0x00             	MOVLW	high (_SWs_Info + 0)
000270   00d1     movwf   0x51             	MOVWF	r0x101B
000271   3000     movlw   0x00             	MOVLW	0x00
000272   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
000273   0f4f     incfsz  0x4f, 0x0        	INCFSZ	r0x1019,W
000274   07d1     addwf   0x51, 0x1        	ADDWF	r0x101B,F
000275   0850     movf    0x50, 0x0        	MOVF	r0x101A,W
000276   1283     bcf     0x03, 0x5        	BANKSEL	FSR
000277   1303     bcf     0x03, 0x6        
000278   0084     movwf   0x04             	MOVWF	FSR
000279   1383     bcf     0x03, 0x7        	BCF	STATUS,7
00027a   1283     bcf     0x03, 0x5        	BANKSEL	r0x101B
00027b   1303     bcf     0x03, 0x6        
00027c   1851     btfsc   0x51, 0x0        	BTFSC	r0x101B,0
00027d   1783     bsf     0x03, 0x7        	BSF	STATUS,7
00027e   3001     movlw   0x01             	MOVLW	0x01
00027f   1283     bcf     0x03, 0x5        	BANKSEL	INDF
000280   1303     bcf     0x03, 0x6        
000281   0080     movwf   0x00             	MOVWF	INDF
                                           ;	.line	45; "SW.c"	SWs_Info[index].sw_samples[1] = SW_RELEASED_LEVEL;
000282   1283     bcf     0x03, 0x5        	BANKSEL	r0x1018
000283   1303     bcf     0x03, 0x6        
000284   084e     movf    0x4e, 0x0        	MOVF	r0x1018,W
000285   3e5e     addlw   0x5e             	ADDLW	(_SWs_Info + 0)
000286   00d0     movwf   0x50             	MOVWF	r0x101A
000287   3000     movlw   0x00             	MOVLW	high (_SWs_Info + 0)
000288   00d1     movwf   0x51             	MOVWF	r0x101B
000289   084f     movf    0x4f, 0x0        	MOVF	r0x1019,W
00028a   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
00028b   0f4f     incfsz  0x4f, 0x0        	INCFSZ	r0x1019,W
00028c   07d1     addwf   0x51, 0x1        	ADDWF	r0x101B,F
00028d   0ad0     incf    0x50, 0x1        	INCF	r0x101A,F
00028e   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
00028f   0ad1     incf    0x51, 0x1        	INCF	r0x101B,F
000290   0850     movf    0x50, 0x0        	MOVF	r0x101A,W
000291   1283     bcf     0x03, 0x5        	BANKSEL	FSR
000292   1303     bcf     0x03, 0x6        
000293   0084     movwf   0x04             	MOVWF	FSR
000294   1383     bcf     0x03, 0x7        	BCF	STATUS,7
000295   1283     bcf     0x03, 0x5        	BANKSEL	r0x101B
000296   1303     bcf     0x03, 0x6        
000297   1851     btfsc   0x51, 0x0        	BTFSC	r0x101B,0
000298   1783     bsf     0x03, 0x7        	BSF	STATUS,7
000299   3001     movlw   0x01             	MOVLW	0x01
00029a   1283     bcf     0x03, 0x5        	BANKSEL	INDF
00029b   1303     bcf     0x03, 0x6        
00029c   0080     movwf   0x00             	MOVWF	INDF
                                           ;	.line	48; "SW.c"	SWs_Info[index].sw_state = SW_RELEASED;
00029d   1283     bcf     0x03, 0x5        	BANKSEL	r0x1018
00029e   1303     bcf     0x03, 0x6        
00029f   084e     movf    0x4e, 0x0        	MOVF	r0x1018,W
0002a0   3e5e     addlw   0x5e             	ADDLW	(_SWs_Info + 0)
0002a1   00ce     movwf   0x4e             	MOVWF	r0x1018
0002a2   084f     movf    0x4f, 0x0        	MOVF	r0x1019,W
0002a3   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
0002a4   0f4f     incfsz  0x4f, 0x0        	INCFSZ	r0x1019,W
0002a5   3e00     addlw   0x00             	ADDLW	high (_SWs_Info + 0)
0002a6   00cf     movwf   0x4f             	MOVWF	r0x1019
0002a7   3002     movlw   0x02             	MOVLW	0x02
0002a8   07ce     addwf   0x4e, 0x1        	ADDWF	r0x1018,F
0002a9   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
0002aa   0acf     incf    0x4f, 0x1        	INCF	r0x1019,F
0002ab   084e     movf    0x4e, 0x0        	MOVF	r0x1018,W
0002ac   1283     bcf     0x03, 0x5        	BANKSEL	FSR
0002ad   1303     bcf     0x03, 0x6        
0002ae   0084     movwf   0x04             	MOVWF	FSR
0002af   1383     bcf     0x03, 0x7        	BCF	STATUS,7
0002b0   1283     bcf     0x03, 0x5        	BANKSEL	r0x1019
0002b1   1303     bcf     0x03, 0x6        
0002b2   184f     btfsc   0x4f, 0x0        	BTFSC	r0x1019,0
0002b3   1783     bsf     0x03, 0x7        	BSF	STATUS,7
0002b4   3000     movlw   0x00             	MOVLW	0x00
0002b5   1283     bcf     0x03, 0x5        	BANKSEL	INDF
0002b6   1303     bcf     0x03, 0x6        
0002b7   0080     movwf   0x00             	MOVWF	INDF
                                           ;	.line	41; "SW.c"	for (index = SW_PLUS; index < N_SWITCHES; index++)
0002b8   1283     bcf     0x03, 0x5        	BANKSEL	r0x1017
0002b9   1303     bcf     0x03, 0x6        
0002ba   0acd     incf    0x4d, 0x1        	INCF	r0x1017,F
                                           ;;unsigned compare: left < lit(0x3=3), size=1
0002bb   3003     movlw   0x03             	MOVLW	0x03
0002bc   024d     subwf   0x4d, 0x0        	SUBWF	r0x1017,W
0002bd   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
0002be   2a5e     goto    0x025e           	GOTO	_00106_DS_
                                           ;;genSkipc:3247: created from rifx:027A5E04
0002bf   0008     return                   	RETURN	
                                           ; exit point of _SW_Init


                                           ;	code size estimation:
                                           ;	  385+  116 =   501 instructions ( 1234 byte)

                                           	end
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.5.0 #9253 (Jun 20 2015) (MINGW32)
                                           ; This file was generated Sun Jul 05 12:24:39 2020
                                           ;--------------------------------------------------------
                                           ; PIC port for the 14-bit core
                                           ;--------------------------------------------------------
                                           ;	.file	"tempset.c"
                                           	list	p=16f877a
                                           	radix dec
                                           	include "p16f877a.inc"
                                                   LIST

                                           ;==========================================================================
                                           ; Build date : Oct 21 2015
                                           ;  MPASM PIC16F877A processor include
                                           ; 
                                           ;  (c) Copyright 1999-2015 Microchip Technology, All rights reserved
                                           ;==========================================================================

                                                   NOLIST
                                           ;--------------------------------------------------------
                                           ; external declarations
                                           ;--------------------------------------------------------
                                           	extern	_SW_Init
                                           	extern	_SW_GetState
                                           	extern	_SW_Update
                                           	extern	_TMR_Init
                                           	extern	_TMR_Start
                                           	extern	_TMR_CheckOverFlow
                                           	extern	_TMR_Stop
                                           	extern	_TMR_Update
                                           	extern	_SSD_Init
                                           	extern	_SSD_Update
                                           	extern	_SSD_SetValue
                                           	extern	_SSD_GetValue
                                           	extern	_SSD_GetState
                                           	extern	_SSD_SetState
                                           	extern	_SSD_SetDotState
                                           	extern	_e2prom_r
                                           	extern	_e2prom_w
                                           	extern	_i2c_init
                                           	extern	_i2c_start
                                           	extern	_i2c_stop
                                           	extern	_i2c_wb
                                           	extern	_i2c_rb
                                           	extern	_i2c_acktst
                                           	extern	_e2pext_r
                                           	extern	_e2pext_w
                                           	extern	_e2pext_init
                                           	extern	__moduint
                                           	extern	__divuint
                                           	extern	_STATUSbits
                                           	extern	_PORTAbits
                                           	extern	_PORTBbits
                                           	extern	_PORTCbits
                                           	extern	_PORTDbits
                                           	extern	_PORTEbits
                                           	extern	_INTCONbits
                                           	extern	_PIR1bits
                                           	extern	_PIR2bits
                                           	extern	_T1CONbits
                                           	extern	_T2CONbits
                                           	extern	_SSPCONbits
                                           	extern	_CCP1CONbits
                                           	extern	_RCSTAbits
                                           	extern	_CCP2CONbits
                                           	extern	_ADCON0bits
                                           	extern	_OPTION_REGbits
                                           	extern	_TRISAbits
                                           	extern	_TRISBbits
                                           	extern	_TRISCbits
                                           	extern	_TRISDbits
                                           	extern	_TRISEbits
                                           	extern	_PIE1bits
                                           	extern	_PIE2bits
                                           	extern	_PCONbits
                                           	extern	_SSPCON2bits
                                           	extern	_SSPSTATbits
                                           	extern	_TXSTAbits
                                           	extern	_CMCONbits
                                           	extern	_CVRCONbits
                                           	extern	_ADCON1bits
                                           	extern	_EECON1bits
                                           	extern	_INDF
                                           	extern	_TMR0
                                           	extern	_PCL
                                           	extern	_STATUS
                                           	extern	_FSR
                                           	extern	_PORTA
                                           	extern	_PORTB
                                           	extern	_PORTC
                                           	extern	_PORTD
                                           	extern	_PORTE
                                           	extern	_PCLATH
                                           	extern	_INTCON
                                           	extern	_PIR1
                                           	extern	_PIR2
                                           	extern	_TMR1
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_T1CON
                                           	extern	_TMR2
                                           	extern	_T2CON
                                           	extern	_SSPBUF
                                           	extern	_SSPCON
                                           	extern	_CCPR1
                                           	extern	_CCPR1L
                                           	extern	_CCPR1H
                                           	extern	_CCP1CON
                                           	extern	_RCSTA
                                           	extern	_TXREG
                                           	extern	_RCREG
                                           	extern	_CCPR2
                                           	extern	_CCPR2L
                                           	extern	_CCPR2H
                                           	extern	_CCP2CON
                                           	extern	_ADRESH
                                           	extern	_ADCON0
                                           	extern	_OPTION_REG
                                           	extern	_TRISA
                                           	extern	_TRISB
                                           	extern	_TRISC
                                           	extern	_TRISD
                                           	extern	_TRISE
                                           	extern	_PIE1
                                           	extern	_PIE2
                                           	extern	_PCON
                                           	extern	_SSPCON2
                                           	extern	_PR2
                                           	extern	_SSPADD
                                           	extern	_SSPSTAT
                                           	extern	_TXSTA
                                           	extern	_SPBRG
                                           	extern	_CMCON
                                           	extern	_CVRCON
                                           	extern	_ADRESL
                                           	extern	_ADCON1
                                           	extern	_EEDATA
                                           	extern	_EEADR
                                           	extern	_EEDATH
                                           	extern	_EEADRH
                                           	extern	_EECON1
                                           	extern	_EECON2

                                           	extern PSAVE
                                           	extern SSAVE
                                           	extern WSAVE
                                           	extern STK12
                                           	extern STK11
                                           	extern STK10
                                           	extern STK09
                                           	extern STK08
                                           	extern STK07
                                           	extern STK06
                                           	extern STK05
                                           	extern STK04
                                           	extern STK03
                                           	extern STK02
                                           	extern STK01
                                           	extern STK00
                                           ;--------------------------------------------------------
                                           ; global declarations
                                           ;--------------------------------------------------------
                                           	global	_tempset_update
                                           	global	_tempset_gettemp
                                           	global	_tempset_getstate
                                           	global	_tempset_settemp
                                           	global	_tempset_setstate
                                           	global	_tempset_init

                                           ;--------------------------------------------------------
                                           ; global definitions
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; absolute symbol definitions
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; compiler-defined variables
                                           ;--------------------------------------------------------
                                           UDL_tempset_0	udata
                                           r0x1007	res	1
                                           r0x1009	res	1
                                           r0x100A	res	1
                                           r0x100B	res	1
                                           r0x100C	res	1
                                           _tempstate	res	3
                                           _tempset_update_taskcount_1_44	res	2
                                           _tempset_update_notpressedcount_1_44	res	2
                                           ;--------------------------------------------------------
                                           ; initialized data
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; overlayable items in internal ram 
                                           ;--------------------------------------------------------
                                           ;	udata_ovr
                                           ;--------------------------------------------------------
                                           ; code
                                           ;--------------------------------------------------------
                                           code_tempset	code
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _tempset_update	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;functions called:
                                           ;   _tempset_getstate
                                           ;   _SW_GetState
                                           ;   _SW_GetState
                                           ;   _tempset_setstate
                                           ;   _SW_GetState
                                           ;   _tempset_gettemp
                                           ;   _tempset_settemp
                                           ;   _tempset_settemp
                                           ;   _SW_GetState
                                           ;   _tempset_gettemp
                                           ;   _tempset_settemp
                                           ;   _tempset_settemp
                                           ;   _SW_GetState
                                           ;   _SW_GetState
                                           ;   _tempset_setstate
                                           ;   _tempset_gettemp
                                           ;   __moduint
                                           ;   _SSD_SetValue
                                           ;   _tempset_gettemp
                                           ;   __divuint
                                           ;   _SSD_SetValue
                                           ;   _tempset_setstate
                                           ;   _tempset_gettemp
                                           ;   _e2pext_w
                                           ;   _tempset_getstate
                                           ;   _SW_GetState
                                           ;   _SW_GetState
                                           ;   _tempset_setstate
                                           ;   _SW_GetState
                                           ;   _tempset_gettemp
                                           ;   _tempset_settemp
                                           ;   _tempset_settemp
                                           ;   _SW_GetState
                                           ;   _tempset_gettemp
                                           ;   _tempset_settemp
                                           ;   _tempset_settemp
                                           ;   _SW_GetState
                                           ;   _SW_GetState
                                           ;   _tempset_setstate
                                           ;   _tempset_gettemp
                                           ;   __moduint
                                           ;   _SSD_SetValue
                                           ;   _tempset_gettemp
                                           ;   __divuint
                                           ;   _SSD_SetValue
                                           ;   _tempset_setstate
                                           ;   _tempset_gettemp
                                           ;   _e2pext_w
                                           ;7 compiler assigned registers:
                                           ;   r0x1009
                                           ;   r0x100A
                                           ;   STK00
                                           ;   r0x100B
                                           ;   r0x100C
                                           ;   STK02
                                           ;   STK01
                                           ;; Starting pCode block
                                           _tempset_update	;Function start
                                           ; 2 exit points
                                           ;	.line	65; "tempset.c"	taskcount+=TMR_TICK_MS;
00042d   3014     movlw   0x14             	MOVLW	0x14
00042e   1683     bsf     0x03, 0x5        	BANKSEL	_tempset_update_taskcount_1_44
00042f   1303     bcf     0x03, 0x6        
000430   07df     addwf   0x5f, 0x1        	ADDWF	_tempset_update_taskcount_1_44,F
000431   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
000432   0ae0     incf    0x60, 0x1        	INCF	(_tempset_update_taskcount_1_44 + 1),F
                                           ;	.line	66; "tempset.c"	if(taskcount!=taskperiod)
000433   085f     movf    0x5f, 0x0        	MOVF	_tempset_update_taskcount_1_44,W
000434   3a14     xorlw   0x14             	XORLW	0x14
000435   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
000436   2c3a     goto    0x043a           	GOTO	_00195_DS_
000437   0860     movf    0x60, 0x0        	MOVF	(_tempset_update_taskcount_1_44 + 1),W
                                           ;	.line	68; "tempset.c"	return;
000438   3a00     xorlw   0x00             	XORLW	0x00
                                           ;	.line	70; "tempset.c"	taskcount=0;
000439   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
                                           _00195_DS_
00043a   2d74     goto    0x0574           	GOTO	_00157_DS_
00043b   1683     bsf     0x03, 0x5        	BANKSEL	_tempset_update_taskcount_1_44
00043c   1303     bcf     0x03, 0x6        
00043d   01df     clrf    0x5f             	CLRF	_tempset_update_taskcount_1_44
00043e   01e0     clrf    0x60             	CLRF	(_tempset_update_taskcount_1_44 + 1)
                                           ;	.line	72; "tempset.c"	notpressedcount+=TMR_TICK_MS;
00043f   3014     movlw   0x14             	MOVLW	0x14
000440   1683     bsf     0x03, 0x5        	BANKSEL	_tempset_update_notpressedcount_1_44
000441   1303     bcf     0x03, 0x6        
000442   07e1     addwf   0x61, 0x1        	ADDWF	_tempset_update_notpressedcount_1_44,F
000443   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
000444   0ae2     incf    0x62, 0x1        	INCF	(_tempset_update_notpressedcount_1_44 + 1),F
                                           ;	.line	74; "tempset.c"	switch(tempset_getstate())
000445   257b     call    0x057b           	CALL	_tempset_getstate
000446   1683     bsf     0x03, 0x5        	BANKSEL	r0x1009
000447   1303     bcf     0x03, 0x6        
000448   00d8     movwf   0x58             	MOVWF	r0x1009
                                           ;;swapping arguments (AOP_TYPEs 1/2)
                                           ;;unsigned compare: left >= lit(0x4=4), size=1
000449   3004     movlw   0x04             	MOVLW	0x04
00044a   0258     subwf   0x58, 0x0        	SUBWF	r0x1009,W
00044b   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
00044c   2d74     goto    0x0574           	GOTO	_00157_DS_
                                           ;;genSkipc:3247: created from rifx:027A5E04
00044d   3004     movlw   0x04             	MOVLW	HIGH(_00197_DS_)
00044e   1283     bcf     0x03, 0x5        	BANKSEL	PCLATH
00044f   1303     bcf     0x03, 0x6        
000450   008a     movwf   0x0a             	MOVWF	PCLATH
000451   305b     movlw   0x5b             	MOVLW	_00197_DS_
000452   1683     bsf     0x03, 0x5        	BANKSEL	r0x1009
000453   1303     bcf     0x03, 0x6        
000454   0758     addwf   0x58, 0x0        	ADDWF	r0x1009,W
000455   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
000456   2c5a     goto    0x045a           	GOTO	_00001_DS_
000457   1283     bcf     0x03, 0x5        	BANKSEL	PCLATH
000458   1303     bcf     0x03, 0x6        
000459   0a8a     incf    0x0a, 0x1        	INCF	PCLATH,F
                                           _00001_DS_
00045a   0082     movwf   0x02             	MOVWF	PCL
                                           _00197_DS_
00045b   2c5f     goto    0x045f           	GOTO	_00127_DS_
00045c   2c7e     goto    0x047e           	GOTO	_00131_DS_
00045d   2d1b     goto    0x051b           	GOTO	_00153_DS_
00045e   2d60     goto    0x0560           	GOTO	_00154_DS_
                                           _00127_DS_
                                           ;	.line	77; "tempset.c"	if(SW_GetState(SW_PLUS)==SW_PRE_RELEASED || SW_GetState(SW_MINUS)==SW_PRE_RELEASED)
00045f   3000     movlw   0x00             	MOVLW	0x00
000460   118a     bcf     0x0a, 0x3        	PAGESEL	_SW_GetState
000461   120a     bcf     0x0a, 0x4        
000462   220f     call    0x020f           	CALL	_SW_GetState
000463   118a     bcf     0x0a, 0x3        	PAGESEL	$
000464   120a     bcf     0x0a, 0x4        
000465   1683     bsf     0x03, 0x5        	BANKSEL	r0x1009
000466   1303     bcf     0x03, 0x6        
000467   00d8     movwf   0x58             	MOVWF	r0x1009
000468   3a03     xorlw   0x03             	XORLW	0x03
000469   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
00046a   2c77     goto    0x0477           	GOTO	_00128_DS_
00046b   3001     movlw   0x01             	MOVLW	0x01
00046c   118a     bcf     0x0a, 0x3        	PAGESEL	_SW_GetState
00046d   120a     bcf     0x0a, 0x4        
00046e   220f     call    0x020f           	CALL	_SW_GetState
00046f   118a     bcf     0x0a, 0x3        	PAGESEL	$
000470   120a     bcf     0x0a, 0x4        
000471   1683     bsf     0x03, 0x5        	BANKSEL	r0x1009
000472   1303     bcf     0x03, 0x6        
000473   00d8     movwf   0x58             	MOVWF	r0x1009
000474   3a03     xorlw   0x03             	XORLW	0x03
000475   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
000476   2d74     goto    0x0574           	GOTO	_00157_DS_
                                           _00128_DS_
                                           ;	.line	79; "tempset.c"	tempset_setstate(setting);
000477   3001     movlw   0x01             	MOVLW	0x01
000478   258d     call    0x058d           	CALL	_tempset_setstate
                                           ;	.line	80; "tempset.c"	notpressedcount=0;
000479   1683     bsf     0x03, 0x5        	BANKSEL	_tempset_update_notpressedcount_1_44
00047a   1303     bcf     0x03, 0x6        
00047b   01e1     clrf    0x61             	CLRF	_tempset_update_notpressedcount_1_44
00047c   01e2     clrf    0x62             	CLRF	(_tempset_update_notpressedcount_1_44 + 1)
                                           ;	.line	82; "tempset.c"	break;
00047d   2d74     goto    0x0574           	GOTO	_00157_DS_
                                           _00131_DS_
                                           ;	.line	85; "tempset.c"	if(SW_GetState(SW_PLUS)==SW_PRE_RELEASED )
00047e   3000     movlw   0x00             	MOVLW	0x00
00047f   118a     bcf     0x0a, 0x3        	PAGESEL	_SW_GetState
000480   120a     bcf     0x0a, 0x4        
000481   220f     call    0x020f           	CALL	_SW_GetState
000482   118a     bcf     0x0a, 0x3        	PAGESEL	$
000483   120a     bcf     0x0a, 0x4        
000484   1683     bsf     0x03, 0x5        	BANKSEL	r0x1009
000485   1303     bcf     0x03, 0x6        
000486   00d8     movwf   0x58             	MOVWF	r0x1009
000487   3a03     xorlw   0x03             	XORLW	0x03
000488   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
000489   2cb5     goto    0x04b5           	GOTO	_00151_DS_
                                           ;	.line	87; "tempset.c"	temp=tempset_gettemp()+5;
00048a   2575     call    0x0575           	CALL	_tempset_gettemp
00048b   1683     bsf     0x03, 0x5        	BANKSEL	r0x100A
00048c   1303     bcf     0x03, 0x6        
00048d   00d9     movwf   0x59             	MOVWF	r0x100A
00048e   087f     movf    0x7f, 0x0        	MOVF	STK00,W
00048f   00d8     movwf   0x58             	MOVWF	r0x1009
000490   3005     movlw   0x05             	MOVLW	0x05
000491   07d8     addwf   0x58, 0x1        	ADDWF	r0x1009,F
000492   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
000493   0ad9     incf    0x59, 0x1        	INCF	r0x100A,F
                                           ;;swapping arguments (AOP_TYPEs 1/2)
                                           ;;unsigned compare: left >= lit(0x4C=76), size=2
                                           ;	.line	88; "tempset.c"	if(temp<=maxtemp)
000494   3000     movlw   0x00             	MOVLW	0x00
000495   0259     subwf   0x59, 0x0        	SUBWF	r0x100A,W
000496   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
000497   2c9a     goto    0x049a           	GOTO	_00199_DS_
000498   304c     movlw   0x4c             	MOVLW	0x4c
000499   0258     subwf   0x58, 0x0        	SUBWF	r0x1009,W
                                           _00199_DS_
00049a   1683     bsf     0x03, 0x5        	BANKSEL	r0x100B
00049b   1303     bcf     0x03, 0x6        
00049c   01da     clrf    0x5a             	CLRF	r0x100B
00049d   0dda     rlf     0x5a, 0x1        	RLF	r0x100B,F
00049e   085a     movf    0x5a, 0x0        	MOVF	r0x100B,W
00049f   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
0004a0   2ca6     goto    0x04a6           	GOTO	_00135_DS_
                                           ;	.line	90; "tempset.c"	tempset_settemp(temp);
0004a1   0858     movf    0x58, 0x0        	MOVF	r0x1009,W
0004a2   00ff     movwf   0x7f             	MOVWF	STK00
0004a3   0859     movf    0x59, 0x0        	MOVF	r0x100A,W
0004a4   257f     call    0x057f           	CALL	_tempset_settemp
0004a5   2cb0     goto    0x04b0           	GOTO	_00136_DS_
                                           _00135_DS_
                                           ;	.line	92; "tempset.c"	else if(temp>maxtemp)
0004a6   3000     movlw   0x00             	MOVLW	0x00
0004a7   1683     bsf     0x03, 0x5        	BANKSEL	r0x100B
0004a8   1303     bcf     0x03, 0x6        
0004a9   045a     iorwf   0x5a, 0x0        	IORWF	r0x100B,W
0004aa   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
0004ab   2cb0     goto    0x04b0           	GOTO	_00136_DS_
                                           ;	.line	95; "tempset.c"	tempset_settemp(temp);
0004ac   304b     movlw   0x4b             	MOVLW	0x4b
0004ad   00ff     movwf   0x7f             	MOVWF	STK00
0004ae   3000     movlw   0x00             	MOVLW	0x00
0004af   257f     call    0x057f           	CALL	_tempset_settemp
                                           _00136_DS_
                                           ;	.line	97; "tempset.c"	notpressedcount=0;
0004b0   1683     bsf     0x03, 0x5        	BANKSEL	_tempset_update_notpressedcount_1_44
0004b1   1303     bcf     0x03, 0x6        
0004b2   01e1     clrf    0x61             	CLRF	_tempset_update_notpressedcount_1_44
0004b3   01e2     clrf    0x62             	CLRF	(_tempset_update_notpressedcount_1_44 + 1)
0004b4   2d74     goto    0x0574           	GOTO	_00157_DS_
                                           _00151_DS_
                                           ;	.line	100; "tempset.c"	else if(SW_GetState(SW_MINUS)==SW_PRE_RELEASED)
0004b5   3001     movlw   0x01             	MOVLW	0x01
0004b6   118a     bcf     0x0a, 0x3        	PAGESEL	_SW_GetState
0004b7   120a     bcf     0x0a, 0x4        
0004b8   220f     call    0x020f           	CALL	_SW_GetState
0004b9   118a     bcf     0x0a, 0x3        	PAGESEL	$
0004ba   120a     bcf     0x0a, 0x4        
0004bb   1683     bsf     0x03, 0x5        	BANKSEL	r0x100B
0004bc   1303     bcf     0x03, 0x6        
0004bd   00da     movwf   0x5a             	MOVWF	r0x100B
0004be   3a03     xorlw   0x03             	XORLW	0x03
0004bf   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
0004c0   2cf2     goto    0x04f2           	GOTO	_00148_DS_
                                           ;	.line	102; "tempset.c"	temp=tempset_gettemp()-5;
0004c1   2575     call    0x0575           	CALL	_tempset_gettemp
0004c2   1683     bsf     0x03, 0x5        	BANKSEL	r0x100C
0004c3   1303     bcf     0x03, 0x6        
0004c4   00db     movwf   0x5b             	MOVWF	r0x100C
0004c5   087f     movf    0x7f, 0x0        	MOVF	STK00,W
0004c6   00da     movwf   0x5a             	MOVWF	r0x100B
0004c7   30fb     movlw   0xfb             	MOVLW	0xfb
0004c8   075a     addwf   0x5a, 0x0        	ADDWF	r0x100B,W
0004c9   00d8     movwf   0x58             	MOVWF	r0x1009
0004ca   30ff     movlw   0xff             	MOVLW	0xff
0004cb   00d9     movwf   0x59             	MOVWF	r0x100A
0004cc   085b     movf    0x5b, 0x0        	MOVF	r0x100C,W
0004cd   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
0004ce   0f5b     incfsz  0x5b, 0x0        	INCFSZ	r0x100C,W
0004cf   07d9     addwf   0x59, 0x1        	ADDWF	r0x100A,F
                                           ;;unsigned compare: left < lit(0x23=35), size=2
                                           ;	.line	103; "tempset.c"	if(temp>=mintemp)
0004d0   3000     movlw   0x00             	MOVLW	0x00
0004d1   0259     subwf   0x59, 0x0        	SUBWF	r0x100A,W
0004d2   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
0004d3   2cd6     goto    0x04d6           	GOTO	_00200_DS_
0004d4   3023     movlw   0x23             	MOVLW	0x23
0004d5   0258     subwf   0x58, 0x0        	SUBWF	r0x1009,W
                                           _00200_DS_
0004d6   1683     bsf     0x03, 0x5        	BANKSEL	r0x100B
0004d7   1303     bcf     0x03, 0x6        
0004d8   01da     clrf    0x5a             	CLRF	r0x100B
0004d9   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
0004da   145a     bsf     0x5a, 0x0        	BSF	r0x100B,0
0004db   085a     movf    0x5a, 0x0        	MOVF	r0x100B,W
0004dc   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
0004dd   2ce3     goto    0x04e3           	GOTO	_00140_DS_
                                           ;	.line	105; "tempset.c"	tempset_settemp(temp);
0004de   0858     movf    0x58, 0x0        	MOVF	r0x1009,W
0004df   00ff     movwf   0x7f             	MOVWF	STK00
0004e0   0859     movf    0x59, 0x0        	MOVF	r0x100A,W
0004e1   257f     call    0x057f           	CALL	_tempset_settemp
0004e2   2ced     goto    0x04ed           	GOTO	_00141_DS_
                                           _00140_DS_
                                           ;	.line	107; "tempset.c"	else if(temp<mintemp)
0004e3   3000     movlw   0x00             	MOVLW	0x00
0004e4   1683     bsf     0x03, 0x5        	BANKSEL	r0x100B
0004e5   1303     bcf     0x03, 0x6        
0004e6   045a     iorwf   0x5a, 0x0        	IORWF	r0x100B,W
0004e7   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
0004e8   2ced     goto    0x04ed           	GOTO	_00141_DS_
                                           ;	.line	110; "tempset.c"	tempset_settemp(temp);
0004e9   3023     movlw   0x23             	MOVLW	0x23
0004ea   00ff     movwf   0x7f             	MOVWF	STK00
0004eb   3000     movlw   0x00             	MOVLW	0x00
0004ec   257f     call    0x057f           	CALL	_tempset_settemp
                                           _00141_DS_
                                           ;	.line	112; "tempset.c"	notpressedcount=0;
0004ed   1683     bsf     0x03, 0x5        	BANKSEL	_tempset_update_notpressedcount_1_44
0004ee   1303     bcf     0x03, 0x6        
0004ef   01e1     clrf    0x61             	CLRF	_tempset_update_notpressedcount_1_44
0004f0   01e2     clrf    0x62             	CLRF	(_tempset_update_notpressedcount_1_44 + 1)
0004f1   2d74     goto    0x0574           	GOTO	_00157_DS_
                                           _00148_DS_
                                           ;	.line	115; "tempset.c"	else if(SW_GetState(SW_PLUS)==SW_RELEASED && SW_GetState(SW_MINUS)==SW_RELEASED)
0004f2   3000     movlw   0x00             	MOVLW	0x00
0004f3   118a     bcf     0x0a, 0x3        	PAGESEL	_SW_GetState
0004f4   120a     bcf     0x0a, 0x4        
0004f5   220f     call    0x020f           	CALL	_SW_GetState
0004f6   118a     bcf     0x0a, 0x3        	PAGESEL	$
0004f7   120a     bcf     0x0a, 0x4        
0004f8   1683     bsf     0x03, 0x5        	BANKSEL	r0x1009
0004f9   1303     bcf     0x03, 0x6        
0004fa   00d8     movwf   0x58             	MOVWF	r0x1009
0004fb   0858     movf    0x58, 0x0        	MOVF	r0x1009,W
0004fc   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
0004fd   2d74     goto    0x0574           	GOTO	_00157_DS_
0004fe   3001     movlw   0x01             	MOVLW	0x01
0004ff   118a     bcf     0x0a, 0x3        	PAGESEL	_SW_GetState
000500   120a     bcf     0x0a, 0x4        
000501   220f     call    0x020f           	CALL	_SW_GetState
000502   118a     bcf     0x0a, 0x3        	PAGESEL	$
000503   120a     bcf     0x0a, 0x4        
000504   1683     bsf     0x03, 0x5        	BANKSEL	r0x1009
000505   1303     bcf     0x03, 0x6        
000506   00d8     movwf   0x58             	MOVWF	r0x1009
000507   0858     movf    0x58, 0x0        	MOVF	r0x1009,W
000508   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
000509   2d74     goto    0x0574           	GOTO	_00157_DS_
                                           ;;unsigned compare: left < lit(0x1388=5000), size=2
                                           ;	.line	117; "tempset.c"	if(notpressedcount>=notpressedperiod)
00050a   3013     movlw   0x13             	MOVLW	0x13
00050b   1683     bsf     0x03, 0x5        	BANKSEL	_tempset_update_notpressedcount_1_44
00050c   1303     bcf     0x03, 0x6        
00050d   0262     subwf   0x62, 0x0        	SUBWF	(_tempset_update_notpressedcount_1_44 + 1),W
00050e   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
00050f   2d12     goto    0x0512           	GOTO	_00201_DS_
000510   3088     movlw   0x88             	MOVLW	0x88
000511   0261     subwf   0x61, 0x0        	SUBWF	_tempset_update_notpressedcount_1_44,W
                                           _00201_DS_
000512   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
000513   2d74     goto    0x0574           	GOTO	_00157_DS_
                                           ;;genSkipc:3247: created from rifx:027A5E04
                                           ;	.line	119; "tempset.c"	tempset_setstate(isset);
000514   3002     movlw   0x02             	MOVLW	0x02
000515   258d     call    0x058d           	CALL	_tempset_setstate
                                           ;	.line	120; "tempset.c"	notpressedcount=0;
000516   1683     bsf     0x03, 0x5        	BANKSEL	_tempset_update_notpressedcount_1_44
000517   1303     bcf     0x03, 0x6        
000518   01e1     clrf    0x61             	CLRF	_tempset_update_notpressedcount_1_44
000519   01e2     clrf    0x62             	CLRF	(_tempset_update_notpressedcount_1_44 + 1)
                                           ;	.line	125; "tempset.c"	break;
00051a   2d74     goto    0x0574           	GOTO	_00157_DS_
                                           _00153_DS_
                                           ;	.line	128; "tempset.c"	notpressedcount=0;
00051b   1683     bsf     0x03, 0x5        	BANKSEL	_tempset_update_notpressedcount_1_44
00051c   1303     bcf     0x03, 0x6        
00051d   01e1     clrf    0x61             	CLRF	_tempset_update_notpressedcount_1_44
00051e   01e2     clrf    0x62             	CLRF	(_tempset_update_notpressedcount_1_44 + 1)
                                           ;	.line	129; "tempset.c"	SSD_SetValue(SSD_UNITS,tempset_gettemp()%10);
00051f   2575     call    0x0575           	CALL	_tempset_gettemp
000520   1683     bsf     0x03, 0x5        	BANKSEL	r0x100A
000521   1303     bcf     0x03, 0x6        
000522   00d9     movwf   0x59             	MOVWF	r0x100A
000523   087f     movf    0x7f, 0x0        	MOVF	STK00,W
000524   00d8     movwf   0x58             	MOVWF	r0x1009
000525   300a     movlw   0x0a             	MOVLW	0x0a
000526   00fd     movwf   0x7d             	MOVWF	STK02
000527   3000     movlw   0x00             	MOVLW	0x00
000528   00fe     movwf   0x7e             	MOVWF	STK01
000529   0858     movf    0x58, 0x0        	MOVF	r0x1009,W
00052a   00ff     movwf   0x7f             	MOVWF	STK00
00052b   0859     movf    0x59, 0x0        	MOVF	r0x100A,W
00052c   158a     bsf     0x0a, 0x3        	PAGESEL	__moduint
00052d   120a     bcf     0x0a, 0x4        
00052e   2516     call    0x0516           	CALL	__moduint
00052f   118a     bcf     0x0a, 0x3        	PAGESEL	$
000530   120a     bcf     0x0a, 0x4        
000531   1683     bsf     0x03, 0x5        	BANKSEL	r0x100A
000532   1303     bcf     0x03, 0x6        
000533   00d9     movwf   0x59             	MOVWF	r0x100A
000534   087f     movf    0x7f, 0x0        	MOVF	STK00,W
000535   00d8     movwf   0x58             	MOVWF	r0x1009
000536   00da     movwf   0x5a             	MOVWF	r0x100B
000537   00ff     movwf   0x7f             	MOVWF	STK00
000538   3000     movlw   0x00             	MOVLW	0x00
000539   118a     bcf     0x0a, 0x3        	PAGESEL	_SSD_SetValue
00053a   120a     bcf     0x0a, 0x4        
00053b   2358     call    0x0358           	CALL	_SSD_SetValue
00053c   118a     bcf     0x0a, 0x3        	PAGESEL	$
00053d   120a     bcf     0x0a, 0x4        
                                           ;	.line	130; "tempset.c"	SSD_SetValue(SSD_TENS,tempset_gettemp()/10);
00053e   2575     call    0x0575           	CALL	_tempset_gettemp
00053f   1683     bsf     0x03, 0x5        	BANKSEL	r0x100A
000540   1303     bcf     0x03, 0x6        
000541   00d9     movwf   0x59             	MOVWF	r0x100A
000542   087f     movf    0x7f, 0x0        	MOVF	STK00,W
000543   00d8     movwf   0x58             	MOVWF	r0x1009
000544   300a     movlw   0x0a             	MOVLW	0x0a
000545   00fd     movwf   0x7d             	MOVWF	STK02
000546   3000     movlw   0x00             	MOVLW	0x00
000547   00fe     movwf   0x7e             	MOVWF	STK01
000548   0858     movf    0x58, 0x0        	MOVF	r0x1009,W
000549   00ff     movwf   0x7f             	MOVWF	STK00
00054a   0859     movf    0x59, 0x0        	MOVF	r0x100A,W
00054b   118a     bcf     0x0a, 0x3        	PAGESEL	__divuint
00054c   120a     bcf     0x0a, 0x4        
00054d   27aa     call    0x07aa           	CALL	__divuint
00054e   118a     bcf     0x0a, 0x3        	PAGESEL	$
00054f   120a     bcf     0x0a, 0x4        
000550   1683     bsf     0x03, 0x5        	BANKSEL	r0x100A
000551   1303     bcf     0x03, 0x6        
000552   00d9     movwf   0x59             	MOVWF	r0x100A
000553   087f     movf    0x7f, 0x0        	MOVF	STK00,W
000554   00d8     movwf   0x58             	MOVWF	r0x1009
000555   00da     movwf   0x5a             	MOVWF	r0x100B
000556   00ff     movwf   0x7f             	MOVWF	STK00
000557   3001     movlw   0x01             	MOVLW	0x01
000558   118a     bcf     0x0a, 0x3        	PAGESEL	_SSD_SetValue
000559   120a     bcf     0x0a, 0x4        
00055a   2358     call    0x0358           	CALL	_SSD_SetValue
00055b   118a     bcf     0x0a, 0x3        	PAGESEL	$
00055c   120a     bcf     0x0a, 0x4        
                                           ;	.line	131; "tempset.c"	tempset_setstate(working);
00055d   3003     movlw   0x03             	MOVLW	0x03
00055e   258d     call    0x058d           	CALL	_tempset_setstate
                                           ;	.line	132; "tempset.c"	break;
00055f   2d74     goto    0x0574           	GOTO	_00157_DS_
                                           _00154_DS_
                                           ;	.line	136; "tempset.c"	epromtemp=tempset_gettemp();
000560   2575     call    0x0575           	CALL	_tempset_gettemp
000561   1683     bsf     0x03, 0x5        	BANKSEL	r0x100A
000562   1303     bcf     0x03, 0x6        
000563   00d9     movwf   0x59             	MOVWF	r0x100A
000564   087f     movf    0x7f, 0x0        	MOVF	STK00,W
000565   00d8     movwf   0x58             	MOVWF	r0x1009
                                           ;	.line	138; "tempset.c"	e2pext_w(10,epromtemp);
000566   00da     movwf   0x5a             	MOVWF	r0x100B
000567   00fe     movwf   0x7e             	MOVWF	STK01
000568   300a     movlw   0x0a             	MOVLW	0x0a
000569   00ff     movwf   0x7f             	MOVWF	STK00
00056a   3000     movlw   0x00             	MOVLW	0x00
00056b   118a     bcf     0x0a, 0x3        	PAGESEL	_e2pext_w
00056c   120a     bcf     0x0a, 0x4        
00056d   2597     call    0x0597           	CALL	_e2pext_w
00056e   118a     bcf     0x0a, 0x3        	PAGESEL	$
00056f   120a     bcf     0x0a, 0x4        
                                           ;	.line	139; "tempset.c"	notpressedcount=0;
000570   1683     bsf     0x03, 0x5        	BANKSEL	_tempset_update_notpressedcount_1_44
000571   1303     bcf     0x03, 0x6        
000572   01e1     clrf    0x61             	CLRF	_tempset_update_notpressedcount_1_44
000573   01e2     clrf    0x62             	CLRF	(_tempset_update_notpressedcount_1_44 + 1)
                                           _00157_DS_
                                           ;	.line	144; "tempset.c"	}
000574   0008     return                   	RETURN	
                                           ; exit point of _tempset_update

                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _tempset_gettemp	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;3 compiler assigned registers:
                                           ;   r0x1007
                                           ;   r0x1008
                                           ;   STK00
                                           ;; Starting pCode block
                                           _tempset_gettemp	;Function start
                                           ; 2 exit points
                                           ;;104	MOVF	(_tempstate + 1),W
                                           ;;102	MOVWF	r0x1007
                                           ;;101	MOVF	(_tempstate + 2),W
                                           ;;99	MOVWF	r0x1008
                                           ;;103	MOVF	r0x1007,W
                                           ;	.line	55; "tempset.c"	return tempstate.currenttemprature;
000575   1683     bsf     0x03, 0x5        	BANKSEL	_tempstate
000576   1303     bcf     0x03, 0x6        
000577   085d     movf    0x5d, 0x0        	MOVF	(_tempstate + 1),W
000578   00ff     movwf   0x7f             	MOVWF	STK00
                                           ;;100	MOVF	r0x1008,W
000579   085e     movf    0x5e, 0x0        	MOVF	(_tempstate + 2),W
00057a   0008     return                   	RETURN	
                                           ; exit point of _tempset_gettemp

                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _tempset_getstate	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;1 compiler assigned register :
                                           ;   r0x1007
                                           ;; Starting pCode block
                                           _tempset_getstate	;Function start
                                           ; 2 exit points
                                           ;	.line	50; "tempset.c"	return tempstate.currentstate;
00057b   1683     bsf     0x03, 0x5        	BANKSEL	_tempstate
00057c   1303     bcf     0x03, 0x6        
00057d   085c     movf    0x5c, 0x0        	MOVF	(_tempstate + 0),W
                                           ;;1	MOVWF	r0x1007
00057e   0008     return                   	RETURN	
                                           ; exit point of _tempset_getstate

                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _tempset_settemp	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;3 compiler assigned registers:
                                           ;   r0x1007
                                           ;   STK00
                                           ;   r0x1008
                                           ;; Starting pCode block
                                           _tempset_settemp	;Function start
                                           ; 2 exit points
                                           ;	.line	43; "tempset.c"	void tempset_settemp(tWord temprature)
00057f   1683     bsf     0x03, 0x5        	BANKSEL	r0x1007
000580   1303     bcf     0x03, 0x6        
000581   00d7     movwf   0x57             	MOVWF	r0x1007
000582   087f     movf    0x7f, 0x0        	MOVF	STK00,W
                                           ;;1	MOVWF	r0x1008
                                           ;	.line	45; "tempset.c"	tempstate.currenttemprature=temprature;
000583   1683     bsf     0x03, 0x5        	BANKSEL	_tempstate
000584   1303     bcf     0x03, 0x6        
000585   00dd     movwf   0x5d             	MOVWF	(_tempstate + 1)
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=0, offset=1, AOP_TYPE(res)=8
000586   1683     bsf     0x03, 0x5        	BANKSEL	r0x1007
000587   1303     bcf     0x03, 0x6        
000588   0857     movf    0x57, 0x0        	MOVF	r0x1007,W
000589   1683     bsf     0x03, 0x5        	BANKSEL	_tempstate
00058a   1303     bcf     0x03, 0x6        
00058b   00de     movwf   0x5e             	MOVWF	(_tempstate + 2)
00058c   0008     return                   	RETURN	
                                           ; exit point of _tempset_settemp

                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _tempset_setstate	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;1 compiler assigned register :
                                           ;   r0x1007
                                           ;; Starting pCode block
                                           _tempset_setstate	;Function start
                                           ; 2 exit points
                                           ;;1	MOVWF	r0x1007
                                           ;	.line	40; "tempset.c"	tempstate.currentstate=state;
00058d   1683     bsf     0x03, 0x5        	BANKSEL	_tempstate
00058e   1303     bcf     0x03, 0x6        
00058f   00dc     movwf   0x5c             	MOVWF	(_tempstate + 0)
000590   0008     return                   	RETURN	
                                           ; exit point of _tempset_setstate

                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _tempset_init	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;functions called:
                                           ;   _tempset_setstate
                                           ;   _tempset_setstate
                                           ;1 compiler assigned register :
                                           ;   r0x100D
                                           ;; Starting pCode block
                                           _tempset_init	;Function start
                                           ; 2 exit points
                                           ;;1	MOVWF	r0x100D
                                           ;	.line	34; "tempset.c"	tempset_setstate(state);
000591   118a     bcf     0x0a, 0x3        	PAGESEL	_tempset_setstate
000592   120a     bcf     0x0a, 0x4        
000593   258d     call    0x058d           	CALL	_tempset_setstate
000594   118a     bcf     0x0a, 0x3        	PAGESEL	$
000595   120a     bcf     0x0a, 0x4        
000596   0008     return                   	RETURN	
                                           ; exit point of _tempset_init


                                           ;	code size estimation:
                                           ;	  238+   62 =   300 instructions (  724 byte)

                                           	end
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.5.0 #9253 (Jun 20 2015) (MINGW32)
                                           ; This file was generated Sat Jul 04 19:09:00 2020
                                           ;--------------------------------------------------------
                                           ; PIC port for the 14-bit core
                                           ;--------------------------------------------------------
                                           ;	.file	"Timer.c"
                                           	list	p=16f877a
                                           	radix dec
                                           	include "p16f877a.inc"
                                                   LIST

                                           ;==========================================================================
                                           ; Build date : Oct 21 2015
                                           ;  MPASM PIC16F877A processor include
                                           ; 
                                           ;  (c) Copyright 1999-2015 Microchip Technology, All rights reserved
                                           ;==========================================================================

                                                   NOLIST
                                           ;--------------------------------------------------------
                                           ; external declarations
                                           ;--------------------------------------------------------
                                           	extern	_SW_Init
                                           	extern	_SW_GetState
                                           	extern	_SW_Update
                                           	extern	_tempset_init
                                           	extern	_tempset_setstate
                                           	extern	_tempset_settemp
                                           	extern	_tempset_getstate
                                           	extern	_tempset_gettemp
                                           	extern	_tempset_update
                                           	extern	_SSD_Init
                                           	extern	_SSD_Update
                                           	extern	_SSD_SetValue
                                           	extern	_SSD_GetValue
                                           	extern	_SSD_GetState
                                           	extern	_SSD_SetState
                                           	extern	_SSD_SetDotState
                                           	extern	_heaterstate_init
                                           	extern	_heaterstate_setstate
                                           	extern	_heaterstate_getstate
                                           	extern	_heaterstate_update
                                           	extern	_display_init
                                           	extern	_display_update
                                           	extern	_lm35_init
                                           	extern	_lm35_set_currentTemp
                                           	extern	_lm35_get_currentTemp
                                           	extern	_lm35_update
                                           	extern	_heater_init
                                           	extern	_heater_set_state
                                           	extern	_heater_get_state
                                           	extern	_heater_update
                                           	extern	_cooler_init
                                           	extern	_cooler_set_state
                                           	extern	_cooler_get_state
                                           	extern	_cooler_update
                                           	extern	_led_init
                                           	extern	_led_set_state
                                           	extern	_led_get_state
                                           	extern	_led_update
                                           	extern	_STATUSbits
                                           	extern	_PORTAbits
                                           	extern	_PORTBbits
                                           	extern	_PORTCbits
                                           	extern	_PORTDbits
                                           	extern	_PORTEbits
                                           	extern	_INTCONbits
                                           	extern	_PIR1bits
                                           	extern	_PIR2bits
                                           	extern	_T1CONbits
                                           	extern	_T2CONbits
                                           	extern	_SSPCONbits
                                           	extern	_CCP1CONbits
                                           	extern	_RCSTAbits
                                           	extern	_CCP2CONbits
                                           	extern	_ADCON0bits
                                           	extern	_OPTION_REGbits
                                           	extern	_TRISAbits
                                           	extern	_TRISBbits
                                           	extern	_TRISCbits
                                           	extern	_TRISDbits
                                           	extern	_TRISEbits
                                           	extern	_PIE1bits
                                           	extern	_PIE2bits
                                           	extern	_PCONbits
                                           	extern	_SSPCON2bits
                                           	extern	_SSPSTATbits
                                           	extern	_TXSTAbits
                                           	extern	_CMCONbits
                                           	extern	_CVRCONbits
                                           	extern	_ADCON1bits
                                           	extern	_EECON1bits
                                           	extern	_flag
                                           	extern	_INDF
                                           	extern	_TMR0
                                           	extern	_PCL
                                           	extern	_STATUS
                                           	extern	_FSR
                                           	extern	_PORTA
                                           	extern	_PORTB
                                           	extern	_PORTC
                                           	extern	_PORTD
                                           	extern	_PORTE
                                           	extern	_PCLATH
                                           	extern	_INTCON
                                           	extern	_PIR1
                                           	extern	_PIR2
                                           	extern	_TMR1
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_T1CON
                                           	extern	_TMR2
                                           	extern	_T2CON
                                           	extern	_SSPBUF
                                           	extern	_SSPCON
                                           	extern	_CCPR1
                                           	extern	_CCPR1L
                                           	extern	_CCPR1H
                                           	extern	_CCP1CON
                                           	extern	_RCSTA
                                           	extern	_TXREG
                                           	extern	_RCREG
                                           	extern	_CCPR2
                                           	extern	_CCPR2L
                                           	extern	_CCPR2H
                                           	extern	_CCP2CON
                                           	extern	_ADRESH
                                           	extern	_ADCON0
                                           	extern	_OPTION_REG
                                           	extern	_TRISA
                                           	extern	_TRISB
                                           	extern	_TRISC
                                           	extern	_TRISD
                                           	extern	_TRISE
                                           	extern	_PIE1
                                           	extern	_PIE2
                                           	extern	_PCON
                                           	extern	_SSPCON2
                                           	extern	_PR2
                                           	extern	_SSPADD
                                           	extern	_SSPSTAT
                                           	extern	_TXSTA
                                           	extern	_SPBRG
                                           	extern	_CMCON
                                           	extern	_CVRCON
                                           	extern	_ADRESL
                                           	extern	_ADCON1
                                           	extern	_EEDATA
                                           	extern	_EEADR
                                           	extern	_EEDATH
                                           	extern	_EEADRH
                                           	extern	_EECON1
                                           	extern	_EECON2
                                           	extern	___sdcc_saved_fsr

                                           	extern PSAVE
                                           	extern SSAVE
                                           	extern WSAVE
                                           	extern STK12
                                           	extern STK11
                                           	extern STK10
                                           	extern STK09
                                           	extern STK08
                                           	extern STK07
                                           	extern STK06
                                           	extern STK05
                                           	extern STK04
                                           	extern STK03
                                           	extern STK02
                                           	extern STK01
                                           	extern STK00
                                           ;--------------------------------------------------------
                                           ; global declarations
                                           ;--------------------------------------------------------
                                           	global	_TMR_Update
                                           	global	_TMR_Stop
                                           	global	_TMR_CheckOverFlow
                                           	global	_TMR_Start
                                           	global	_TMR_Init

                                           ;--------------------------------------------------------
                                           ; global definitions
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; absolute symbol definitions
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; compiler-defined variables
                                           ;--------------------------------------------------------
                                           UDL_Timer_0	udata
                                           r0x1001	res	1
                                           ;--------------------------------------------------------
                                           ; initialized data
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; overlayable items in internal ram 
                                           ;--------------------------------------------------------
                                           ;	udata_ovr
                                           ;--------------------------------------------------------
                                           ; interrupt and initialization code
                                           ;--------------------------------------------------------
                                           c_interrupt	code	0x4
                                           __sdcc_interrupt
                                           ;***
                                           ;  pBlock Stats: dbName = I
                                           ;***
                                           ;entry:  _TMR_Update	;Function start
                                           ; 0 exit points
                                           ;functions called:
                                           ;   _SSD_Update
                                           ;   _SW_Update
                                           ;   _heaterstate_update
                                           ;   _tempset_update
                                           ;   _tempset_getstate
                                           ;   _lm35_update
                                           ;   _heater_update
                                           ;   _cooler_update
                                           ;   _led_update
                                           ;   _display_update
                                           ;   _SSD_Update
                                           ;   _SW_Update
                                           ;   _heaterstate_update
                                           ;   _tempset_update
                                           ;   _tempset_getstate
                                           ;   _lm35_update
                                           ;   _heater_update
                                           ;   _cooler_update
                                           ;   _led_update
                                           ;   _display_update
                                           ;1 compiler assigned register :
                                           ;   r0x1002
                                           ;; Starting pCode block
                                           _TMR_Update	;Function start
                                           ; 0 exit points
                                           ;	.line	44; "Timer.c"	void TMR_Update(void) __interrupt 0
000004   00f2     movwf   0x72             	MOVWF	WSAVE
000005   0e03     swapf   0x03, 0x0        	SWAPF	STATUS,W
000006   0183     clrf    0x03             	CLRF	STATUS
000007   00f1     movwf   0x71             	MOVWF	SSAVE
000008   080a     movf    0x0a, 0x0        	MOVF	PCLATH,W
000009   018a     clrf    0x0a             	CLRF	PCLATH
00000a   00f0     movwf   0x70             	MOVWF	PSAVE
00000b   0804     movf    0x04, 0x0        	MOVF	FSR,W
00000c   1283     bcf     0x03, 0x5        	BANKSEL	___sdcc_saved_fsr
00000d   1703     bsf     0x03, 0x6        
00000e   00ce     movwf   0x4e             	MOVWF	___sdcc_saved_fsr
                                           ;	.line	52; "Timer.c"	TMR_CLEAR_FLAG;
00000f   1283     bcf     0x03, 0x5        	BANKSEL	_INTCONbits
000010   1303     bcf     0x03, 0x6        
000011   110b     bcf     0x0b, 0x2        	BCF	_INTCONbits,2
                                           ;	.line	53; "Timer.c"	TMR_UPDATE_REGISTER(TMR_TICK_MS);
000012   3060     movlw   0x60             	MOVLW	0x60
000013   0081     movwf   0x01             	MOVWF	_TMR0
                                           ;	.line	56; "Timer.c"	SSD_Update();
000014   118a     bcf     0x0a, 0x3        	PAGESEL	_SSD_Update
000015   120a     bcf     0x0a, 0x4        
000016   2388     call    0x0388           	CALL	_SSD_Update
000017   118a     bcf     0x0a, 0x3        	PAGESEL	$
000018   120a     bcf     0x0a, 0x4        
                                           ;	.line	57; "Timer.c"	SW_Update();
000019   118a     bcf     0x0a, 0x3        	PAGESEL	_SW_Update
00001a   120a     bcf     0x0a, 0x4        
00001b   2057     call    0x0057           	CALL	_SW_Update
00001c   118a     bcf     0x0a, 0x3        	PAGESEL	$
00001d   120a     bcf     0x0a, 0x4        
                                           ;	.line	58; "Timer.c"	heaterstate_update();
00001e   158a     bsf     0x0a, 0x3        	PAGESEL	_heaterstate_update
00001f   120a     bcf     0x0a, 0x4        
000020   239b     call    0x039b           	CALL	_heaterstate_update
000021   118a     bcf     0x0a, 0x3        	PAGESEL	$
000022   120a     bcf     0x0a, 0x4        
                                           ;	.line	59; "Timer.c"	tempset_update();
000023   118a     bcf     0x0a, 0x3        	PAGESEL	_tempset_update
000024   120a     bcf     0x0a, 0x4        
000025   242d     call    0x042d           	CALL	_tempset_update
000026   118a     bcf     0x0a, 0x3        	PAGESEL	$
000027   120a     bcf     0x0a, 0x4        
                                           ;	.line	61; "Timer.c"	if(tempset_getstate()==working)
000028   118a     bcf     0x0a, 0x3        	PAGESEL	_tempset_getstate
000029   120a     bcf     0x0a, 0x4        
00002a   257b     call    0x057b           	CALL	_tempset_getstate
00002b   118a     bcf     0x0a, 0x3        	PAGESEL	$
00002c   120a     bcf     0x0a, 0x4        
                                           ;;1	MOVWF	r0x1002
00002d   3a03     xorlw   0x03             	XORLW	0x03
00002e   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
00002f   2844     goto    0x0044           	GOTO	_00122_DS_
                                           ;	.line	63; "Timer.c"	lm35_update();
000030   158a     bsf     0x0a, 0x3        	PAGESEL	_lm35_update
000031   120a     bcf     0x0a, 0x4        
000032   2000     call    0x0000           	CALL	_lm35_update
000033   118a     bcf     0x0a, 0x3        	PAGESEL	$
000034   120a     bcf     0x0a, 0x4        
                                           ;	.line	64; "Timer.c"	heater_update();
000035   158a     bsf     0x0a, 0x3        	PAGESEL	_heater_update
000036   120a     bcf     0x0a, 0x4        
000037   21ef     call    0x01ef           	CALL	_heater_update
000038   118a     bcf     0x0a, 0x3        	PAGESEL	$
000039   120a     bcf     0x0a, 0x4        
                                           ;	.line	65; "Timer.c"	cooler_update();
00003a   158a     bsf     0x0a, 0x3        	PAGESEL	_cooler_update
00003b   120a     bcf     0x0a, 0x4        
00003c   2157     call    0x0157           	CALL	_cooler_update
00003d   118a     bcf     0x0a, 0x3        	PAGESEL	$
00003e   120a     bcf     0x0a, 0x4        
                                           ;	.line	66; "Timer.c"	led_update();
00003f   118a     bcf     0x0a, 0x3        	PAGESEL	_led_update
000040   120a     bcf     0x0a, 0x4        
000041   26ee     call    0x06ee           	CALL	_led_update
000042   118a     bcf     0x0a, 0x3        	PAGESEL	$
000043   120a     bcf     0x0a, 0x4        
                                           _00122_DS_
                                           ;	.line	68; "Timer.c"	display_update();
000044   158a     bsf     0x0a, 0x3        	PAGESEL	_display_update
000045   120a     bcf     0x0a, 0x4        
000046   22dc     call    0x02dc           	CALL	_display_update
000047   118a     bcf     0x0a, 0x3        	PAGESEL	$
000048   120a     bcf     0x0a, 0x4        
000049   1283     bcf     0x03, 0x5        	BANKSEL	___sdcc_saved_fsr
00004a   1703     bsf     0x03, 0x6        
00004b   084e     movf    0x4e, 0x0        	MOVF	___sdcc_saved_fsr,W
00004c   1283     bcf     0x03, 0x5        	BANKSEL	FSR
00004d   1303     bcf     0x03, 0x6        
00004e   0084     movwf   0x04             	MOVWF	FSR
00004f   0870     movf    0x70, 0x0        	MOVF	PSAVE,W
000050   008a     movwf   0x0a             	MOVWF	PCLATH
000051   0183     clrf    0x03             	CLRF	STATUS
000052   0e71     swapf   0x71, 0x0        	SWAPF	SSAVE,W
000053   0083     movwf   0x03             	MOVWF	STATUS
000054   0ef2     swapf   0x72, 0x1        	SWAPF	WSAVE,F
000055   0e72     swapf   0x72, 0x0        	SWAPF	WSAVE,W
                                           END_OF_INTERRUPT
000056   0009     retfie                   	RETFIE	

                                           ;--------------------------------------------------------
                                           ; code
                                           ;--------------------------------------------------------
                                           code_Timer	code
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _TMR_Stop	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;; Starting pCode block
                                           _TMR_Stop	;Function start
                                           ; 2 exit points
                                           ;	.line	40; "Timer.c"	TMR_DISABLE_CLOCK;
000e09   1683     bsf     0x03, 0x5        	BANKSEL	_OPTION_REGbits
000e0a   1303     bcf     0x03, 0x6        
000e0b   1681     bsf     0x01, 0x5        	BSF	_OPTION_REGbits,5
000e0c   0008     return                   	RETURN	
                                           ; exit point of _TMR_Stop

                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _TMR_CheckOverFlow	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;1 compiler assigned register :
                                           ;   r0x1001
                                           ;; Starting pCode block
                                           _TMR_CheckOverFlow	;Function start
                                           ; 2 exit points
                                           ;	.line	34; "Timer.c"	return TMR_GET_FLAG;
000e0d   1283     bcf     0x03, 0x5        	BANKSEL	r0x1001
000e0e   1703     bsf     0x03, 0x6        
000e0f   01cc     clrf    0x4c             	CLRF	r0x1001
000e10   1283     bcf     0x03, 0x5        	BANKSEL	_INTCONbits
000e11   1303     bcf     0x03, 0x6        
000e12   1d0b     btfss   0x0b, 0x2        	BTFSS	_INTCONbits,2
000e13   2e17     goto    0x0617           	GOTO	_00001_DS_
000e14   1283     bcf     0x03, 0x5        	BANKSEL	r0x1001
000e15   1703     bsf     0x03, 0x6        
000e16   0acc     incf    0x4c, 0x1        	INCF	r0x1001,F
                                           _00001_DS_
000e17   1283     bcf     0x03, 0x5        	BANKSEL	r0x1001
000e18   1703     bsf     0x03, 0x6        
000e19   084c     movf    0x4c, 0x0        	MOVF	r0x1001,W
000e1a   0008     return                   	RETURN	
                                           ; exit point of _TMR_CheckOverFlow

                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _TMR_Start	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;; Starting pCode block
                                           _TMR_Start	;Function start
                                           ; 2 exit points
                                           ;	.line	24; "Timer.c"	TMR_CLEAR_FLAG;
000e1b   1283     bcf     0x03, 0x5        	BANKSEL	_INTCONbits
000e1c   1303     bcf     0x03, 0x6        
000e1d   110b     bcf     0x0b, 0x2        	BCF	_INTCONbits,2
                                           ;	.line	25; "Timer.c"	TMR_UPDATE_REGISTER(TMR_TICK_MS);
000e1e   3060     movlw   0x60             	MOVLW	0x60
000e1f   0081     movwf   0x01             	MOVWF	_TMR0
                                           ;	.line	26; "Timer.c"	TMR_ENABLE_INTERRUPT;
000e20   168b     bsf     0x0b, 0x5        	BSF	_INTCONbits,5
                                           ;	.line	27; "Timer.c"	GLOBAL_INTERRUPT_ENABLE;
000e21   178b     bsf     0x0b, 0x7        	BSF	_INTCONbits,7
                                           ;	.line	28; "Timer.c"	TMR_ENABLE_CLOCK;
000e22   1683     bsf     0x03, 0x5        	BANKSEL	_OPTION_REGbits
000e23   1303     bcf     0x03, 0x6        
000e24   1281     bcf     0x01, 0x5        	BCF	_OPTION_REGbits,5
000e25   0008     return                   	RETURN	
                                           ; exit point of _TMR_Start

                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _TMR_Init	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;; Starting pCode block
                                           _TMR_Init	;Function start
                                           ; 2 exit points
                                           ;	.line	17; "Timer.c"	TMR_SET_PRESCALER_256;
000e26   1683     bsf     0x03, 0x5        	BANKSEL	_OPTION_REGbits
000e27   1303     bcf     0x03, 0x6        
000e28   1501     bsf     0x01, 0x2        	BSF	_OPTION_REGbits,2
000e29   1481     bsf     0x01, 0x1        	BSF	_OPTION_REGbits,1
000e2a   1401     bsf     0x01, 0x0        	BSF	_OPTION_REGbits,0
000e2b   1181     bcf     0x01, 0x3        	BCF	_OPTION_REGbits,3
                                           ;	.line	18; "Timer.c"	TMR_DISABLE_CLOCK;
000e2c   1681     bsf     0x01, 0x5        	BSF	_OPTION_REGbits,5
000e2d   0008     return                   	RETURN	
                                           ; exit point of _TMR_Init


                                           ;	code size estimation:
                                           ;	   56+   32 =    88 instructions (  240 byte)

                                           	end
